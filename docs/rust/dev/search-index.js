var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast","cast","cast","cast","cast","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","ENABLED","EXTENSIVE_USE","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","LOG","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","extend","extend","extensive_use","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value_opt","merge","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","month_end","month_end","month_start","month_start","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","lazy","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsMonthEnd","PolarsMonthStart","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","iter_paths","join","join","join","join","join_asof","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","month_end","month_start","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","path","path","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","Quarter","Random","Range","Rank","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_add_owned","try_div","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul","try_mul_owned","try_rem","try_set_metadata","try_sub","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","unstable","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array"],"q":[[0,"polars"],[17,"polars::chunked_array"],[815,"polars::chunked_array::arithmetic"],[843,"polars::chunked_array::builder"],[1100,"polars::chunked_array::builder::list"],[1117,"polars::chunked_array::collect"],[1131,"polars::chunked_array::float"],[1133,"polars::chunked_array::from_iterator_par"],[1137,"polars::chunked_array::iterator"],[1207,"polars::chunked_array::iterator::par"],[1209,"polars::chunked_array::metadata"],[1440,"polars::chunked_array::object"],[1515,"polars::chunked_array::object::builder"],[1538,"polars::chunked_array::object::registry"],[1566,"polars::chunked_array::ops"],[1767,"polars::chunked_array::ops::arity"],[1802,"polars::chunked_array::ops::float_sorted_arg_max"],[1804,"polars::chunked_array::ops::gather"],[1807,"polars::chunked_array::ops::search_sorted"],[1836,"polars::chunked_array::ops::sort"],[1843,"polars::chunked_array::ops::sort::arg_bottom_k"],[1844,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1851,"polars::chunked_array::ops::sort::options"],[1864,"polars::chunked_array::temporal"],[1871,"polars::chunked_array::temporal::conversion"],[1874,"polars::datatypes"],[3252,"polars::datatypes::categorical"],[3269,"polars::datatypes::categorical::revmap"],[3275,"polars::datatypes::categorical::string_cache"],[3294,"polars::docs"],[3296,"polars::error"],[3384,"polars::error::PolarsError"],[3388,"polars::error::constants"],[3391,"polars::frame"],[3644,"polars::frame::explode"],[3673,"polars::frame::group_by"],[3908,"polars::frame::group_by::GroupByMethod"],[3909,"polars::frame::group_by::GroupsProxy"],[3911,"polars::frame::group_by::aggregations"],[3924,"polars::frame::group_by::expr"],[3927,"polars::frame::row"],[4034,"polars::functions"],[4036,"polars::prelude"],[9057,"polars::prelude::AggExpr"],[9064,"polars::prelude::BooleanFunction"],[9067,"polars::prelude::DslPlan"],[9121,"polars::prelude::Expr"],[9156,"polars::prelude::FunctionExpr"],[9177,"polars::prelude::GroupByMethod"],[9178,"polars::prelude::GroupsProxy"],[9180,"polars::prelude::LiteralValue"],[9183,"polars::prelude::PolarsError"],[9187,"polars::prelude::StringFunction"],[9201,"polars::prelude::TemporalFunction"],[9203,"polars::prelude::aggregations"],[9216,"polars::prelude::arity"],[9251,"polars::prelude::array"],[9270,"polars::prelude::binary"],[9286,"polars::prelude::cat"],[9287,"polars::prelude::chunkedarray"],[9354,"polars::prelude::chunkedarray::string"],[9392,"polars::prelude::chunkedarray::string::infer"],[9422,"polars::prelude::cloud"],[9469,"polars::prelude::cloud::options"],[9477,"polars::prelude::datatypes"],[9743,"polars::prelude::datatypes::categorical"],[9760,"polars::prelude::datatypes::categorical::revmap"],[9766,"polars::prelude::datatypes::categorical::string_cache"],[9770,"polars::prelude::datetime"],[9773,"polars::prelude::default_arrays"],[9779,"polars::prelude::dt"],[9831,"polars::prelude::expr"],[9834,"polars::prelude::fixed_size_list"],[9854,"polars::prelude::float_sorted_arg_max"],[9856,"polars::prelude::function_expr"],[10019,"polars::prelude::function_expr::BooleanFunction"],[10022,"polars::prelude::function_expr::FunctionExpr"],[10043,"polars::prelude::function_expr::StringFunction"],[10057,"polars::prelude::function_expr::TemporalFunction"],[10059,"polars::prelude::function_expr::cat"],[10061,"polars::prelude::function_expr::pow"],[10065,"polars::prelude::function_expr::rolling"],[10094,"polars::prelude::function_expr::rolling_by"],[10123,"polars::prelude::gather"],[10126,"polars::prelude::interpolate"],[10130,"polars::prelude::interpolate_by"],[10131,"polars::prelude::mode"],[10132,"polars::prelude::nan_propagating_aggregate"],[10136,"polars::prelude::null"],[10166,"polars::prelude::schema_inference"],[10190,"polars::prelude::search_sorted"],[10196,"polars::prelude::series"],[10218,"polars::prelude::slice"],[10221,"polars::prelude::sort"],[10228,"polars::prelude::sort::arg_bottom_k"],[10229,"polars::prelude::sort::arg_sort_multiple"],[10236,"polars::prelude::sort::options"],[10249,"polars::prelude::strings"],[10303,"polars::prelude::udf"],[10309,"polars::prelude::utf8"],[10313,"polars::series"],[10726,"polars::series::arithmetic"],[10747,"polars::series::arithmetic::checked"],[10753,"polars::series::ops"],[10779,"polars::series::unstable"],[10803,"dyn_clone::sealed"],[10804,"polars_core::datatypes"],[10805,"polars_core::chunked_array"],[10806,"num_traits"],[10807,"num_traits::cast"],[10808,"polars_core::series"],[10809,"polars_error"],[10810,"core::result"],[10811,"polars_core::series::arithmetic::borrowed"],[10812,"polars_core::frame::group_by::proxy"],[10813,"polars_core::chunked_array::object"],[10814,"core::option"],[10815,"polars_arrow::array"],[10816,"alloc::boxed"],[10817,"core::iter::traits::iterator"],[10818,"polars_core::chunked_array::list::iterator"],[10819,"core::ops::function"],[10820,"core::marker"],[10821,"alloc::borrow"],[10822,"polars_core::series::unstable"],[10823,"polars_core::datatypes::dtype"],[10824,"alloc::string"],[10825,"polars_core::chunked_array::ops::sort::options"],[10826,"polars_core::series::arithmetic::borrowed::checked"],[10827,"core::slice::iter"],[10828,"core::iter::adapters::map"],[10829,"alloc::vec"],[10830,"polars_core::chunked_array::metadata"],[10831,"core::iter::traits::double_ended"],[10832,"polars_arrow::offset"],[10833,"core::fmt"],[10834,"core::iter::traits::collect"],[10835,"polars_utils::iter::fallible"],[10836,"core::borrow"],[10837,"polars_core::chunked_array::from_iterator"],[10838,"core::convert"],[10839,"polars_arrow::bitmap::immutable"],[10840,"polars_arrow::pushable"],[10841,"rayon::iter"],[10842,"polars_arrow::trusted_len"],[10843,"polars_core::datatypes::any_value"],[10844,"polars_core::chunked_array::logical"],[10845,"polars_core::datatypes::time_unit"],[10846,"core::iter::traits::exact_size"],[10847,"polars_core::series::series_trait"],[10848,"polars_core::chunked_array::iterator"],[10849,"alloc::sync"],[10850,"core::ops::range"],[10851,"polars_core::datatypes::field"],[10852,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10853,"polars_core::chunked_array::ops::rolling_window"],[10854,"polars_ops::chunked_array::scatter"],[10855,"polars_utils::index"],[10856,"ahash::random_state"],[10857,"polars_utils::hashing"],[10858,"ndarray"],[10859,"ndarray::dimension::dim"],[10860,"ndarray::data_repr"],[10861,"either"],[10862,"core::any"],[10863,"polars_core::chunked_array::arithmetic::numeric"],[10864,"polars_core::chunked_array::builder::list::anonymous"],[10865,"polars_core::chunked_array::builder::list::boolean"],[10866,"polars_core::chunked_array::builder::list::primitive"],[10867,"polars_core::chunked_array::builder::list"],[10868,"polars_core::chunked_array::builder"],[10869,"polars_core::chunked_array::builder::list::binary"],[10870,"polars_core::chunked_array::builder::list::null"],[10871,"polars_core::chunked_array::builder::string"],[10872,"polars_arrow::array::binview"],[10873,"polars_core::chunked_array::builder::boolean"],[10874,"polars_core::chunked_array::builder::null"],[10875,"polars_core::chunked_array::builder::primitive"],[10876,"core::clone"],[10877,"polars_core::series::implementations::null"],[10878,"polars_core::chunked_array::collect"],[10879,"polars_core::chunked_array::float"],[10880,"polars_core::chunked_array::from_iterator_par"],[10881,"polars_arrow::array::boolean"],[10882,"polars_arrow::array::fixed_size_list"],[10883,"polars_core::chunked_array::metadata::env"],[10884,"bitflags::iter"],[10885,"std::fs"],[10886,"std::sync::mutex"],[10887,"polars_arrow::datatypes"],[10888,"polars_arrow::bitmap::utils::iterator"],[10889,"polars_arrow::bitmap::utils::zip_validity"],[10890,"polars_core::chunked_array::object::builder"],[10891,"polars_core::chunked_array::object::registry"],[10892,"polars_core::chunked_array::ops"],[10893,"core::hash"],[10894,"polars_arrow::legacy::array::slice"],[10895,"polars_core::chunked_array::ops::arity"],[10896,"polars_arrow::array::static_array"],[10897,"core::error"],[10898,"polars_arrow::array::primitive"],[10899,"polars_core::chunked_array::ops::search_sorted"],[10900,"polars_core::utils"],[10901,"polars_row::row"],[10902,"chrono::naive::datetime"],[10903,"chrono_tz::timezones"],[10904,"chrono::naive::time"],[10905,"polars_core::chunked_array::logical::struct_"],[10906,"polars_core::chunked_array::logical::categorical"],[10907,"polars_core::chunked_array::logical::categorical::builder"],[10908,"polars_arrow::array::static_array_collect"],[10909,"bytemuck::zeroable"],[10910,"polars_core::chunked_array::logical::categorical::revmap"],[10911,"polars_core::chunked_array::logical::categorical::merge"],[10912,"polars_arrow::types"],[10913,"polars_arrow::datatypes::physical_type"],[10914,"chrono::time_delta"],[10915,"chrono::naive::date"],[10916,"smartstring::config"],[10917,"smartstring"],[10918,"core::cmp"],[10919,"polars_core::frame"],[10920,"polars_core::chunked_array::logical::categorical::string_cache"],[10921,"polars_error::warning"],[10922,"polars_parquet::parquet::error"],[10923,"regex::error"],[10924,"simdutf8::basic"],[10925,"std::io::error"],[10926,"alloc::collections"],[10927,"planus::errors"],[10928,"polars_core::schema"],[10929,"polars_core::series::from"],[10930,"hashbrown::set"],[10931,"polars_arrow::datatypes::schema"],[10932,"polars_core::frame::row"],[10933,"polars_core::frame::group_by"],[10934,"polars_time::group_by::dynamic"],[10935,"polars_lazy::frame"],[10936,"polars_core::frame::explode"],[10937,"polars_core::chunked_array::ndarray"],[10938,"polars_arrow::record_batch"],[10939,"polars_arrow::array::struct_"],[10940,"polars_time::windows::duration"],[10941,"polars_utils::idx_vec"],[10942,"rayon::iter::plumbing"],[10943,"polars_plan::logical_plan::aexpr"],[10944,"polars_core::frame::group_by::into_groups"],[10945,"core::iter::adapters::copied"],[10946,"core::iter::adapters::zip"],[10947,"polars_utils::float"],[10948,"polars_arrow::types::native"],[10949,"polars_core::frame::group_by::aggregations::agg_list"],[10950,"polars_core::frame::group_by::aggregations"],[10951,"polars_core::frame::group_by::expr"],[10952,"polars_core::frame::row::av_buffer"],[10953,"polars_utils::arena"],[10954,"polars_plan::logical_plan::alp"],[10955,"polars_ops::frame::join::hash_join"],[10956,"polars_ops::frame::join::args"],[10957,"polars_ops::chunked_array::gather::chunked"],[10958,"polars_ops::frame"],[10959,"polars_io::csv::read::reader"],[10960,"polars_io::predicates"],[10961,"polars_io::mmap"],[10962,"polars_plan::dsl::expr"],[10963,"core::alloc"],[10964,"polars_plan::logical_plan::anonymous_scan"],[10965,"polars_lazy::scan::ndjson"],[10966,"polars_lazy::scan::anonymous_scan"],[10967,"polars_plan::dsl::expr_dyn_fn"],[10968,"polars_plan::logical_plan::visitor"],[10969,"polars_plan::dsl::function_expr"],[10970,"polars_ops::series::ops::arg_min_max"],[10971,"polars_plan::dsl::array"],[10972,"polars_plan::dsl::list"],[10973,"polars_plan::dsl::function_expr::schema"],[10974,"polars_io::ipc::ipc_stream"],[10975,"std::io"],[10976,"polars_ops::chunked_array::binary"],[10977,"polars_time::chunkedarray::string"],[10978,"std::os::fd::owned"],[10979,"polars_ops::chunked_array::list"],[10980,"std::os::fd::raw"],[10981,"polars_ops::series::ops"],[10982,"polars_ops::chunked_array::strings"],[10983,"core::mem::maybe_uninit"],[10984,"polars_ops::chunked_array::strings::namespace"],[10985,"polars_io::csv::read::read_impl::batched"],[10986,"polars_io::csv::write::writer"],[10987,"polars_io::ipc::write"],[10988,"polars_io::parquet::read::reader"],[10989,"polars_io::parquet::read::read_impl"],[10990,"polars_io::parquet::write::writer"],[10991,"polars_io::parquet::write::batched_writer"],[10992,"polars_plan::dsl::binary"],[10993,"polars_plan::dsl::udf"],[10994,"polars_lazy::frame::exitable"],[10995,"hashbrown::map"],[10996,"polars_plan::dsl::cat"],[10997,"polars_ops::series::ops::round"],[10998,"polars_time::series"],[10999,"polars_time::chunkedarray::rolling_window"],[11000,"polars_time::windows::bounds"],[11001,"polars_lazy::scan::csv"],[11002,"polars_lazy::scan::ipc"],[11003,"polars_time::windows::group_by"],[11004,"polars_lazy::scan::parquet"],[11005,"polars_time::windows::window"],[11006,"polars_io::csv::read::options"],[11007,"polars_io::csv::write::options"],[11008,"polars_io::ipc::ipc_file"],[11009,"polars_io::json"],[11010,"polars_io::parquet::read::options"],[11011,"polars_ops::frame::join::asof"],[11012,"polars_io::parquet::write::options"],[11013,"polars_ops::series::ops::interpolation::interpolate"],[11014,"polars_ops::series::ops::is_between"],[11015,"polars_ops::series::ops::rank"],[11016,"polars_plan::logical_plan"],[11017,"polars_plan::dsl::arity"],[11018,"polars_plan::dsl::function_expr::boolean"],[11019,"polars_plan::dsl::function_expr::cat"],[11020,"polars_plan::dsl::function_expr::datetime"],[11021,"polars_plan::dsl::function_expr::pow"],[11022,"polars_plan::dsl::function_expr::strings"],[11023,"polars_plan::dsl::functions::temporal"],[11024,"polars_plan::dsl::options"],[11025,"polars_plan::frame::opt_state"],[11026,"polars_plan::logical_plan::lit"],[11027,"polars_plan::logical_plan::options"],[11028,"polars_parquet::arrow::write"],[11029,"polars_parquet::parquet::metadata::file_metadata"],[11030,"polars_arrow::legacy::kernels::rolling"],[11031,"polars_arrow::legacy::kernels::time"],[11032,"polars_lazy::scan::file_list_reader"],[11033,"polars_io::cloud::options"],[11034,"polars_parquet::parquet::metadata::column_order"],[11035,"polars_ops::chunked_array::binary::namespace"],[11036,"std::path"],[11037,"polars_io::shared"],[11038,"polars_ops::frame::join::cross_join"],[11039,"polars_lazy::dsl::eval"],[11040,"polars_time::chunkedarray::date"],[11041,"polars_time::chunkedarray::datetime"],[11042,"polars_time::chunkedarray::duration"],[11043,"core::ffi::c_str"],[11044,"core::default"],[11045,"polars_parquet::parquet::metadata::row_metadata"],[11046,"polars_core::series::ops"],[11047,"polars_plan::dsl::dt"],[11048,"polars_ops::series::ops::various"],[11049,"polars_arrow::scalar"],[11050,"polars_lazy::dsl::list"],[11051,"crossterm::command"],[11052,"polars_plan::dsl::struct_"],[11053,"polars_io::ndjson::core"],[11054,"polars_plan::logical_plan::apply"],[11055,"polars_plan::dsl::function_expr::list"],[11056,"polars_plan::dsl::function_expr::range"],[11057,"polars_plan::dsl::function_expr::binary"],[11058,"polars_plan::dsl::function_expr::array"],[11059,"polars_plan::dsl::function_expr::struct_"],[11060,"std::ffi::os_str"],[11061,"alloc::ffi::c_str"],[11062,"polars_parquet::arrow::read::statistics"],[11063,"polars_arrow::array::struct_::mutable"],[11064,"polars_arrow::array::growable::structure"],[11065,"polars_arrow::legacy::array::default_arrays"],[11066,"polars_arrow::buffer::immutable"],[11067,"polars_arrow::array::list"],[11068,"polars_core::named_from"],[11069,"polars_ops::frame::join"],[11070,"polars_arrow::legacy::array"],[11071,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11072,"polars_time::chunkedarray::time"],[11073,"parquet_format_safe::parquet_format"],[11074,"polars_arrow::array::struct_::iterator"],[11075,"polars_ops::frame::join::asof::groups"],[11076,"polars_ops::chunked_array::list::namespace"],[11077,"polars_plan::dsl::name"],[11078,"polars_io::options"],[11079,"polars_core::chunked_array::ops::aggregate"],[11080,"polars_core::chunked_array::ops::aggregate::quantile"],[11081,"polars_time::month_end"],[11082,"polars_time::month_start"],[11083,"polars_arrow::legacy::index"],[11084,"polars_ops::chunked_array::strings::split"],[11085,"core::pin"],[11086,"core::io::borrowed_buf"],[11087,"parquet_format_safe::thrift::varint::decode"],[11088,"polars_time::chunkedarray::rolling_window::dispatch"],[11089,"polars_time::round"],[11090,"polars_parquet::parquet::metadata::schema_descriptor"],[11091,"polars_core::chunked_array::ops::aggregate::var"],[11092,"polars_plan::dsl::string"],[11093,"polars_ops::series::ops::to_dummies"],[11094,"polars_time::truncate"],[11095,"std::sync::rwlock"],[11096,"polars_io::csv::read::schema_inference"],[11097,"polars_time::upsample"],[11098,"polars_core::hashing::vector_hasher"],[11099,"core::num::nonzero"],[11100,"alloc::collections::btree::map"],[11101,"polars_ops::chunked_array::array::namespace"],[11102,"polars_ops::chunked_array::array"],[11103,"polars_time::chunkedarray::string::patterns"],[11104,"polars_time::chunkedarray::string::infer"],[11105,"polars_arrow::legacy::array::fixed_size_list"],[11106,"polars_plan::dsl::function_expr::rolling"],[11107,"polars_plan::dsl::function_expr::rolling_by"],[11108,"polars_arrow::legacy::array::null"],[11109,"polars_arrow::bitmap::mutable"],[11110,"polars_arrow::array::utf8"],[11111,"polars_arrow::array::binary"],[11112,"polars_core::series::iterator"],[11113,"polars_core"],[11114,"polars_core::chunked_array::iterator::par"],[11115,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11116,"polars_core::chunked_array::ops::gather"],[11117,"polars_core::chunked_array::ops::sort"],[11118,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11119,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11120,"polars_core::chunked_array::temporal"],[11121,"polars_core::chunked_array::temporal::conversion"],[11122,"polars_core::chunked_array::temporal::time"],[11123,"polars_core::chunked_array::logical::date"],[11124,"polars_core::chunked_array::logical::datetime"],[11125,"polars_core::chunked_array::logical::decimal"],[11126,"polars_core::chunked_array::logical::duration"],[11127,"polars_core::datatypes::aliases"],[11128,"polars_utils::aliases"],[11129,"polars_core::chunked_array::logical::time"],[11130,"polars_error::constants"],[11131,"polars_core::functions"],[11132,"polars_io::utils"],[11133,"polars_io::parquet::metadata"],[11134,"polars_arrow::legacy::prelude"],[11135,"polars_ops::series::ops::rolling"],[11136,"polars_parquet::parquet::write"],[11137,"polars_ops::frame::join::general"],[11138,"polars_ops::series::ops::abs"],[11139,"polars_plan::dsl::functions::selectors"],[11140,"polars_plan::dsl::functions::horizontal"],[11141,"polars_plan::dsl::functions::arity"],[11142,"polars_plan::dsl"],[11143,"polars_plan::dsl::functions::range"],[11144,"polars_plan::dsl::functions::index"],[11145,"polars_ops::chunked_array"],[11146,"polars_plan::dsl::functions::coerce"],[11147,"polars_plan::dsl::functions::syntactic_sugar"],[11148,"polars_time::base_utc_offset"],[11149,"polars_time"],[11150,"polars_ops::series::ops::clip"],[11151,"polars_io"],[11152,"polars_ops::series::ops::horizontal"],[11153,"polars_lazy::dsl::functions"],[11154,"polars_plan::dsl::functions::concat"],[11155,"polars_ops::series::ops::index"],[11156,"polars_io::csv::read::parser"],[11157,"polars_ops::series::ops::cum_agg"],[11158,"polars_ops::series::ops::diff"],[11159,"polars_time::dst_offset"],[11160,"polars_ops::series::ops::floor_divide"],[11161,"polars_ops::chunked_array::strings::concat"],[11162,"polars_ops::chunked_array::datetime::replace_time_zone"],[11163,"polars_time::date_range"],[11164,"polars_ops::series::ops::interpolation"],[11165,"polars_ops::series::ops::interpolation::interpolate_by"],[11166,"polars_io::csv::read::utils"],[11167,"polars_ops::series::ops::is_first_distinct"],[11168,"polars_ops::series::ops::is_in"],[11169,"polars_ops::series::ops::is_last_distinct"],[11170,"polars_io::parquet::read::utils"],[11171,"polars_ops::series::ops::negate"],[11172,"polars_ops::series::ops::not"],[11173,"polars_ops::series::ops::int_range"],[11174,"polars_plan::dsl::functions::repeat"],[11175,"polars_ops::chunked_array::repeat_by"],[11176,"polars_ops::series::ops::replace"],[11177,"polars_io::csv::read"],[11178,"polars_ops::chunked_array::strings::strip"],[11179,"polars_time::chunkedarray"],[11180,"polars_io::cloud"],[11181,"polars_ops::chunked_array::mode"],[11182,"polars_ops::chunked_array::nan_propagating_aggregate"],[11183,"polars_arrow::legacy::array::utf8"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,95,95,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,95,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,0,6,6,6,6,6,6,95,6,95,6,6,6,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,95,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,95,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,145,146,147,134,134,135,136,137,137,138,139,134,135,140,141,136,142,137,143,145,146,147,134,134,138,137,143,139,138,134,135,140,141,136,142,137,137,140,141,139,143,145,147,140,141,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,137,143,145,146,147,143,145,146,147,134,135,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,140,141,136,137,138,140,141,136,137,138,139,134,135,142,138,143,143,145,146,147,0,134,135,140,141,136,142,137,143,145,146,147,150,150,150,150,0,134,135,140,141,136,142,137,143,145,146,147,140,141,136,137,138,134,135,140,141,136,142,137,143,145,146,147,0,134,135,140,141,136,142,137,143,145,146,147,137,139,145,146,147,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,134,135,140,141,136,142,137,143,145,146,147,0,0,0,0,0,0,0,0,138,138,138,137,138,138,138,0,138,0,0,151,152,151,152,152,152,151,152,151,152,152,152,0,153,0,0,154,155,0,0,0,0,0,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,157,159,160,161,157,159,161,0,157,159,161,157,159,160,161,157,159,160,161,157,159,160,161,157,159,160,161,0,0,168,57,55,162,162,55,77,168,162,55,55,0,0,0,0,0,0,168,55,77,77,57,162,55,77,55,77,55,77,55,77,55,77,55,77,55,55,77,77,55,77,55,77,57,168,162,55,77,57,168,162,55,77,57,162,55,77,57,162,55,77,163,55,77,55,77,57,55,77,57,168,162,55,77,57,168,162,55,77,55,77,162,57,57,57,168,162,55,77,55,77,162,55,77,55,77,162,57,57,57,57,57,57,57,162,55,55,55,55,55,77,77,77,77,77,57,168,162,55,77,55,77,55,55,77,77,55,77,55,77,55,77,55,77,57,57,77,57,57,57,77,57,168,162,55,77,55,77,55,77,55,77,57,168,162,55,77,55,77,55,77,57,55,77,57,57,57,55,77,55,77,162,162,57,57,57,57,57,55,77,55,77,55,77,57,57,77,57,57,57,57,57,57,77,57,57,55,77,55,77,55,77,57,162,55,77,55,77,57,168,162,55,77,57,168,162,55,77,57,168,162,55,77,55,77,57,168,162,55,77,163,0,0,0,0,169,169,169,169,169,169,78,169,169,169,169,0,169,169,169,169,169,169,169,78,78,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,169,0,169,169,169,169,169,169,169,78,169,169,169,169,169,169,169,169,169,78,23,169,169,169,169,169,169,169,169,169,169,169,0,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,175,0,0,0,0,176,176,176,177,177,177,177,177,177,177,177,0,0,0,177,177,0,177,0,176,177,177,177,177,184,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,179,0,0,185,184,184,184,184,184,578,184,0,0,578,0,0,184,45,47,184,179,180,180,179,179,181,181,182,0,45,47,184,45,47,184,183,183,45,47,184,45,47,184,45,47,45,47,184,45,47,184,45,47,45,47,184,45,47,184,185,185,45,45,45,47,47,47,186,186,0,187,188,0,45,47,184,45,45,47,47,184,0,189,190,0,191,191,185,185,45,47,184,45,47,184,45,47,184,193,194,185,185,45,47,195,195,196,195,195,45,47,182,45,47,197,185,185,45,47,186,196,198,198,199,200,201,201,0,201,202,203,204,204,0,181,181,205,195,206,207,208,45,47,184,45,47,184,45,47,184,45,47,184,182,205,45,47,184,45,47,45,47,45,47,47,45,47,47,45,47,0,209,0,214,212,210,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,216,216,216,0,216,0,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,0,216,216,216,216,216,0,0,0,0,0,204,204,0,0,0,0,0,0,0,0,0,0,0,45,47,45,47,45,47,45,47,204,204,0,0,0,0,0,0,0,0,0,0,239,0,75,42,33,0,0,0,0,0,0,0,75,42,170,0,42,0,0,75,0,170,75,42,170,0,0,0,75,42,0,0,0,0,0,0,0,0,75,42,170,170,0,0,75,42,0,0,75,42,170,170,0,0,170,75,42,170,0,0,75,42,170,0,0,0,170,170,0,239,170,75,42,170,0,0,75,42,170,0,0,0,234,0,33,579,580,0,0,0,0,0,0,239,0,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,170,33,170,170,170,237,75,42,170,0,0,234,0,0,170,241,85,241,85,241,85,8,75,42,170,0,75,42,0,75,0,0,33,237,33,0,0,0,0,0,0,0,0,0,244,0,0,241,0,239,75,42,0,75,0,75,42,170,0,75,75,42,170,170,0,0,0,0,170,244,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,170,42,170,0,170,170,211,211,33,211,83,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,222,223,75,75,223,83,75,21,87,107,108,46,106,100,104,81,84,41,40,10,9,7,222,224,223,224,224,223,225,225,226,226,97,75,83,83,42,110,227,211,83,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,42,234,0,236,83,83,83,83,83,223,222,75,42,83,83,0,87,107,108,46,106,100,104,81,84,41,40,222,83,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,83,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,110,242,242,242,242,42,42,42,0,110,83,243,237,234,75,239,42,170,224,254,83,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,224,254,83,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,83,21,87,107,108,46,106,100,104,81,84,41,40,224,224,254,83,581,32,5,21,87,22,243,237,234,223,222,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,236,83,83,83,83,83,223,222,97,75,110,237,75,239,42,42,110,85,170,241,75,223,223,223,222,223,223,223,222,75,75,75,239,239,239,42,42,42,110,110,110,85,85,85,170,170,170,241,241,241,83,222,222,222,234,235,224,243,237,234,238,75,75,239,42,42,110,85,85,170,241,224,254,83,83,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,75,75,75,75,75,239,42,42,42,42,110,110,110,85,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,170,170,241,42,223,83,83,223,83,83,83,83,83,83,110,223,211,211,211,211,223,222,211,234,83,83,83,83,83,236,223,222,83,83,83,83,83,236,223,222,234,33,5,21,87,22,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,234,223,42,75,253,211,223,223,223,222,223,223,223,222,75,239,42,110,85,170,241,75,83,83,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,42,170,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,254,222,83,83,83,83,83,223,222,97,75,42,42,42,75,42,42,223,222,223,42,75,42,234,75,42,42,42,234,42,42,75,42,75,42,75,42,42,42,42,75,42,42,42,42,75,42,170,211,222,223,211,42,234,223,222,223,223,223,222,223,223,223,222,0,0,42,239,223,0,243,83,83,223,83,83,83,83,83,83,83,21,87,107,108,46,106,100,104,81,84,41,40,223,223,222,110,110,83,83,579,580,224,83,83,83,83,83,83,83,83,243,222,97,110,254,223,223,223,222,223,223,223,222,223,222,83,83,75,85,223,83,222,222,224,21,87,107,108,46,106,100,104,81,84,41,40,222,83,83,222,234,83,83,83,110,83,83,83,254,223,223,83,83,83,75,83,21,87,107,108,46,106,100,104,81,84,41,40,83,83,83,223,42,110,85,42,85,223,223,223,170,83,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,42,170,83,83,83,75,42,85,75,222,83,83,225,225,226,226,242,242,242,242,75,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,75,42,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,170,223,222,97,223,211,97,223,211,42,211,224,254,83,581,32,5,21,87,22,243,237,234,223,222,97,238,75,239,42,110,85,107,108,46,106,100,104,81,84,41,40,82,91,10,9,44,7,88,86,89,240,170,241,579,580,211,75,0,0,0,0,0,234,0,237,234,237,0,0,235,0,0,0,0,0,234,237,234,237,0,0,259,259,259,259,259,0,259,259,0,259,259,259,259,259,259,259,0,259,0,0,261,17,17,17,17,582,0,17,17,261,17,582,17,0,0,0,17,17,17,17,17,17,17,261,260,261,260,17,261,260,17,0,17,17,261,260,260,17,261,260,17,261,260,17,0,261,260,260,17,17,261,260,260,17,17,17,17,17,17,17,0,261,260,17,261,260,17,0,0,0,0,0,0,0,260,17,261,260,17,261,260,17,261,260,17,261,260,17,583,584,583,584,0,0,0,272,0,272,271,272,272,0,0,271,0,0,271,272,258,258,258,258,258,258,258,258,258,258,258,258,258,283,284,271,272,258,283,284,271,272,258,258,271,272,258,271,272,258,258,258,272,258,283,284,271,272,258,283,284,271,272,258,283,284,271,272,258,258,258,258,258,258,258,258,272,258,258,258,272,272,272,258,0,258,258,258,258,258,258,271,272,258,258,283,284,271,272,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,0,258,258,258,258,272,258,258,258,258,258,258,258,258,258,258,258,258,258,283,284,271,272,258,258,283,284,271,272,258,283,284,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,283,284,258,258,258,258,258,258,258,258,258,258,258,258,0,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,283,284,258,258,258,258,258,258,258,258,258,258,258,258,258,271,272,258,258,258,258,258,258,283,284,271,272,258,258,258,258,258,283,284,271,272,258,283,284,271,272,258,258,258,258,258,258,258,258,258,283,284,271,272,258,258,258,258,258,258,258,0,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,0,296,296,0,0,296,0,0,0,0,0,0,300,20,0,296,0,296,296,296,296,296,296,296,296,296,300,20,0,296,296,296,294,20,276,296,276,0,294,276,20,300,305,298,297,294,20,276,296,300,305,298,297,294,20,276,296,294,20,276,296,294,20,276,296,276,294,20,300,305,298,297,297,294,20,276,296,300,305,298,297,294,20,276,296,276,298,300,305,298,297,294,294,20,276,296,294,20,294,294,294,20,20,20,0,300,294,276,294,294,20,276,296,296,0,300,305,298,297,294,294,294,294,20,20,276,296,296,294,294,294,20,276,276,20,302,276,20,300,305,298,297,294,20,276,296,300,305,298,297,294,20,276,296,20,305,294,294,298,294,294,300,20,294,294,20,276,276,276,300,20,276,276,276,276,276,294,276,305,305,276,294,20,276,276,20,294,20,276,276,20,20,276,276,294,20,276,296,296,300,305,298,297,294,20,276,296,300,305,298,297,294,20,276,296,300,305,298,297,294,20,276,296,20,20,20,276,300,305,298,297,294,20,276,296,585,586,586,0,0,0,0,0,0,0,0,0,0,308,309,309,0,310,310,311,312,0,0,311,312,311,311,311,311,312,311,312,311,312,311,312,311,312,311,312,311,312,0,311,312,312,311,311,312,311,312,311,312,311,312,311,312,275,311,312,312,311,312,275,311,312,275,311,312,275,311,312,275,0,275,311,312,275,311,312,275,311,312,275,275,275,275,275,275,311,311,312,312,275,0,311,312,275,311,312,275,311,312,311,312,275,311,312,0,0,0,311,312,275,311,312,275,311,312,275,311,312,275,311,312,275,0,0,336,324,0,351,324,421,391,391,421,0,394,0,368,324,0,0,0,421,216,239,272,421,0,0,0,336,336,0,433,75,42,33,0,0,336,0,0,0,0,0,0,0,0,0,0,400,0,0,0,336,0,0,0,402,412,0,405,184,336,425,423,0,0,435,75,42,170,0,0,324,336,0,42,0,0,75,0,0,170,336,435,75,42,170,0,0,0,0,0,382,409,0,0,407,0,290,415,324,423,0,336,75,42,0,0,0,0,0,0,0,424,336,423,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,336,0,0,336,399,324,17,402,324,423,0,17,336,425,425,425,17,423,351,296,425,400,0,0,0,0,0,0,0,336,336,336,336,336,423,0,0,0,0,0,415,383,385,0,423,435,75,42,170,170,0,0,435,0,423,75,42,0,0,423,0,0,423,75,42,170,170,0,0,412,0,170,336,415,368,336,336,0,420,324,17,0,423,435,75,42,170,0,0,0,0,0,0,499,425,75,42,368,368,582,324,0,324,432,0,0,0,415,336,170,425,425,425,0,0,0,0,324,0,0,0,0,0,336,0,0,336,415,324,425,351,296,272,170,170,0,435,239,170,435,75,42,170,0,0,435,75,42,170,0,0,336,368,290,405,184,336,385,0,0,0,400,179,324,0,0,324,336,424,0,422,0,234,0,0,415,0,296,0,0,0,0,0,0,432,368,368,407,0,415,415,33,579,580,425,425,113,423,0,0,17,415,300,20,0,0,0,0,0,351,296,0,324,0,0,0,0,0,400,0,435,239,0,0,435,75,42,170,0,0,435,75,42,170,0,0,435,75,42,170,0,0,435,75,42,170,0,0,336,336,0,170,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,421,421,0,421,421,421,0,421,423,421,33,421,421,421,423,185,415,432,0,0,0,0,0,399,0,0,557,0,0,557,0,0,0,399,324,397,0,170,0,170,0,0,170,351,296,272,499,0,0,0,0,0,587,382,383,400,409,216,0,324,425,425,237,0,408,113,433,75,42,170,0,0,0,0,336,0,0,0,0,0,0,0,0,324,0,234,0,368,368,0,389,113,336,425,368,368,407,407,403,403,170,415,412,351,184,296,184,336,351,184,296,336,351,296,0,423,241,85,113,423,423,241,85,412,351,184,296,184,336,368,423,336,368,385,423,390,368,0,351,296,420,391,0,0,296,296,423,241,85,8,405,408,113,394,336,0,394,0,17,0,0,394,382,578,402,409,588,272,421,368,368,324,0,435,75,499,42,170,442,336,0,0,0,0,0,0,75,42,0,75,0,582,184,403,403,0,0,368,412,423,133,17,325,431,0,0,33,0,0,0,0,0,0,0,0,0,237,33,0,0,0,0,0,368,0,0,0,0,0,0,0,0,0,0,0,0,0,0,244,0,336,0,0,351,296,0,0,423,0,499,442,412,336,336,435,336,0,0,0,324,0,336,425,336,423,336,0,425,336,587,382,383,409,216,431,0,336,336,0,0,0,0,0,0,423,336,336,0,0,402,17,17,385,0,133,415,0,0,0,0,17,17,0,0,423,241,415,324,0,0,0,0,435,0,0,0,0,0,0,0,0,336,17,336,336,336,390,415,415,324,425,300,20,0,0,407,578,588,415,324,324,0,0,0,425,425,425,0,424,0,425,0,0,351,296,239,435,435,75,42,0,17,0,0,336,0,0,0,75,0,425,425,425,425,425,425,0,75,42,170,0,0,336,17,0,75,324,351,296,336,385,425,0,336,0,0,324,0,385,423,435,75,42,170,170,0,0,423,0,0,0,170,425,425,0,425,336,423,423,423,423,423,423,423,423,133,244,368,0,423,385,435,75,42,170,0,0,435,75,42,170,0,0,435,75,42,170,0,0,435,75,42,170,0,0,0,407,415,170,0,336,0,42,170,0,336,425,0,389,170,170,336,211,211,351,296,0,0,385,423,423,0,324,0,324,385,0,0,423,368,423,397,184,33,211,407,0,378,277,372,288,285,327,379,293,332,380,381,382,331,383,384,385,386,128,117,387,388,389,390,391,392,393,394,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,438,439,114,290,292,269,246,274,113,440,441,442,0,285,317,317,317,0,317,292,319,319,319,319,320,285,321,0,324,325,324,293,293,326,293,327,324,0,324,0,324,0,99,329,430,330,331,330,330,426,324,285,324,0,324,138,139,138,139,138,139,179,327,324,0,324,180,180,324,324,0,179,179,0,292,337,338,339,324,337,338,339,324,181,324,340,0,181,182,324,340,0,341,430,0,324,225,225,226,226,0,342,330,340,344,331,292,340,292,345,346,346,346,346,99,349,99,99,351,99,227,352,340,211,353,0,346,99,99,0,324,355,355,0,392,321,357,360,362,364,321,0,324,0,340,340,340,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,285,292,137,285,381,384,429,369,370,0,344,371,370,372,0,183,236,340,285,324,285,183,0,324,99,324,375,324,114,376,292,0,0,0,377,340,377,340,387,0,340,340,0,324,0,324,0,324,378,277,372,288,285,327,379,293,332,380,381,382,331,383,384,385,386,128,117,387,388,389,390,391,392,393,394,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,438,439,114,290,292,269,246,274,113,440,441,442,340,378,277,372,288,285,327,379,293,332,380,381,382,331,383,384,385,386,128,117,387,388,389,390,391,392,393,394,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,438,439,114,290,292,269,246,274,113,440,441,442,378,277,288,0,443,381,384,589,434,293,99,0,329,399,318,0,0,285,0,242,242,242,242,151,152,151,152,152,152,285,0,439,439,387,320,388,293,99,396,406,415,0,355,0,443,380,0,0,0,0,338,447,355,339,269,447,355,355,0,0,285,324,355,355,0,0,317,449,451,439,285,452,452,0,324,0,0,324,0,324,0,324,0,0,324,453,406,292,246,246,0,393,0,0,0,393,0,0,0,0,0,454,455,376,426,456,293,427,293,428,440,388,99,99,449,451,277,288,285,332,381,384,385,387,388,389,392,393,394,396,397,398,318,399,402,403,404,405,406,407,409,414,415,324,334,334,334,426,427,429,430,431,432,434,436,437,99,99,99,99,438,114,290,269,246,274,113,0,0,374,338,217,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,374,338,217,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,414,45,47,415,285,285,285,285,415,99,0,276,0,437,0,339,324,415,461,438,325,324,326,324,99,99,99,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,372,288,285,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,324,285,324,340,0,0,324,236,340,110,0,0,387,0,589,434,438,99,99,388,447,447,0,0,467,388,378,277,288,293,382,383,385,128,387,388,389,390,391,392,393,394,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,351,324,324,420,368,334,334,421,422,423,424,425,336,428,429,430,431,432,433,435,436,437,99,99,99,461,438,114,290,292,292,269,246,274,113,442,324,185,185,277,277,277,288,288,288,293,293,293,382,382,382,383,383,383,385,385,385,128,128,128,387,387,387,388,388,388,389,389,389,390,390,390,391,391,391,392,392,392,393,393,393,394,394,394,396,396,396,397,397,397,398,398,398,318,318,318,399,399,399,400,400,400,401,401,401,402,402,402,403,403,403,404,404,404,405,405,405,406,406,406,407,407,407,408,408,408,409,409,409,410,410,410,411,411,411,413,413,413,324,324,324,420,420,420,368,368,368,421,421,421,422,422,422,423,423,423,424,424,424,425,425,425,428,428,428,429,429,429,430,430,430,431,431,431,432,432,432,433,433,433,436,436,436,437,437,437,99,99,99,438,438,438,290,290,290,269,269,269,246,246,246,274,274,274,113,113,113,442,442,442,470,277,429,324,324,99,285,285,186,324,186,0,324,449,451,355,117,355,355,355,138,589,434,372,285,372,138,340,472,472,472,292,274,589,434,285,324,0,285,324,324,187,188,340,285,324,274,355,355,355,473,450,139,235,329,321,357,474,342,475,443,360,476,477,380,478,362,364,138,443,380,331,474,363,0,285,339,324,0,324,393,0,334,375,324,324,0,99,344,371,369,378,277,288,379,293,293,382,383,385,128,117,387,388,389,390,391,392,393,394,330,395,396,479,397,398,318,399,400,400,401,402,403,403,404,405,406,407,408,409,410,411,412,413,414,324,324,420,368,368,334,421,421,422,422,423,423,424,424,425,425,336,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,99,99,461,438,439,114,290,292,269,246,274,113,440,441,442,0,436,378,114,0,329,430,429,0,324,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,285,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,128,363,117,362,364,387,388,389,390,390,391,392,393,394,541,395,396,397,398,318,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,324,324,324,324,324,324,324,324,324,324,324,324,324,420,368,334,334,334,334,334,334,334,334,334,334,334,421,422,423,424,425,336,336,336,336,336,426,427,428,429,430,431,431,432,433,370,434,435,436,437,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,461,461,438,439,114,290,499,292,292,292,269,269,269,269,269,269,269,246,274,274,113,440,441,442,494,496,497,217,99,269,217,217,99,269,590,590,590,150,590,217,217,590,150,217,99,437,478,99,99,150,150,499,217,217,334,500,211,211,0,189,211,438,285,501,190,211,370,0,324,0,324,324,99,340,338,339,211,324,269,191,236,191,236,269,269,374,285,435,33,386,386,386,457,333,269,292,341,269,362,99,99,505,269,274,340,340,344,386,387,0,479,0,253,211,340,443,380,384,285,508,285,285,0,0,302,185,324,99,185,324,387,340,509,277,288,293,382,383,385,387,388,389,390,391,392,393,394,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,351,324,420,368,421,422,423,424,425,336,428,429,430,431,432,433,435,436,437,99,438,290,269,246,113,442,511,511,327,339,324,355,355,384,0,512,455,376,426,456,427,329,318,287,128,387,0,0,324,0,357,392,277,357,392,99,99,0,277,288,505,269,274,0,0,477,478,332,387,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,128,138,285,501,117,370,269,0,0,441,0,0,324,0,0,324,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,292,217,99,532,506,324,292,269,513,339,99,99,387,270,99,439,286,532,532,400,0,324,0,0,293,438,340,269,274,363,324,0,193,324,438,293,0,324,324,0,194,324,454,455,376,324,324,0,340,324,0,340,117,324,128,246,0,99,270,467,99,128,403,99,293,454,455,376,211,292,269,269,269,269,269,443,338,285,339,501,516,517,285,518,518,329,318,472,519,439,439,277,0,285,339,211,324,521,285,99,404,285,501,329,133,133,133,0,340,339,324,292,269,274,285,340,363,393,324,0,522,293,523,435,324,324,285,327,331,478,384,387,401,324,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,518,185,324,99,185,324,392,396,398,406,45,47,0,0,99,285,519,324,0,324,341,341,334,334,324,334,519,334,324,0,324,324,0,341,387,341,341,341,341,435,0,0,0,338,285,339,195,324,525,340,461,438,0,285,339,195,324,340,0,338,285,339,196,324,340,526,340,285,381,395,474,269,0,269,246,274,414,426,456,427,376,456,427,0,338,285,339,195,324,195,378,428,114,525,340,461,438,512,455,376,426,456,427,388,0,324,454,455,376,426,527,528,293,293,325,293,324,326,45,47,340,443,380,331,332,381,384,387,541,357,387,338,339,182,324,340,340,324,332,370,110,246,324,324,0,512,455,376,456,293,427,99,403,293,324,0,0,293,529,324,324,341,579,473,450,580,530,217,329,321,357,341,474,342,475,449,360,451,476,477,293,380,331,386,478,363,362,364,318,334,426,427,370,99,292,269,246,99,292,197,340,390,99,269,0,390,292,380,331,390,99,99,99,99,99,99,99,99,532,506,366,356,363,324,324,0,324,185,185,0,0,128,117,393,340,285,324,461,438,388,45,47,362,439,277,288,386,186,329,285,370,324,454,455,376,376,417,419,541,324,324,384,401,437,293,454,512,455,387,293,293,99,443,380,331,387,443,380,331,277,288,324,99,99,0,0,0,0,324,541,589,434,519,519,0,441,525,324,285,387,589,434,99,99,0,285,196,324,526,340,454,455,376,99,388,393,393,387,535,324,99,99,362,99,99,99,99,443,340,380,331,381,384,387,437,0,198,198,325,324,326,269,340,285,269,472,0,0,324,0,355,324,355,341,355,355,0,269,324,0,370,199,340,338,285,339,324,404,329,508,285,324,200,324,340,324,539,324,539,324,539,324,539,324,324,324,539,324,539,324,539,324,539,324,539,324,539,324,539,324,539,324,539,324,539,324,540,375,324,386,386,375,324,386,589,434,406,439,443,380,331,332,381,384,387,430,430,518,334,324,324,387,330,331,285,285,285,285,542,201,201,474,342,285,331,363,362,330,439,332,387,541,439,0,387,285,0,512,455,376,426,456,427,99,285,285,388,393,392,0,201,285,269,269,362,364,474,342,477,362,473,324,292,202,340,338,285,339,324,203,285,324,269,269,318,324,139,340,324,589,434,285,285,285,285,332,387,436,387,0,340,285,339,324,292,292,318,589,434,204,292,204,292,292,292,292,292,0,181,338,285,339,324,324,285,181,340,99,355,292,292,355,355,0,355,0,355,324,277,447,447,406,338,285,339,205,324,340,545,340,117,324,355,0,355,355,355,355,355,404,287,589,434,376,429,324,0,0,355,0,355,0,355,0,355,0,355,99,324,325,324,326,329,519,318,318,519,0,338,285,339,195,324,525,340,334,99,285,327,339,324,206,340,547,547,340,340,207,340,292,0,416,418,393,0,426,427,426,376,285,415,285,435,339,269,292,208,285,549,320,324,355,338,355,519,128,378,277,372,288,285,327,379,293,332,380,381,382,331,383,384,385,386,128,117,387,388,389,390,391,392,393,394,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,438,439,114,290,292,269,246,274,113,440,441,442,324,341,376,293,400,403,324,368,421,422,423,424,425,336,99,269,437,355,355,519,404,404,285,133,133,133,550,293,293,386,293,386,388,293,386,225,225,226,226,242,242,242,242,151,152,151,152,152,152,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,435,436,437,99,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,439,269,269,269,269,269,505,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,387,341,341,324,341,529,410,411,413,99,292,99,99,99,99,99,388,99,99,344,99,589,434,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,23,0,182,338,285,339,324,340,338,285,339,324,285,99,99,387,324,554,554,362,384,401,0,329,318,292,292,211,467,324,287,211,287,292,211,292,338,285,339,205,324,340,545,340,287,555,555,439,99,374,338,217,329,366,356,321,532,357,341,474,342,475,506,449,360,451,378,557,476,277,477,372,288,285,327,379,293,332,380,381,382,331,383,384,385,339,386,519,478,472,128,363,117,362,364,387,388,389,390,391,392,393,394,541,395,396,397,398,318,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,523,415,416,417,418,419,351,324,420,368,334,421,422,423,424,425,336,426,427,428,429,430,431,432,433,370,434,435,436,437,99,461,438,439,114,290,499,292,269,246,274,113,440,441,442,99,454,455,376,454,455,376,385,293,427,293,114,0,417,419,378,428,114,329,426,357,477,331,380,579,580,269,478,387,380,285,318,285,269,474,342,285,362,387,541,285,380,388,475,449,360,451,364,285,364,357,357,426,427,380,388,341,380,387,380,388,380,388,449,451,472,357,427,380,380,387,362,426,427,426,427,477,380,331,478,387,380,331,387,476,477,357,380,387,246,274,426,427,427,426,427,380,388,426,443,474,342,380,380,331,331,478,362,387,478,387,427,357,380,388,285,387,443,380,331,478,387,443,380,331,475,360,362,285,474,342,477,362,387,285,357,380,388,357,380,387,443,380,331,478,387,285,364,443,474,342,285,380,380,331,331,362,387,341,387,477,380,331,478,362,387,380,477,478,387,426,427,357,380,388,285,380,387,380,387,285,364,285,318,357,426,426,380,388,380,388,285,292,292,211,427,426,285,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,133,99,99,99,324,454,455,376,426,0,209,591,592,593,591,592,593,591,594,595,596,597,597,598,599,600,601,602,603,604,605,606,606,607,600,608,600,604,597,605,609,599,610,607,601,611,612,612,598,613,597,612,610,597,603,610,604,597,612,605,609,613,602,606,611,608,606,602,612,606,602,602,599,599,603,614,615,616,616,617,618,614,619,620,621,622,619,623,618,621,615,624,623,625,624,624,625,617,621,622,623,622,623,622,620,618,625,614,616,620,626,627,628,628,629,630,631,632,633,632,634,633,635,636,637,638,639,640,634,631,633,585,586,586,641,641,641,583,584,583,584,642,643,644,642,643,645,646,647,648,648,645,644,646,647,649,649,0,0,0,0,0,0,0,0,0,0,308,309,309,0,214,212,210,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,560,561,0,367,367,367,367,367,367,367,367,367,367,367,367,367,367,367,0,0,0,0,0,0,0,0,346,346,346,346,346,378,454,455,456,378,512,455,456,454,455,454,455,456,456,378,512,455,456,454,455,512,455,456,454,455,454,512,455,454,455,539,539,539,539,539,539,539,539,539,539,539,539,539,539,512,455,456,0,454,455,454,455,378,454,455,0,563,563,563,563,563,0,0,563,346,346,346,346,562,346,563,563,563,563,563,563,563,563,563,563,563,563,563,563,0,563,563,563,563,563,563,563,563,0,567,0,0,564,564,564,564,564,564,564,564,564,0,564,564,564,564,565,564,564,564,564,564,567,564,564,564,564,564,568,568,0,0,568,568,568,444,444,568,444,568,444,444,444,444,568,444,568,444,568,444,568,444,444,444,444,444,568,568,444,444,444,568,444,568,444,0,444,444,568,444,568,444,568,444,568,568,568,0,0,568,568,568,444,239,0,75,42,33,0,0,0,0,0,0,0,75,42,170,0,42,0,0,75,0,170,75,42,170,0,0,0,75,42,0,0,0,0,0,0,0,0,75,42,170,170,0,0,75,42,0,0,75,42,170,170,0,0,170,75,42,170,0,0,75,42,170,0,0,0,170,170,0,239,170,75,42,170,0,0,75,42,170,0,0,0,234,0,33,579,580,0,0,0,0,0,0,239,0,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,170,33,170,170,170,237,75,42,170,0,0,234,0,0,170,241,85,241,85,241,85,8,75,42,170,0,75,42,0,75,0,0,33,237,33,0,0,0,0,0,0,0,0,0,244,0,0,241,0,239,75,42,0,75,0,75,42,170,0,75,75,42,170,170,0,0,0,0,170,244,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,75,42,170,0,0,170,42,170,0,170,170,211,211,33,211,225,225,226,226,227,211,0,236,0,242,242,242,242,0,236,110,235,211,211,211,211,211,236,236,33,253,211,211,211,0,0,0,110,579,580,225,225,226,226,242,242,242,242,211,211,211,579,580,211,0,0,0,0,0,234,0,237,234,237,0,0,235,0,0,0,0,0,234,237,234,237,0,0,0,0,0,0,0,0,0,0,0,494,496,497,0,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,464,0,310,310,0,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,569,0,0,336,421,421,421,421,336,336,336,336,336,425,423,336,336,0,423,336,0,424,336,423,336,336,423,336,425,425,425,423,425,336,336,336,336,336,423,423,423,423,423,336,336,336,423,425,336,425,425,425,336,336,425,336,336,0,336,424,422,425,425,423,336,336,421,421,421,421,421,421,423,421,421,421,421,423,425,425,336,336,425,336,336,423,423,423,336,423,336,423,423,336,421,336,423,336,0,423,336,336,336,336,425,336,423,336,425,336,336,336,423,336,336,423,336,336,336,336,425,425,425,425,424,425,336,0,425,425,425,425,425,425,336,336,425,336,0,423,423,425,425,425,336,423,423,423,423,423,423,423,423,423,336,336,425,336,423,423,423,423,0,0,0,0,594,595,596,626,627,628,628,629,630,631,632,633,632,634,633,635,636,637,638,639,640,634,631,633,642,643,644,642,643,645,646,647,648,648,645,644,646,647,649,649,0,422,424,424,0,424,570,570,570,570,0,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,570,571,571,571,571,0,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,571,0,0,0,0,408,408,0,0,0,0,0,0,0,0,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,572,0,553,553,553,553,553,553,553,553,553,553,553,553,553,0,553,553,553,553,553,553,553,553,553,216,216,216,0,0,0,0,0,574,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,376,0,204,204,0,0,0,0,0,204,204,0,0,0,0,0,0,0,0,0,0,0,45,47,45,47,45,47,45,47,204,204,0,0,0,353,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,355,0,355,355,355,355,355,355,355,0,355,0,355,355,0,355,355,355,355,355,0,355,0,355,0,355,0,355,0,355,355,355,355,355,0,370,370,370,370,370,0,0,650,651,93,0,93,0,0,185,93,0,0,0,0,93,16,16,16,16,16,16,16,16,16,16,340,340,0,16,16,340,340,16,340,340,16,16,16,340,16,16,16,340,340,340,16,577,93,16,577,93,16,340,16,16,16,340,16,16,340,340,340,16,16,93,16,340,93,16,16,16,16,16,16,577,93,16,16,577,93,16,16,16,16,16,577,93,16,340,340,16,93,16,185,16,16,16,185,16,16,16,16,16,93,93,93,16,16,16,16,16,16,340,16,340,16,93,16,16,16,577,93,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,340,16,16,16,340,340,340,185,16,16,16,185,16,16,16,340,93,16,16,16,16,16,16,0,16,577,93,16,577,93,16,16,577,270,16,340,16,16,16,16,340,340,270,16,16,16,340,340,16,16,185,16,16,16,185,16,16,16,16,340,340,16,340,340,16,340,16,16,16,16,340,340,340,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,340,16,577,185,16,16,16,185,16,16,16,16,340,0,16,16,340,340,16,16,16,340,16,16,16,340,93,340,16,16,16,16,340,340,16,16,577,340,16,340,340,340,16,16,16,16,16,16,16,16,16,340,16,16,340,16,16,340,340,16,16,340,16,16,16,16,16,16,93,16,16,16,16,16,16,577,93,16,16,16,16,16,577,93,16,16,16,16,16,16,16,577,93,16,16,16,16,16,340,16,340,0,340,340,577,93,16,16,16,16,0,0,0,325,0,325,326,19,0,325,326,19,325,326,19,325,326,19,325,326,19,0,0,377,49,377,49,462,462,0,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,462,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{n}}{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{Ab}}{l{Ab}}}}{{{f{{l{Ad}}}}{f{Af}}}}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{f{{l{c}}}}e}{}A`{AhAj}}{{{l{c}}e}{}A`{AhAj}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}}{{{l{Ad}}{l{Ad}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ad}}}}{f{Bh}}}B`}{{{f{{l{Bj}}}}{f{Bh}}}B`}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{n}}}}{f{Bh}}}B`}{{{f{{l{Ab}}}}{f{Bh}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bh}}}B`Bn}{{{f{{l{c}}}}{f{Bh}}}B`A`}{{{f{{l{n}}}}}d}{{{f{{l{n}}}}}{{C`{d}}}}{{{f{{l{Bj}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Af}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bj}}}}{f{Af}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{C`{{f{Af}}}}}{{Dd{{C`{{Dj{Af}}}}}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Dj{{An{Al}}}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{Bj}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}A`{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Ad}}}}{f{Df}}}{{l{Ad}}}}{{{f{{l{Ab}}}}{f{Df}}}{{l{Ab}}}}{{{f{{l{n}}}}{f{Df}}}{{l{n}}}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}A`}{{{f{{l{Ad}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ab}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{n}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}A`Db}{{{f{Cl{l{c}}}}e}bA`{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Dn{{f{{An{Al}}}}}{{Dd{{f{{An{Al}}}}}}}}}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{Af}}}{{Dd{{f{Af}}}}}}}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{Af}}{f{ClEf}}}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bj}}}}{f{Df}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cl{An{e}}}}}bBn{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{j}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{n}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Ab}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{{An{Al}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Ad}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{Af}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{c}}}}g{f{Cl{An{e}}}}}bA`{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{f{Af}}}{{Dd{{Dj{Af}}}}}}Dh}}{{{f{{l{n}}}}c}{{l{n}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{f{{An{Al}}}}}{{Dd{{Dj{{An{Al}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Df{}{{Dd{}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Eh}}}}Ej}{{l{El}}}}{{{f{{l{n}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}Ej}{{l{El}}}A`}{{{f{{l{Ab}}}}Ej}{{l{El}}}}{{{f{{l{Ad}}}}Ej}{{l{El}}}}{{{f{{l{c}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}A`}{{{f{{l{Ab}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Eh}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{Ad}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{El}}Bb}}}Bn}{{{f{{l{Ad}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{El}}Bb}}}A`}{{{f{{l{Ab}}}}}{{Bd{{l{El}}Bb}}}}`{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}{{{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}}{{f{{l{Ab}}}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{Ad}}}}}{{f{{l{Ad}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}{{{f{{l{n}}}}{f{{l{n}}}}}}{{{l{n}}{l{n}}}}210021{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{Eh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}A`}{{{f{{l{Bj}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}e}{{l{g}}}A`{{Df{}{{Dd{}}}}Dh}A`}3127654{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fb}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FbAj}{{{f{{l{c}}}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fl{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}`{{{f{Cl{l{c}}}}}b{DbA`}}`{{{f{{l{c}}}}}{{Bd{{f{An}}Bb}}}A`}{{{f{Cl{l{c}}}}{f{{l{c}}}}Fn}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}Fn}bDbDb}{{{f{{l{c}}}}}{{`{G`}}}A`}{{}{{l{c}}}Db}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{{{l{c}}e}{}A`{AhAj}}{{{f{{l{c}}}}e}{}A`{AhAj}}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{Ffb}{{{f{Cl{l{c}}}}}bDb}1{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{Gb{c}}}}}Db}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{c}}}}e}{{l{n}}}A`Aj}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{n}}}}{{{f{{l{Ad}}}}{f{Af}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}A`}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{n}}}}136452087{{{f{{l{j}}}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bA`}{{{f{{l{n}}}}d}{{Bd{{l{n}}Bb}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{c}}}}{f{{l{n}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{Bj}}}}{f{{l{n}}}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{j}}}}{f{{l{n}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{n}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{{Bl{c}}}}}}{f{{l{n}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Ad}}}}{f{{l{n}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Eh}}}}{f{{l{n}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{{l{c}}}}}{{C`{Ff}}}Db}`{{{f{{l{Ad}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{c}}}}{f{ClGj}}}{{Bd{bGl}}}A`}{{{f{{l{Ab}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{j}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{Bj}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{{Bl{c}}}}}}{f{ClGj}}}{{Bd{bGl}}}Bn}{{{f{{l{n}}}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bj}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{cc{}}{c{{l{e}}}Cd{{Db{}{{Gn{c}}}}}}1{{{f{Af}}c}{{l{e}}}H`{{Db{}{{Gn{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{Gn{}}}}Db}H`}{{{f{Af}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{Af}}{Fl{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{c{{l{j}}}{{H`{}{{Cb{{C`{B`}}}}}}}}{c{{l{e}}}{{H`{}{{Cb{C`}}}}}A`}{e{{l{j}}}{{Hd{B`}}}{{H`{}{{Cb{c}}}}}}{e{{l{Ab}}}{{Hf{{An{Al}}}}}{{H`{}{{Cb{c}}}}}}{e{{l{Ab}}}{{Hh{{An{Al}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{n}}}{{H`{}{{Cb{d}}}}}}{c{{l{e}}}{{H`{}{{Cb{{Gh{Fl{C`{Hj}}}}}}}}}A`}{e{{l{{Bl{c}}}}}Bn{{H`{}{{Cb{{C`{c}}}}}}}}{e{{l{Ad}}}{{Hh{Af}}}{{H`{}{{Cb{{C`{c}}}}}}}}{c{{l{n}}}{{H`{}{{Cb{{C`{d}}}}}}}}{c{{l{j}}}{{H`{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{e{{l{Ad}}}{{Hf{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}A`}{{{f{Af}}c}{{l{n}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{{f{Af}}e}{{l{Ab}}}{{Hh{{An{Al}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}{{l{Ad}}}{{Hh{Af}}}{{Ch{}{{Cb{{C`{c}}}}}}}}>{e{{l{Eh}}}{{Hh{{An{Al}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}>9{e{{l{Eh}}}{{Hf{{An{Al}}}}}{{H`{}{{Cb{c}}}}}}>;{c{{l{e}}}{{H`{}{{Cb{C`}}}}}A`}>{c{{l{j}}}{{H`{}{{Cb{{C`{B`}}}}}}}}9;{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{c}}}}}}{{{f{Af}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}A`}{{{f{Af}}e}{{l{Ad}}}{{Hh{Af}}}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}c}{{l{n}}}{{Ch{}{{Cb{d}}}}}}{{{f{Af}}e}{{l{Ab}}}{{Hh{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}`{e{{l{Ab}}}{{Hf{{An{Al}}}}HlHnI`}{{Ib{}{{Cb{c}}}}}}{c{{l{n}}}{{Ib{}{{Cb{{C`{d}}}}}}}}{c{{l{n}}}{{Ib{}{{Cb{d}}}}}}{e{{l{Ad}}}{{Hh{Af}}HlHn}{{Ib{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Cb{C`}}}}}A`}{e{{l{Ab}}}{{Hh{{An{Al}}}}HlHn}{{Ib{}{{Cb{{C`{c}}}}}}}}{e{{l{Ad}}}{{Hf{Af}}HlHnI`}{{Ib{}{{Cb{c}}}}}}{c{{l{j}}}{{Ib{}{{Cb{{C`{B`}}}}}}}}{{c{f{Af}}Ed}{{l{j}}}{{Ib{}{{Cb{{C`{B`}}}}}}}}{{{f{Af}}{f{{An{d}}}}}{{l{n}}}}{{{f{Af}}{f{An}}}{{l{c}}}A`}{{{f{Af}}{f{{An{c}}}}}{{l{Ab}}}{{Hh{{An{Al}}}}}}{{{f{Af}}{f{{An{c}}}}}{{l{Ad}}}{{Hh{Af}}}}{{{f{Af}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{C`}}}}}{{l{c}}}A`}{{{f{Af}}{f{{An{{C`{d}}}}}}}{{l{n}}}}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{Ab}}}{{Hh{{An{Al}}}}}}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{Ad}}}{{Hh{Af}}}}{c{{l{n}}}{{Id{}{{Cb{{C`{d}}}}}}}}{c{{l{e}}}{{Id{}{{Cb{C`}}}}}A`}{{{f{Af}}Fl}{{l{c}}}A`}{{{f{Af}}Fl{C`{Hj}}}{{l{c}}}A`}{{{f{Af}}{f{B`}}Ff}{{l{j}}}}{{{f{Af}}dFf}{{l{n}}}}{{{f{Af}}{f{Af}}Ff}{{l{Ad}}}}{{{f{Af}}{f{{An{Al}}}}Ff}{{l{Eh}}}}{{{f{Af}}{f{B`}}Ff}{{l{Bj}}}}{{{f{Af}}cFf}{{l{{Bl{c}}}}}Bn}{{{f{Af}}Ff}{{l{c}}}A`}{{{f{Af}}{f{{An{Al}}}}Ff}{{l{Ab}}}}{{{f{Af}}Ff}{{l{Bj}}}}{{{f{Af}}Ff}{{l{{Bl{c}}}}}Bn}{{{f{Af}}Ff}{{l{Ad}}}}{{{f{Af}}Ff}{{l{Ab}}}}5{{{f{Af}}Ff}{{l{j}}}}{{{f{Af}}Ff}{{l{n}}}}{{{f{Af}}Ff}{{l{Eh}}}}{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{Af}}Ff{f{Ed}}}{{l{j}}}}{{{f{Af}}Ff{f{Ed}}Ff}{{l{Bj}}}}{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{Eh}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{{Bl{c}}}}}}Ff}{{Bd{IfBb}}}Bn}{{{f{{l{n}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{c}}}}Ff}{{Bd{IfBb}}}A`}{{{f{{l{Ab}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Ad}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{j}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Bj}}}}Ff}{{Bd{IfBb}}}}{{{f{{l{Eh}}}}Ff}If}{{{f{{l{c}}}}Ff}IfA`}{{{f{{l{Bj}}}}Ff}If}{{{f{{l{n}}}}Ff}If}{{{f{{l{{Bl{c}}}}}}Ff}IfBn}{{{f{{l{Ab}}}}Ff}If}{{{f{{l{Ad}}}}Ff}If}{{{f{{l{j}}}}Ff}If}{{{f{{l{Bj}}}}Ff}{{C`{B`}}}}{{{f{{l{j}}}}Ff}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ih}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IjDb}{{{f{{l{j}}}}}B`}{{{f{{l{Bj}}}}}B`}{{{f{{l{c}}}}}{{C`{f}}}Db}0{{{f{{l{{Bl{c}}}}}}Ff}{{C`{{f{Il}}}}}Bn}0{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{Eh}}}}}Ff}{{{f{{l{Bj}}}}}Ff}{{{f{{l{Ad}}}}}Ff}{{{f{{l{j}}}}}Ff}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}A`}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BhBb}}}Bn}{{{f{{l{Bj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{n}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Eh}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ab}}}}dd}{{Bd{BhBb}}}}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ad}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}FfdFf}BhF`}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{n}}}}{{{f{{l{c}}}}e}{{l{n}}}A`Aj}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}A`}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{n}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{n}}}}{{{f{{l{Ad}}}}{f{Af}}}{{l{n}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}870136245{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{}Ff}0{{FfIn{C`{J`}}}{{l{c}}}A`}{{{f{{l{Bj}}}}}{{f{Ed}}}}{{{f{{l{j}}}}}{{f{Ed}}}}{ce{}{}}0{{{l{Jb}}}{{Jf{JdJb}}}}{{{l{Jh}}Jj{C`{Ef}}}{{Jf{JlJh}}}}{{{l{Jn}}{C`{Ff}}Ff}{{Bd{{Jf{K`Jn}}Bb}}}}{{{l{Jn}}{C`{Ff}}Ff}{{Jf{K`Jn}}}}{{{l{Jh}}Jj}{{Jf{KbJh}}}}{{{f{{l{Eh}}}}}}{{{f{{l{c}}}}}{}A`}{{{f{{l{j}}}}}}{{{f{{l{n}}}}}}{{{f{{l{Bj}}}}}}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{Ad}}}}}}{{{f{{l{Ab}}}}}}{{{f{{l{c}}}}}{{`{HlHnKdG`Id}}}A`}{{{l{Jn}}}B`}{{{l{c}}}B`Db}{{{l{Jh}}}{{Jf{KfJh}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{n}}}Kh}000{{{f{{l{c}}}}}{{l{n}}}Db}02{{{f{{l{c}}}}}KjDb}{{{f{{l{c}}}}}{{`{Kl}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gd}}}}}}}}{{{f{{l{c}}}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hj}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Ff}}}Db}{{{f{{l{c}}}}}{{Kn{c}}}Db}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}{l{c}}}{}A`}{{{l{c}}}{}A`}{{{f{{l{c}}}}}{}A`}01{{{f{{l{c}}}}}FfDb}{{{f{{l{c}}}}e}{{l{c}}}A`{AhL`}}00{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{{l{c}}}}e}{{l{n}}}A`Aj}{{{f{{l{Ad}}}}{f{Af}}}{{l{n}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}A`}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{n}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{n}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{n}}}}271680345{{{f{{l{n}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`A`}{{{f{{l{c}}}}}LbA`}{{{f{{l{Ad}}}}}Lb}{{{f{{l{n}}}}}Lb}{{{f{{l{Ab}}}}}Lb}{{{f{{l{c}}}}}{{C`{Ld}}}A`}{{{f{{l{n}}}}}{{C`{Ld}}}}{{{f{{l{c}}}}}{{C`{Ld}}}F`}{{{f{{l{E`}}}}}{{C`{Ld}}}}{{{f{{l{Eb}}}}}{{C`{In}}}}{{{f{{l{Eb}}}}}Lb}{{{f{{l{c}}}}}LbF`}{{{f{{l{E`}}}}}Lb}{{{f{Cl{l{c}}}}{Gb{c}}}bDb}`{{{f{{l{c}}}}}{{C`{{f{{Gb{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lf{{Gb{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lf{{Gb{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lf{{Gb{c}}}}}Db}{{{f{{l{n}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`A`}{{{f{{l{c}}}}}{{C`{Gh}}}A`}{{{f{{l{c}}}}}LbA`}{{{f{{l{Ab}}}}}Lb}{{{f{{l{n}}}}}Lb}{{{f{{l{Ad}}}}}Lb}{{{f{Af}}{f{{An{Al}}}}FfFf}{{l{n}}}}{{{f{Af}}{f{An}}}{{l{c}}}A`}{{{l{c}}{l{c}}}{}A`}{{{l{c}}e}{}A`{AhAj}}{{{f{{l{c}}}}e}{}A`{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ad}}}}}{{Bd{FfBb}}}}{{{f{{l{Ab}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{Bd{FfBb}}}A`}{{{f{{l{c}}}}}{{f{Af}}}Db}{{{f{Af}}c}{{l{Lh}}}{{Hh{{An{{C`{Lj}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{C`{{Fl{Al}}}}}}}}}}{{{f{Af}}c}{{l{n}}}{{Hh{{An{{C`{d}}}}}}}}{{{f{Af}}{Ll{Gd}}}{{l{Jh}}}}{{{f{Af}}c}{{l{E`}}}{{Hh{{An{{C`{Ld}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{f{Af}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Af}}c}{{l{n}}}{{Hh{{An{d}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{Dj{Af}}}}}}}}{{{f{Af}}c}{{l{Jh}}}{{Hh{{An{{C`{Gd}}}}}}}}{{{f{Af}}{Ll{Ln}}}{{l{Jb}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Hh{{An{{C`{c}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{Ef}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{f{{An{Al}}}}}}}}}}{{{f{Af}}c}{{l{Jh}}}{{Hh{{An{Gd}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{C`{Ef}}}}}}}}{{{f{Af}}c}{{l{M`}}}{{Hh{{An{Mb}}}}}}{{{f{Af}}c}{{l{Md}}}{{Hh{{An{J`}}}}}}{{{f{Af}}c}{{l{Mf}}}{{Hh{{An{{C`{Al}}}}}}}}{{{f{Af}}c}{{l{Jb}}}{{Hh{{An{{C`{Ln}}}}}}}}{{{f{Af}}c}{{l{El}}}{{Hh{{An{{C`{Ih}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{C`{{Dj{Af}}}}}}}}}}{{{f{Af}}c}{{l{Mf}}}{{Hh{{An{Al}}}}}}{{{f{Af}}c}{{l{Lh}}}{{Hh{{An{Lj}}}}}}{{{f{Af}}{Ll{J`}}}{{l{Md}}}}{{{f{Af}}c}{{l{M`}}}{{Hh{{An{{C`{Mb}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{Fl{Al}}}}}}}}{{{f{Af}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}c}{{l{Eb}}}{{Hh{{An{In}}}}}}{{{f{Af}}c}{{l{Eb}}}{{Hh{{An{{C`{In}}}}}}}}{{{f{Af}}c}{{l{Jb}}}{{Hh{{An{Ln}}}}}}{{{f{Af}}{Ll{Ih}}}{{l{El}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Af}}c}{{l{E`}}}{{Hh{{An{Ld}}}}}}{{{f{Af}}c}{{l{Mh}}}{{Hh{{An{Mj}}}}}}{{{f{Af}}c}{{l{El}}}{{Hh{{An{Ih}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{C`{{f{Af}}}}}}}}}}{{{f{Af}}c}{{l{Md}}}{{Hh{{An{{C`{J`}}}}}}}}{{{f{Af}}c}{{l{Mh}}}{{Hh{{An{{C`{Mj}}}}}}}}{{{f{Af}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Eh}}}}FfFf}{{l{Eh}}}}{{{f{{l{c}}}}FfFf}{{l{c}}}A`}{{{f{{l{j}}}}FfFf}{{l{j}}}}{{{f{{l{Ad}}}}FfFf}{{l{Ad}}}}{{{f{{l{Bj}}}}FfFf}{{l{Bj}}}}{{{f{{l{n}}}}FfFf}{{l{n}}}}{{{f{{l{{Bl{c}}}}}}FfFf}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ab}}}}FfFf}{{l{Ab}}}}{{{f{Af}}{Fl{c}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{Fl{c}}Hj}{{l{{Bl{c}}}}}Bn}{{{f{Af}}Fl}{{l{c}}}A`}{{{Lf{Ml}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lf{Ml}}{Fl{{Cf{Cd}}}}IhIh}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kh}{{{l{n}}}}{{{f{{l{n}}}}}}{{{f{{l{n}}}}{f{{l{n}}}}}{{l{n}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{n}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{n}}}}{{{f{{l{c}}}}e}{{l{n}}}A`Aj}{{{f{{l{Ad}}}}{f{Af}}}{{l{n}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{n}}}A`}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{n}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{n}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}34761529{{{f{{l{c}}}}}FfDb}`{{{f{{l{j}}}}}{{Bd{{Gf{Gd}}Bb}}}}{{{f{{l{Bj}}}}}{{Bd{{Gf{Gd}}Bb}}}}`{{{f{{l{j}}}}}{{`{{Mn{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{Ad}}}}}{{`{{Mn{}{{Cb{{C`{{f{Af}}}}}}}}}}}}{{{f{Cl{l{j}}}}}{{`{N`}}}}{{{f{{l{Ad}}}}}{{`{N`}}}}{{{f{{l{c}}}}}LbA`}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}LdNb}{{Bd{{C`{Ld}}Bb}}}F`}{{{f{{l{E`}}}}LdNb}{{Bd{{C`{Ld}}Bb}}}}{{{f{{l{Eb}}}}LdNb}{{Bd{{C`{In}}Bb}}}}{{{f{{l{E`}}}}LdNb}{{Bd{LbBb}}}}{{{f{{l{Eb}}}}LdNb}{{Bd{LbBb}}}}{{{f{{l{c}}}}LdNb}{{Bd{LbBb}}}F`}{{{f{Af}}FfLd}{{Bd{{l{n}}Bb}}}}{{{f{Af}}FfLdLd}{{Bd{{l{c}}Bb}}}A`}{{{f{Af}}Ff}{{l{c}}}A`}{{{f{Af}}FfLdLd}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ml}}}Db}{{{f{{l{El}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Lh}}}}}B`}{{{f{{l{Mh}}}}}B`}{{{f{{l{Jb}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{Mf}}}}}B`}{{{f{{l{M`}}}}}B`}{{{f{{l{j}}}}}B`}{{{f{{l{Md}}}}}B`}{{{f{{l{Jh}}}}}B`}14796508:23{{{l{c}}e}{}A`{AhAj}}{{{f{{l{c}}}}e}{}A`{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{Af}}}bDb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{n}}}}}{{l{n}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Eh}}}}}{{l{Eh}}}}{{{f{{l{c}}}}{f{Df}}Nd}{{Bd{B`Bb}}}A`}{{{f{{l{c}}}}Ffe}{{Bd{{l{c}}Bb}}}Kh{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lddd{C`{J`}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Ffdd{C`{J`}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{Ad}}}}{f{{An{Ih}}}}c}{{Bd{B`Bb}}}{{H`{}{{Cb{{C`{{f{Af}}}}}}}}}}{{{f{{l{n}}}}{f{{An{Ih}}}}c}{{Bd{B`Bb}}}{{H`{}{{Cb{{C`{d}}}}}}}}{{{l{c}}{f{{An{Ih}}}}e}{{Bd{B`Bb}}}Nf{{H`{}{{Cb{C`}}}}}}{{{f{{l{Ab}}}}c{C`{{f{{An{Al}}}}}}}{{Bd{{l{Ab}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{Ad}}}}c{C`{{f{Af}}}}}{{Bd{{l{Ad}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}A`{{H`{}{{Cb{Ih}}}}}}{{{f{{l{n}}}}c{C`{d}}}{{Bd{{l{n}}Bb}}}{{H`{}{{Cb{Ih}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}A`{{H`{}{{Cb{Ih}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{Ab}}}}ce}{{Bd{{l{Ab}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Fl{Al}}}}}}}}}}{{{f{{l{Ad}}}}ce}{{Bd{{l{Ad}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Df{{C`{{f{Af}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{n}}}}ce}{{Bd{{l{n}}Bb}}}{{H`{}{{Cb{Ih}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{Ab}}}}{f{{l{n}}}}{C`{{f{{An{Al}}}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{Ad}}}}{f{{l{n}}}}{C`{{f{Af}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{n}}}}{f{{l{n}}}}{C`{d}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{c}}}}{f{{l{n}}}}C`}{{Bd{{l{c}}Bb}}}A`}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ih}bDb}{{{f{Cl{l{c}}}}Kj}bDb}{{{f{{l{Ad}}}}Gd}{{l{Ad}}}}{{{f{{l{Bj}}}}Gd}{{l{Bj}}}}{{{f{{l{c}}}}Gd}{{l{c}}}A`}{{{f{{l{n}}}}Gd}{{l{n}}}}{{{f{{l{j}}}}Gd}{{l{j}}}}{{{f{{l{{Bl{c}}}}}}Gd}{{l{{Bl{c}}}}}Bn}{{{f{{l{Eh}}}}Gd}{{l{Eh}}}}{{{f{{l{Ab}}}}Gd}{{l{Ab}}}}{{{f{{l{n}}}}Gd{C`{d}}}{{l{n}}}}{{{f{{l{c}}}}GdC`}{{l{c}}}A`}{{{f{{l{j}}}}Gd{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{{Bl{c}}}}}}Gd{C`{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Bj}}}}Gd{C`{{f{B`}}}}}{{l{Bj}}}}{{{f{{l{Ab}}}}Gd{C`{{f{{An{Al}}}}}}}{{l{Ab}}}}{{{f{{l{Eh}}}}Gd{C`{{f{{An{Al}}}}}}}{{l{Eh}}}}{{{f{{l{Ad}}}}Gd{C`{{f{Af}}}}}{{l{Ad}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GdFf}{{l{c}}}Db}{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{Ab}}}}d}{{l{Ab}}}}{{{f{{l{Eh}}}}d}{{l{Eh}}}}{{{f{{l{Ad}}}}d}{{l{Ad}}}}{{{f{{l{n}}}}d}{{l{n}}}}{{{f{{l{Ad}}}}Ej}{{l{Ad}}}}{{{f{{l{n}}}}Ej}{{l{n}}}}{{{f{{l{Eh}}}}Ej}{{l{Eh}}}}{{{f{{l{c}}}}Ej}{{l{c}}}A`}{{{f{{l{Ab}}}}Ej}{{l{Ab}}}}{{{f{{l{c}}}}Al}{{C`{Ld}}}A`}{{{f{{l{Eb}}}}Al}Lb}{{{f{{l{E`}}}}Al}Lb}{{{f{{l{c}}}}Al}LbF`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{f{{l{c}}}}e}{}A`{AhAj}}{{{l{c}}{l{c}}}{}A`}{{{l{c}}e}{}A`{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{n}}}}}{{C`{Ih}}}}{{{f{{l{c}}}}}C`A`}{{{f{{l{n}}}}}Lb}{{{f{{l{c}}}}}LbA`}{{{f{{l{Ab}}}}}Lb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{{l{El}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hh{{An{Ih}}}}Nh}}{{{f{{l{c}}}}{f{{An{Nj}}}}Kj}{{l{c}}}Db}{{{f{{l{c}}}}{f{{An{Nj}}}}}{{l{c}}}Db}{{{f{{l{Ad}}}}{f{c}}}{{l{Ad}}}{{Hh{{An{Ih}}}}Nh}}{{{f{{l{c}}}}{f{{l{El}}}}}{{l{c}}}{{Db{}{{Nl{D`}}}}Db}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nl{D`}}}}Db}{{Hh{{An{Ih}}}}Nh}}{{{f{{l{Ad}}}}{f{{l{El}}}}}{{l{Ad}}}}{{{f{{l{Ab}}}}{f{c}}}{{l{Ab}}}{{Hh{{An{Ih}}}}Nh}}{{{f{{l{Ab}}}}{f{{l{El}}}}}{{l{Ab}}}}`{{{f{{l{c}}}}dNn}{{Fl{{Fl{O`}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kh}{{{f{{l{Ad}}}}Ff}{{Bd{B`Bb}}}}{{{f{Cl{l{Bj}}}}Ed}b}{{{f{Cl{l{j}}}}Ed}b}{{{f{{l{c}}}}}{{Bd{{Oh{{Ob{f}}{Of{{Od{Ff}}}}}}Bb}}}A`}{{{f{{l{j}}}}}{{Bd{{Oh{Oj{Of{{Od{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}{{{f{{l{Ab}}}}}{{l{Ad}}}}{{{f{{l{c}}}}}{{Fl{C`}}}A`}{{{f{{l{c}}}}}{{Ol{Fl{Fl{C`}}}}}A`}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}{{{f{{l{c}}}}}{}A`}01{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{Bd{{l{Bj}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bj}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{Af}}g}{{Bd{{l{i}}e}}}Cd{}{{H`{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{Gn{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}On{}}0{{{f{{l{Ad}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{n}}}}}{{Bd{{l{n}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{Ab}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}A`}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Ff}{}Db}{{{f{{l{c}}}}Al}{{C`{Ld}}}A`}{{{f{{l{Eb}}}}Al}Lb}{{{f{{l{E`}}}}Al}Lb}{{{f{{l{c}}}}Al}LbF`}{{{f{{l{El}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Jb}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jn}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jh}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eh}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mf}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Md}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jh}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{n}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jn}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{M`}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Jb}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Lh}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}Bn}{ce{}{}}0{{{f{{l{Bj}}}}}Ff}{{{f{Af}}c}{{l{e}}}Cd{{Db{}{{Gn{c}}}}Db}}{{{f{{l{c}}}}{Fl{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{Af}}}{{l{c}}}Db}{{{f{{An{A@`}}}}e}c{}{{A@b{{f{{l{El}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kj}{{l{c}}}Db}{{{f{{l{c}}}}}{}A`}{{{l{c}}}{}A`}{{{l{c}}{l{c}}}{}A`}{{{f{{l{c}}}}{f{{l{c}}}}}{}A`}23102332102323102323012323013223{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bj}}}}{f{{l{c}}}}e}{{l{Bj}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{n}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}e{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}g{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@l}}{f{Cd}}}b}{{{f{ClA@l}}}b}{{{f{ClA@n}}}b}{{{f{ClAA`}}c}b{{Ch{}{{Cb{{C`{d}}}}}}Id}}{{{f{Cl{AAb{c}}}}e}bA`{{Ch{}{{Cb{C`}}}}Id}}{{{f{Cl{AAb{c}}}}e}bA`{{Ch{}{{Cb{}}}}Id}}{{{f{ClAAd}}}b}{{{f{ClAAf}}}b}65{{{f{ClAAh}}}b}{{{f{ClAAj}}}b}{{{f{ClAA`}}}b}{{{f{ClAAl}}}b}{{{f{Cl{AAb{c}}}}}bA`}{{{f{Cl{AAn{c}}}}}b{AB`Nh}}{{{f{ClABb}}}b}{{{f{ClABd}}}b}{{{f{Cl{ABf{c}}}}}bA`}{{{f{ClA@l}}{C`{{f{Cd}}}}}b}{{{f{ClA@l}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAd}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AAb{c}}}}{C`{{f{An}}}}}bA`}{{{f{Cl{AAn{c}}}}{C`{e}}}b{AB`Nh}{{Hh{c}}}}{{{f{ClAAf}}{C`{c}}}b{}}{{{f{ClAAd}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@l}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AAb{c}}}}{f{B`}}}{{Bd{bBb}}}A`}{{{f{Cl{AAb{c}}}}{f{An}}}bA`}{{{f{ClAAh}}c}b{{Ch{}{{Cb{{C`{{f{Af}}}}}}}}Id}}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{C`{{f{{An{Al}}}}}}}}}}Id}}{{{f{ClAAf}}c}b{}}{{{f{Cl{AAn{c}}}}e}b{AB`Nh}{{Hh{c}}}}{{{f{ClABb}}d}b}{{{f{Cl{ABf{c}}}}}bA`}{{{f{ClAAh}}c}b{{Ch{}{{Cb{{f{Af}}}}}}}}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AAn{c}}}}}{{AAn{c}}}{AB`Nh}}{{{f{ABb}}}ABb}{{{f{ABd}}}ABd}{{{f{{ABf{c}}}}}{{ABf{c}}}{ABhA`}}{{{f{c}}{f{Cle}}}b{}{}}000{{}A@l}{{}A@n}{Ff{{f{c}}}{}}0000000000{Ff{{f{Clc}}}{}}0000000000{Ffb}0000000000{{{f{AAh}}}d}{{{f{AAj}}}d}{{{f{AA`}}}d}{{{f{{AAb{c}}}}}dA`}{{{f{AAd}}}d}{{{f{AAh}}}{{f{Ml}}}}{{{f{AAj}}}{{f{Ml}}}}{{{f{AA`}}}{{f{Ml}}}}{{{f{{AAb{c}}}}}{{f{Ml}}}A`}{{{f{AAd}}}{{f{Ml}}}}{AAf{{l{c}}}Db}{{{f{ClA@l}}}{{l{j}}}}{{{f{ClA@n}}}{{l{j}}}}{{{f{ClAAl}}}{{l{j}}}}{{{f{ClAAd}}}{{l{j}}}}{{{AAn{Af}}}{{l{Ad}}}}{{{AAn{{An{Al}}}}}{{l{Ab}}}}{ABb{{l{n}}}}{ABdABj}{{{ABf{c}}}{{l{c}}}A`}`{cc{}}0000000000{{{f{Af}}e}ABl{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}ABl{}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}{f{{An{c}}}}}ABl{}}{{{f{Af}}{f{{An{{C`{c}}}}}}}ABl{}}{{{f{Ed}}FfFf{f{Af}}}{{Bd{{Cf{AAd}}Bb}}}}{{}Ff}0000000000{{{f{ClAAh}}}{{Cf{Cd}}}}{{{f{ClAAj}}}{{Cf{Cd}}}}{{{f{ClAA`}}}{{Cf{Cd}}}}{{{f{Cl{AAb{c}}}}}{{Cf{Cd}}}A`}{{{f{ClAAd}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{Af}}Ff{C`{Ed}}}A@l}{{{f{Af}}Ff{C`{Ed}}}A@n}{{{f{Af}}FfFf}AAh}{{{f{Af}}FfFf}AAj}{{{f{Af}}FfFf}AA`}{{{f{Af}}Ff}AAl}{{{f{Af}}FfFfEd}{{AAb{c}}}A`}{{{f{Af}}Ff}{{AAn{c}}}{AB`Nh}}{{{f{Af}}Ff}ABb}{{{f{Af}}Ff}ABd}{{{f{Af}}Ff}{{ABf{c}}}A`}{{{f{Af}}FfFfEdEd}{{AAb{c}}}A`}{{{f{ClAAf}}}b}{{{f{ClABb}}}b}{{{f{ClABd}}}b}{{{f{Cl{ABf{c}}}}}bA`}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}On{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAd}}}b}{{{f{ClAAd}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAd}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAd}}}d}{{{f{AAd}}}{{f{Ml}}}}{{{f{ClAAd}}}{{l{j}}}}{{{f{Ed}}FfFf{f{Af}}}{{Bd{{Cf{AAd}}Bb}}}}{{{f{ClAAd}}}{{Cf{Cd}}}}``{{ABn{f{Af}}}{{l{c}}}Db}{{AC`{f{{l{c}}}}}{{l{c}}}Db}10{{AC`{f{Af}}Ed}{{l{c}}}Db}0{{ABn{f{Af}}}{{Bd{{l{c}}e}}}Db{}}{{AC`{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{AC`{f{Af}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ACbACb}``{{ACd{f{Af}}Ed}e{}{{ACf{c}}}}{{e{f{Af}}Ed}ACf{}{{Ib{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Ff{{f{c}}}{}}000{Ff{{f{Clc}}}{}}000{Ffb}000{cc{}}000{{}Ff}000{ce{}{}}0000000{{{f{ACh}}}ACj}{{{f{ACl}}Ed}ACn}{{{f{ClACj}}}C`}{{{f{ClACn}}}C`}{{{f{ClAD`}}}C`}{{{f{Cl{ADb{c}}}}}C`Ch}32{{{f{Cl{ADb{c}}}}}C`G`}`{{{f{ACj}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{ACn}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{{ADb{c}}}}}{{Gh{Ff{C`{Ff}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}On{}}000<<<<```````````````````````{{{f{c}}h}b{}}000{{}Fn}{{}Ij}{{FnFn}Fn}{{IjIj}Ij}{{{f{ClFn}}Fn}b}{{{f{ClIj}}Ij}b}3210{{{f{Fn}}}Ih}0{{{f{Ij}}}Al}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{{Gb{c}}}}}{{Gb{c}}}Db}{{{f{ADd}}}ADd}{{{f{Fn}}}Fn}{{{f{Ij}}}Ij}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{ClADf}}}b}{FnFn}{IjIj}{{{f{Fn}}Fn}d}{{{f{Ij}}Ij}d}{{}{{Gb{c}}}Db}{{}Fn}{{}Ij}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{{FnFn}Fn}{{IjIj}Ij}{{}d}{{{Gb{c}}Ih}{{Gb{c}}}Db}{{{Gb{c}}{C`{Ih}}}{{Gb{c}}}Db}{Ffb}0000983{{{f{Fn}}{f{Fn}}}d}{{{f{Ij}}{f{Ij}}}d}{{{f{ClFn}}c}b{{H`{}{{Cb{Fn}}}}}}{{{f{ClIj}}c}b{{H`{}{{Cb{Ij}}}}}}7{{{Gb{c}}d}{{Gb{c}}}Db}{{{Gb{c}}{C`{d}}}{{Gb{c}}}Db}{{{f{{Gb{c}}}}Fn}{{Gb{c}}}Db}{{{f{{Gb{c}}}}Fn}{{Gb{e}}}DbDb}{{{Gb{c}}Ij}{{Gb{c}}}Db}{{{Gb{c}}{C`{Ij}}}{{Gb{c}}}Db}{{{f{{Gb{c}}}}{f{ClGj}}}{{Bd{bGl}}}Db}{{{f{ADd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Fn}}{f{ClGj}}}{{Bd{bGl}}}}0000{{{f{Ij}}{f{ClGj}}}{{Bd{bGl}}}}0000{cc{}}0000{Ih{{C`{Fn}}}}{Al{{C`{Ij}}}}{IhFn}0{AlIj}010{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}0{cFn{{H`{}{{Cb{Fn}}}}}}{cIj{{H`{}{{Cb{Ij}}}}}}{{{f{Af}}}{{C`{Fn}}}}{{{f{Af}}}{{C`{Ij}}}}{{{f{{Gb{c}}}}}{{C`{Ih}}}Db}{{{f{{Gb{c}}}}}dDb}{{{f{Ij}}}d}{{{f{{Gb{c}}}}}IjDb}{{{f{{Gb{c}}}}}{{C`{f}}}Db}0{{{f{Ij}}}Kj}{{}Ff}0000{{{f{ClFn}}Fn}b}{{{f{ClIj}}Ij}b}{{FnFn}Fn}{{IjIj}Ij}{{{f{Fn}}Fn}d}{{{f{Ij}}Ij}d}{ce{}{}}0000{Fn}{Ij}{{{f{Fn}}}d}>?0>{{{f{{Gb{c}}}}}KjDb}{{{f{{Gb{c}}}}}dDb}0{{{f{Fn}}}{{ADh{Fn}}}}{{{f{Ij}}}{{ADh{Ij}}}}{{{f{Fn}}}{{ADj{Fn}}}}{{{f{Ij}}}{{ADj{Ij}}}}{{}d}{{}{{f{{ADn{ADl}}}}}}{{{Gb{c}}}{{Gb{c}}}Db}{{{Gb{c}}C`}{{Gb{c}}}Db}{{{f{{Gb{c}}}}{Gb{c}}}{{AE`{c}}}Db}21{FnFn}{IjIj}{{{f{ClFn}}Fn}b}{{{f{ClIj}}Ij}b}{{{f{ClFn}}Fnd}b}{{{f{ClIj}}Ijd}b}{{{f{Cl{Gb{c}}}}{C`{Ih}}}bDb}{{{f{Cl{Gb{c}}}}d}bDb}{{{f{ClIj}}d}b}{{{f{Cl{Gb{c}}}}Ij}bDb}{{{f{Cl{Gb{c}}}}C`}bDb}033{{{f{Cl{Gb{c}}}}Kj}bDb}{{{f{ClIj}}Kj}b}{{{Gb{c}}Kj}{{Gb{c}}}Db}{{{Gb{c}}{C`{Kj}}}{{Gb{c}}}Db}{{FnFn}Fn}{{IjIj}Ij}>=10{{{f{c}}}e{}{}}000?>{c{{Bd{e}}}{}{}}000000000{{{f{c}}}On{}}000043{ce{}{}}0000{ADfADf}````{{{f{c}}h}b{}}{{{f{{AEb{c}}}}Ff}{{Gh{{AEb{c}}{AEb{c}}}}}Bn}{e{{AEb{c}}}Bn{{H`{}{{Cb{{f{c}}}}}}}}{e{{AEb{c}}}Bn{{H`{}{{Cb{{C`{{f{c}}}}}}}}}}{{AEde}g{}{{H`{}{{Cb{c}}}}}{}}0{{{f{Il}}}{{f{AEf}}}}{{{f{{AEb{c}}}}}{{f{AEf}}}Bn}{{{f{Cl{AEb{c}}}}}{{f{ClAEf}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{AEb{c}}}}Ff}dBn}{{{f{{AEb{c}}}}}{{AEb{c}}}{ABhBn}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{{AEb{c}}}}}{{f{AEd}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{f{Il}}}}{f{{f{Il}}}}}d}{{{f{Il}}{f{Il}}}d}{{{f{{AEb{c}}}}{f{ClGj}}}{{Bd{bGl}}}{AEhBn}}{cc{}}{{FfAEd}{{AEb{c}}}Bn}{{{f{{AEb{c}}}}Ff}{{C`{{f{c}}}}}Bn}{{}AEd}{{{f{Hj}}{f{{AEb{c}}}}{f{{AEb{c}}}}}{{AEb{c}}}Bn}{{AEd{f{Hj}}}{{AEb{c}}}Bn}{{{f{Hj}}{f{{AEb{c}}}}}{{AEb{c}}}Bn}0{{}Ff}{ce{}{}}{{{f{{AEb{c}}}}}{}Bn}{{{f{{AEb{c}}}}Ff}dBn}{{{f{c}}Ff}d{}}1{{{f{{AEb{c}}}}}{{AEl{{f{c}}{Fd{c}}AEj}}}Bn}{{{f{{AEb{c}}}}}{{AEl{AEj}}}Bn}{{{f{{AEb{c}}}}}FfBn}0`{{{f{Cl{AEb{c}}}}{C`{Hj}}}bBn}{{{f{Cl{AEb{c}}}}FfFf}bBn}{{{f{c}}FfFf}e{}{}}01{{{f{{AEb{c}}}}Ff}{{Gh{{Cf{Cd}}{Cf{Cd}}}}}Bn}0{{{f{Il}}}{{Cf{Il}}}}{{{f{{AEb{c}}}}}{{Cf{Cd}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{AEb{c}}e}}}Bn{}{{H`{}{{Cb{{Bd{{f{c}}e}}}}}}}}{g{{Bd{{AEb{c}}e}}}Bn{}{{H`{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{{AEdg}{{Bd{ie}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}{{{f{Il}}}{{f{Af}}}}{{}{{f{Af}}}}{{{f{{AEb{c}}}}}{{C`{{f{Hj}}}}}Bn}{{{f{{AEb{c}}}}Ff}{{f{c}}}Bn}0{{{f{{AEb{c}}}}Ff}{}Bn}{{{f{{AEb{c}}}}}{{f{{Lf{{Fl{c}}}}}}}Bn}{{{f{{AEb{c}}}}}{}Bn}{{{f{{AEb{c}}}}}{{Fd{c}}}Bn}{ce{}{}}{{{f{{AEb{c}}}}{C`{Hj}}}{{Cf{Cd}}}Bn}{{{AEb{c}}{C`{Hj}}}{{AEb{c}}}Bn}0`{{{f{Cl{AEn{c}}}}}bBn}0{{{f{Cl{AEn{c}}}}{C`{c}}}bBn}{{{f{Cl{AEn{c}}}}c}bBn}{{{f{Cl{AEn{c}}}}{f{AEf}}}bBn}{{{f{Cl{AEn{c}}}}{f{AEf}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AEn{c}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{AEn{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Ff}{ce{}{}}{{{f{Af}}Ff}{{AEn{c}}}Bn}{{{f{Cl{AEn{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4````{{{f{ClAF`}}}b}{{{f{ClAF`}}{C`{{f{AEf}}}}}b}{{{f{ClAF`}}{f{AEf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AFb}}{f{ClGj}}}{{Bd{bGl}}}}<{{{f{Af}}Ff}{{Cf{AF`}}}}{{}{{Lf{Df}}}}{{}AEd}>={{}d}`{{{Cf{Df}}{Lf{Df}}AEd}b}{{{f{ClAF`}}}B`}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AFh}}{f{Df}}}AFh}{{{f{AFh}}{f{Df}}}{{l{c}}}Db}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AFj}}Ej}{{l{El}}}}{{{f{AFj}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AFl}}}{{Bd{{l{El}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AFn}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{Ej}}}Ej}{{{f{En}}}En}{{{f{AG`}}}AG`}{{{f{c}}{f{Cle}}}b{}{}}00{{}Ej}{{}En}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00``{Ffb}00{{{f{Ej}}{f{Ej}}}d}{{{f{En}}{f{En}}}d}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AGd}}}{{Bd{B`Bb}}}}{{{f{AGd}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}`{{{f{AGf}}c}{{Bd{AGfBb}}}{}}{{{f{AGh}}{f{{l{n}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Ej}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{En}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AG`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{En}}}Ej}{cc{}}0{{{f{Ej}}}En}1`{{{f{Af}}cFf}AGj{}}{{{f{Af}}Ff}AGl}`{{{f{AGn}}Ff}{{Bd{IfBb}}}}{{{f{AGn}}Ff}If}??{{{f{Ej}}{f{Clc}}}bAH`}{{{f{En}}{f{Clc}}}bAH`}{{{f{AG`}}{f{Clc}}}bAH`}{{}Ff}00{ce{}{}}00{{{f{AHb}}}{{Bd{{l{n}}Bb}}}}{{{f{AHd}}}{{Bd{{l{n}}Bb}}}}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AHf}}}{{C`{c}}}{}}{{{f{AHf}}}{{C`{Ld}}}}{{{f{AHh}}}{{C`{c}}}{}}2{{{f{AHf}}}{{C`{{Gh{cc}}}}}{}}``{{{f{AFl}}}{{Bd{FfBb}}}}{{}Ej}{{}En}{{{f{AHj}}FfFf}{{l{c}}}Db}88``{{{f{AGd}}}{{Bd{{Gf{Gd}}Bb}}}}{{{f{AHh}}LdNb}{{Bd{{C`{c}}Bb}}}{}}{{{f{AHl}}}B`}0{{{f{AHn}}}AHn}{{{f{AI`}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{{f{AIb}}c{C`{e}}}{{Bd{AIbBb}}}{{H`{}{{Cb{Ih}}}}}{}}{{{f{AIb}}ci}{{Bd{AIbBb}}}{{H`{}{{Cb{Ih}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AIb}}{f{{l{n}}}}{C`{c}}}{{Bd{AIbBb}}}{}}{{{f{AId}}Gd}{{l{c}}}Db}{{{f{AIf}}Gdc}{{l{e}}}{}Db}{{{f{AIh}}FfFf}AIh}0`{{{f{AFj}}d}{{l{c}}}Db}{{{f{AFj}}Ej}{{l{c}}}Db}{{{f{AIj}}Al}{{C`{Ld}}}}{{{f{AHf}}}{{C`{c}}}{}}{{{f{AIl}}{f{c}}}{{Bd{AIlBb}}}Nh}{{{f{AIn}}{f{c}}}AInNh}{{{f{AJ`}}}{{Fl{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}00{{{f{AFl}}}{{Bd{AFlBb}}}}8{ce{}{}}00{{Ejd}Ej}{{End}En}1010{{Enc}En{{H`{}{{Cb{d}}}}}}210{EjEj}{EnEn}`{{{f{AJb}}{f{{l{n}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJd{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDb{CdAJf}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJh{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Af}}}{{Bd{{l{m}}i}}}DbDbCdAJj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJj{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJf}AJj{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJl{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJlDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJf}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}0{{{f{{l{c}}}}}FfA`}0{{KjKj}Kj}{{{f{{l{El}}}}Ih}{{Bd{bBb}}}}{{{f{{AJn{Ih}}}}Ih}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAK`d}{{Fl{Ih}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AK`}}}AK`}{{{f{c}}{f{Cle}}}b{}{}}{{}AK`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{AK`}}{f{AK`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AK`}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{AK`}}{f{Clc}}}bAH`}{{}Ff}{ce{}{}}{{{f{{An{f}}}}cIhe}{{Fl{Ih}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4`{{Ff{f{Cl{Fl{d}}}}}b}```{{{f{AIh}}FfFf}AIh}0{{Ff{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKb{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKdBb}}}}{{{f{Af}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{Af}}{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKdBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````77`{AKfGd}00{{{f{Af}}}{{Bd{EfBb}}}}{{{f{Af}}}{{Bd{AKhBb}}}}{{{f{AKj}}}Gd}333`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AKl}}c}AKl{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{AKn}}}d}{{{f{If}}}{{`{{Ch{}{{Cb{If}}}}}}}}{{{f{If}}{f{Cl{Fl{If}}}}}b}{{AKnd}AKn}{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{If}}{f{If}}}If}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{Ad}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKl}}{f{Bh}}}B`}{{{f{ClAL`}}{C`{{f{Af}}}}}b}{{{f{ClAKn}}{f{AKn}}}{{Bd{bBb}}}}{{{f{ClAL`}}}b}{{{f{ClAL`}}{f{Af}}}b}{{{f{AKn}}Ej}{{l{El}}}}{eALb{}{{H`{}{{Cb{c}}}}}}0{{AEde}ALd{}{{H`{}{{Cb{c}}}}}}0{{{f{Lb}}}If}{{{f{If}}}If}{{{f{{Jf{JdJb}}}}}{{`{Id}}}}{{{f{{Jf{JlJh}}}}}{{`{Id}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Ml}}}{{f{Ed}}}}{{{f{ALf}}}{{f{Ed}}}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{{Jf{KfJh}}}}}{{`{Id}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{AMb{Af}}}AMd}{{{f{AKn}}{f{AKn}}c}{{Bd{AKnBb}}}AMf}{{{f{AMh}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{KbJh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{JdJb}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{KfJh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{K`Jn}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{Jf{JlJh}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AKn}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AKl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{If}}{f{Ed}}}If}{{{f{Ed}}Ed}Ed}{{{f{{Jf{KbJh}}}}Jj}{{Jf{KbJh}}}}{{{f{{Jf{JlJh}}}}Jj}{{Jf{JlJh}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AKl}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{{Jf{ce}}}}}{{Jf{ce}}}DbDb}{{{f{AMj}}}AMj}{{{f{AMd}}}AMd}{{{f{AKn}}}AKn}{{{f{AKl}}}AKl}{{{f{Lb}}}Lb}{{{f{AMl}}}AMl}{{{f{If}}}If}{{{f{AMn}}}AMn}{{{f{Ed}}}Ed}{{{f{Ml}}}Ml}{{{f{Jj}}}Jj}{{{f{Mf}}}Mf}{{{f{Mh}}}Mh}{{{f{El}}}El}{{{f{Md}}}Md}{{{f{Lh}}}Lh}{{{f{M`}}}M`}{{{f{Jb}}}Jb}{{{f{Jh}}}Jh}{{{f{Eb}}}Eb}{{{f{E`}}}E`}{{{f{Jd}}}Jd}{{{f{Kf}}}Kf}{{{f{Ad}}}Ad}{{{f{Ab}}}Ab}{{{f{Eh}}}Eh}{{{f{n}}}n}{{{f{K`}}}K`}{{{f{Jl}}}Jl}{{{f{Kb}}}Kb}{{{f{AN`}}}AN`}{{{f{AEd}}}AEd}{{{f{ANb}}}ANb}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{ClMl}}Ed}b}{ANde{}{{ALb{c}}AJf}}0{{ANdAEd}e{}{{ALd{c}}AJf}}0{{{f{Ed}}}d}00{{{AMb{Af}}}Ed}{{{f{Ml}}}{{f{Ed}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}{{}ANf}{{}AMj}{{}AMd}{{}If}{{}AMn}{{}Ed}{{}AEd}{Ff{{f{c}}}{}}0{{{f{{Jf{ce}}}}}fDbDb}11111111111111111111111111111111111111111{Ff{{f{Clc}}}{}}0{{{f{Cl{Jf{ce}}}}}{{f{Cl}}}DbDb}11111111111111111111111111111111111111111{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{AL`c}AKn{{H`{}{{Cb{{C`{{f{Af}}}}}}}}}}{Ffb}0000000000000{{{f{ClAKl}}}b}11111111111111111111111111111{{{f{AMh}}}{{f{Ed}}}}{{{f{{Jf{JdJb}}}}}{{f{Ed}}}}{{{f{{Jf{JlJh}}}}}{{f{Ed}}}}{{{f{{Jf{KbJh}}}}}{{f{Ed}}}}{{{f{{Jf{K`Jn}}}}}{{f{Ed}}}}{{{f{{Jf{KfJh}}}}}{{f{Ed}}}}{{{f{AKn}}}{{f{Ed}}}}{{{f{AKl}}}{{f{Ed}}}}{{{f{Lb}}}{{f{Ed}}}}{{{f{If}}}Ed}`{{{f{AMj}}{f{AMj}}}d}{{{f{If}}{f{If}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{Ed}}{f{AEd}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Ml}}{f{Ml}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{AEd}}{f{AEd}}}d}{{{f{ANb}}{f{ANb}}}d}{{{f{If}}{f{If}}d}d}{{{f{AKn}}{f{Af}}}}{{{f{AKn}}{f{{l{Ad}}}}}}{{{f{AKn}}{f{AKn}}}}{{{f{AKl}}{f{AKl}}}{{l{n}}}}1230{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jf{ce}}}}}MlDbDb}{{{f{AKl}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{AKl}}}{{f{{An{B`}}}}}}{{{f{ClAKl}}}{{f{Cl{Fl{B`}}}}}}{{{f{AMd}}{f{Af}}}{{C`{Ih}}}}{{AMf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{AL`AKn}{ANf{{Lf{AMd}}}}{{{f{AMj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AMd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{AMl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{If}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{AMn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Ed}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Ml}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Jj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{AEd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{ANb}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}0{{{l{Jb}}}{{Jf{JdJb}}}}{{{l{Jh}}}{{Jf{KfJh}}}}22222222222222{{{f{{An{Al}}}}}If}3{{{f{Af}}}If}{cIfANh}{{{C`{c}}}If{{ANj{If}}}}{dIf}77{IfEd}{{{f{If}}}Ed}{{{f{AEd}}}Ed}:{{{f{If}}}Ml}{{{f{ANl}}}Ml}{{{f{ANb}}}Jj}======================{ANnAEd}{AO`AEd}?{{{f{AEd}}d}Ed}{{{l{El}}{Lf{AMd}}dAMj}AKn}{{{f{Af}}cJj}{{Jf{KbJh}}}{{H`{}{{Cb{AOb}}}}}}{{{f{Af}}cJj}{{Jf{KbJh}}}{{H`{}{{Cb{{C`{AOb}}}}}}}}{{{l{El}}AMj}AKn}{{{f{Af}}c}{{Jf{JdJb}}}{{H`{}{{Cb{AOd}}}}}}{{{f{Af}}c}{{Jf{JdJb}}}{{H`{}{{Cb{{C`{AOd}}}}}}}}{{{f{Af}}cJj}{{Jf{JlJh}}}{{H`{}{{Cb{AKf}}}}}}{{{f{Af}}cJj}{{Jf{JlJh}}}{{H`{}{{Cb{{C`{AKf}}}}}}}}{{{f{Af}}c}{{Jf{KfJh}}}{{H`{}{{Cb{AKj}}}}}}{{{f{Af}}c}{{Jf{KfJh}}}{{H`{}{{Cb{{C`{AKj}}}}}}}}{{{AOh{AOf}}Ed}Ml}{{{f{{l{Ad}}}}{f{{AMb{Af}}}}AMj}{{Bd{AKnBb}}}}{{{Fl{c}}AEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{Fl{c}}AEd}{{AJf{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}ABh{{G`{}{{Cb{e}}}}IdHlHn}}{{FfcAEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{FfAEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Af}}dFfAMj}AKn}{{{f{Af}}Ff}AKl}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AMd}}Ih}{{f{Af}}}}{{{f{{Jf{KbJh}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{K`Jn}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{JdJb}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{JlJh}}}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{KfJh}}}}Ff}{{Bd{IfBb}}}}{{{f{AMh}}Ff}{{Bd{IfBb}}}}{{{f{AKn}}Ff}{{Bd{IfBb}}}}{{{f{AKl}}Ff}{{Bd{IfBb}}}}{{{f{{Jf{KbJh}}}}Ff}If}{{{f{{Jf{JdJb}}}}Ff}If}{{{f{{Jf{K`Jn}}}}Ff}If}{{{f{{Jf{KfJh}}}}Ff}If}{{{f{{Jf{JlJh}}}}Ff}If}{{{f{AMh}}Ff}If}{{{f{AKn}}Ff}If}{{{f{AKl}}Ff}If}{{{f{AMd}}}{{f{{AMb{Af}}}}}}{{}Ed}000000000000000000000000{{{f{AMd}}Ih}{{C`{{f{Af}}}}}}{{{f{AKn}}}{{f{{Lf{AMd}}}}}}{{{f{Ed}}}{{C`{{Fl{Ff}}}}}}{{{f{If}}}{{C`{{f{Af}}}}}}{{{f{AOj}}Ff}If}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKn}}{f{AKn}}}}{{{f{AKn}}{f{{l{Ad}}}}}}{{{f{AKn}}{f{Af}}}}{{{f{AKl}}{f{AKl}}}{{l{n}}}}3120{{{f{If}}{f{Clc}}}bAH`}{{{f{AMn}}{f{Clc}}}bAH`}{{{f{Ed}}{f{Clc}}}bAH`}{{{f{Ml}}{f{Clc}}}bAH`}{{{f{Jj}}{f{Clc}}}bAH`}{{{f{AEd}}{f{Clc}}}bAH`}{{{f{ANb}}{f{Clc}}}bAH`}{{{f{If}}{f{Clc}}d}bAH`}{{{f{{Jf{KfJh}}}}}{{l{Lh}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}{{}Ff}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{AEd}}}{{C`{{f{AEd}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AKl}}}}{{{Jf{JdJb}}}B`}{{{Jf{K`Jn}}}B`}{{{Jf{KbJh}}}B`}{{{Jf{JlJh}}}B`}{{{Jf{KfJh}}}B`}{AKnB`}{AKlB`}{{Lb{f{Af}}}B`}{If{{Bd{IfBb}}}}{{{f{Ed}}}d}00{{{f{If}}}d}11{{{f{AKn}}}d}{{{f{AKl}}}d}1323{{{f{AMd}}}d}34440443434344443444434{{{f{AEd}}}d}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEl{cgAEj}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKl}}}AD`}{{{f{AKn}}}AOl}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Ed}}}{{f{Ed}}}}{{{f{AMd}}}Ff}{{{f{AKn}}}Ff}{{{f{AKl}}}Ff}{{{f{AKn}}{f{Af}}}}{{{f{AKn}}{f{{l{Ad}}}}}}{{{f{AKn}}{f{AKn}}}}{{{f{AKl}}{f{AKl}}}{{l{n}}}}3210{{{f{AKn}}{f{AKn}}}{{Bd{{Gh{AKnAKn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{AMn}}}{{C`{Ed}}}}{{{f{AKn}}}Lb}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClANf}}{f{{Lf{AMd}}}}}{{Bd{bBb}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}03{{{f{{Jf{KfJh}}}}}{{l{Lh}}}}1{{{f{{Jf{JdJb}}}}{C`{{f{AKh}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{AKh}}}}}{{Bd{{Jf{JlJh}}Bb}}}}10{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{AKn}}}{{Bd{FfBb}}}}{{{f{AKn}}}{{f{Af}}}}{{{f{AKl}}}{{f{{AOh{AOf}}}}}}{{{f{Ml}}}{{f{{AOh{AOf}}}}}}`{{{f{{Jf{KfJh}}}}}{{l{Jb}}}};{{}c{}}0{{{f{Af}}FfAMj}AL`}{{{f{Af}}c}{{Jf{KbJh}}}{{Hh{{An{{C`{AOb}}}}}}}}{{{f{Af}}c}{{Jf{KbJh}}}{{Hh{{An{AOb}}}}}}{{{f{Af}}c}{{Jf{JdJb}}}{{Hh{{An{{C`{AOd}}}}}}}}{{{f{Af}}c}{{Jf{KfJh}}}{{Hh{{An{{C`{AKj}}}}}}}}{{{f{Af}}c}{{Jf{JdJb}}}{{Hh{{An{AOd}}}}}}{{{f{Af}}c}{{Jf{KfJh}}}{{Hh{{An{AKj}}}}}}{{{f{Af}}c}{{Jf{JlJh}}}{{Hh{{An{{C`{AKf}}}}}}}}{{{f{Af}}c}{{Jf{JlJh}}}{{Hh{{An{AKf}}}}}}{{{Lf{AMd}}}ANf}{{{f{Af}}{f{{An{B`}}}}}{{Bd{AKlBb}}}}{{EdIf}Lb}{{{f{Af}}Ed}Ml}{{{f{ClAOl}}}C`}{{{f{AKn}}{f{{l{Ad}}}}}}{{{f{AKn}}{f{AKn}}}}{{{f{AKn}}{f{Af}}}}{{{f{AKl}}{f{AKl}}}{{l{n}}}}3120{{{f{AKn}}}Ff}{{{f{AKl}}}Ff}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jf{KfJh}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jf{JdJb}}}}{{{f{If}}{f{If}}}{{C`{AOn}}}}{{{f{Jj}}{f{Jj}}}{{C`{AOn}}}}{{{f{AKn}}}{{f{{l{El}}}}}}{{{f{{Jf{K`Jn}}}}}{{C`{Ff}}}}{{{f{ClAKl}}}b}{{{f{AKl}}}{{f{Ml}}}}{{{f{ClAL`}}{f{Af}}}{{Gh{Ihd}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAKl}}{f{Af}}}b}{{{f{{Jf{JdJb}}}}{f{{l{Ad}}}}{C`{{f{AKh}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{{Jf{JlJh}}}}{f{{l{Ad}}}}{C`{{f{AKh}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{AKl}}}{{Bd{{l{Eh}}Bb}}}}{{{f{AMd}}{f{AMd}}}d}{{{f{{Jf{K`Jn}}}}}Ff}{{{f{{Jf{KfJh}}}}}{{l{Lh}}}}{{{f{{Jf{KbJh}}}}}{{l{Jh}}}}{{{f{ClMl}}{AOh{AOf}}}b}{{{f{Cl{Jf{JlJh}}}}Jj}b}{{{f{Cl{Jf{KbJh}}}}Jj}b}{{{f{Cl{Jf{JlJh}}}}Ef}{{Bd{bBb}}}}{{{f{AOl}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{AKn}}d}AKn}{{{f{AKn}}Ej}AKn}{{{f{{Jf{JdJb}}}}{f{Af}}}{{l{Ad}}}}{{{f{{Jf{JlJh}}}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{Jf{KfJh}}}}{f{Af}}}{{l{Ad}}}}{{{f{If}}{f{Ed}}}{{C`{If}}}}{{{f{{Jf{K`Jn}}}}{f{{Jf{K`Jn}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jf{KbJh}}}}}Jj}{{{f{{Jf{JlJh}}}}}Jj}{{{f{{Jf{JlJh}}}}}{{f{{C`{Ef}}}}}}{{{f{AKn}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}AEd}{{{f{Ml}}d}ANl}{JjANb}{{{f{Ed}}{f{Af}}d}ANl}{Jj{{f{Af}}}}{{{f{AKn}}{f{{AMb{Af}}}}B@`}AKn}{{{f{AKn}}}{{Bd{AKnBb}}}}{{{f{AKn}}}AKn}{{{f{AEd}}}{{f{AEd}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{AEd}}}B@b}{{{f{{Jf{KfJh}}}}{f{Af}}}{{l{Ad}}}}{{{f{{Jf{JdJb}}}}{f{Af}}}{{l{Ad}}}}{{{f{{Jf{JlJh}}}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}{{{f{c}}}Ef{}}00{{{f{If}}{f{If}}}d}{{{f{AKl}}}Ff}{{{f{{Jf{JdJb}}}}{C`{{f{AKh}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{AKh}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{g{{Bd{ALbe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{AEdg}{{Bd{ALde}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{ANd{{Bd{eg}}}{}{{ALb{c}}AJf}{}}0{{ANdAEd}{{Bd{eg}}}{}{{ALd{c}}AJf}{}}0{{{f{If}}}{{Bd{cBb}}}L`}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{If}}{f{Ed}}}{{Bd{IfBb}}}}{{{f{Ed}}d}{{Bd{AEdBb}}}}{{{f{c}}}On{}}000000000000000000000000000000000000000000{{{f{AEd}}}AEd}{{{f{AKn}}}{{Bd{AKnBb}}}}{AKlB@d}{{{f{ClLb}}If}b}{{{f{AKn}}}d}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}cABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Lb}}}{{f{If}}}}{{{f{AKn}}}{{Bd{B@dBb}}}}2{{{f{Ed}}If}d}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{ce{}{}}000000000000000000000000000000000000000000{Ffc{}}0{{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{C`{Hj}}}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{Ed}}}If}```````````{{{f{AKn}}{f{AKn}}c}{{Bd{AKnBb}}}AMf}{{AMf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{f{AKn}}{f{AKn}}}{{Bd{{Gh{AKnAKn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}B@f}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{{}b}{{{f{ClB@f}}}b}{Ffb}2{cc{}}6{{}Ff}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}{{}d}3``````````````````````````{{{f{B@h}}}{{f{Af}}}}>>>===`{{BbB@h}Bb}{BbBb}={{{f{B@h}}}f}>>===:::`{{{f{B@j}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{B@h}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Bb}}{f{ClGj}}}{{Bd{bGl}}}}0<<{cB@h{{ANj{{Dj{Af}}}}}}{B@lBb}{B@nBb}?{BA`Bb}{BAbBb}{BAdBb}{BAfBb}{{}{{Fh{{f{Af}}B@j}{{Dd{b}}}}}}{{}Ff}00{ce{}{}}00{cBbAJj}````{{{Fh{{f{Af}}B@j}{{Dd{b}}}}}b}{cBbBAh}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClB@d}}{Fl{B`}}{f{BAj}}}{{Bd{bBb}}}}{{{f{B@d}}{f{Df}}}{{Fl{B`}}}}0{{{f{B@d}}{f{{l{n}}}}}{{Bd{B@dBb}}}}{{{f{B@d}}{f{{An{{AOh{AOf}}}}}}}{{Bd{B@dBb}}}}0{{{f{B@d}}GdFf}B@d}{{{f{ClB@d}}}{{f{ClB@d}}}}{{{f{ClB@d}}{f{Af}}e}{{Bd{{f{ClB@d}}Bb}}}BAl{{A@b{{f{B`}}}{{Dd{c}}}}}}{{{f{ClB@d}}Ffe}{{Bd{{f{ClB@d}}Bb}}}BAl{{A@b{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{B@d}}}B@d}{{{f{BAn}}}BAn}{{{f{BB`}}}BB`}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{B@d}}{f{Af}}}{{Bd{{f{B`}}Bb}}}}{{{f{B@d}}e}{{Bd{{Fl{{f{B`}}}}Bb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{}BB`}{{}B@d}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{Ffb}0000{{{f{B@d}}{f{Af}}}{{Bd{B@dBb}}}}{{{f{ClB@d}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{B@d}}{f{{An{c}}}}}B@d{{Hh{Af}}}}{{{f{B@d}}{f{{BBb{{f{Af}}Nn}}}}}B@d}{{{f{B@d}}{C`{{f{{An{c}}}}}}}{{Bd{B@dBb}}}{{Hh{Af}}}}{{{f{B@d}}}{{Fl{Ed}}}}9{{{f{BB`}}{f{BB`}}}d}{{{f{B@d}}{f{B@d}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@d}}}Ff}`{{{f{B@d}}e}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{B@d}}{Fl{B`}}}{{Bd{B@dBb}}}}{{{f{ClB@d}}{f{B@d}}}{{Bd{bBb}}}}{{{f{B@d}}}{{Fl{Ml}}}}{{{f{B@d}}AG`}{{Bd{B@dBb}}}}{{{f{B@d}}{f{{l{n}}}}}{{Bd{B@dBb}}}}{{{f{BAn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BB`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{B@d}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}000{AKlB@d}{{{f{BBd}}}B@d}{{{f{BAj}}}B@d}3{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cB@d{{H`{}{{Cb{B`}}}}}}{{{f{{An{BBf}}}}}{{Bd{B@dBb}}}}{{{f{{An{BBf}}}}{f{BAj}}}{{Bd{B@dBb}}}}{{c{f{BAj}}}{{Bd{B@dBb}}}{{Ch{}{{Cb{{f{BBf}}}}}}}}{{{f{B@d}}Ff}{{C`{{Fl{If}}}}}}{{{f{B@d}}{f{Af}}}{{C`{Ff}}}}{{{f{B@d}}}{{Fl{{f{Af}}}}}}{{{f{B@d}}}{{Fl{{AOh{AOf}}}}}}{{{f{B@d}}}{{f{{An{B`}}}}}}{{{f{ClB@d}}}{{f{Cl{Fl{B`}}}}}}{{{f{B@d}}Ff}{{Bd{BBfBb}}}}{{{f{B@d}}Ff{f{ClBBf}}}{{Bd{bBb}}}}{{{f{B@d}}Ff{f{ClBBf}}}b}{{{f{B@d}}}{{C`{{Bd{EdBb}}}}}}`{{{f{B@d}}e}{{Bd{BBhBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{B@d}}{Fl{B`}}{f{BBj}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}1{{{f{B@d}}{Fl{B`}}dd}{{Bd{BBhBb}}}}{{{f{BB`}}{f{Clc}}}bAH`}{{{f{B@d}}{C`{Ff}}}B@d}{{{f{B@d}}}Ff}{{{f{B@d}}{f{{An{B`}}}}}{{Bd{B@dBb}}}}{{{f{ClB@d}}{f{{An{B`}}}}}{{Bd{{f{ClB@d}}Bb}}}}{{{f{ClB@d}}{f{{An{B`}}}}}{{f{ClB@d}}}}{{{f{B@d}}{BBl{Ff}}}f}{{{f{B@d}}Ff}f}{{{f{B@d}}{Ll{Ff}}}f}{{{f{B@d}}{BBn{Ff}}}f}{{{f{B@d}}BC`}f}{{{f{B@d}}{BCb{Ff}}}f}{{{f{B@d}}{f{Af}}}f}{{{f{B@d}}{BCd{Ff}}}f}{{}Ff}0000{{{f{ClB@d}}Ffc}{{Bd{{f{ClB@d}}Bb}}}BAl}{ce{}{}}000000{{B@d{f{Af}}}AKl}{{{f{B@d}}}{{Bd{{l{n}}Bb}}}}{{{f{B@d}}}d}1{{{f{B@d}}}{{Fd{B`}}}}{{{f{B@d}}d}BCf}{{{f{B@d}}}BCh}{B@dBCj}{{{f{B@d}}}{{Bd{{C`{B`}}Bb}}}}{{{f{B@d}}BAn}{{Bd{{C`{B`}}Bb}}}}{{{f{B@d}}ce}{{Bd{B@dBb}}}{{BCl{{AOh{AOf}}}}}{{BCl{{AOh{AOf}}}}}}{{{f{B@d}}BCn}{{Bd{B@dBb}}}}3{{{f{B@d}}}Ff}{{{Fl{c}}}{{Bd{B@dBb}}}BAl}{{{Fl{B`}}}B@d}{{{Fl{B`}}}{{Bd{B@dBb}}}}{{{f{ClBCf}}}C`}{{{f{ClBCh}}}C`}{{{f{B@d}}}B@d}{{B@de}{{Bd{cBb}}}{}{{Df{B@d}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@d}}e}{{Bd{cBb}}}{}{{Df{{f{ClB@d}}}{{Dd{{Bd{cBb}}}}}}}}{{B@dgc}{{Bd{eBb}}}{}{}{{Df{B@dc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClB@d}}}{{C`{B`}}}}{{{f{B@d}}{f{B@d}}}d}{{{f{ClB@d}}{f{Af}}{f{Af}}}{{Bd{{f{ClB@d}}Bb}}}}{{{f{ClB@d}}{f{Af}}c}{{Bd{{f{ClB@d}}Bb}}}BAl}{{{f{ClB@d}}Ffc}{{Bd{{f{ClB@d}}Bb}}}BAl}18{{{f{B@d}}{Fl{B`}}{f{BD`}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}`{{{f{B@d}}{f{B`}}dd{C`{J`}}}{{Bd{B@dBb}}}}0{{{f{B@d}}Ffdd{C`{J`}}}{{Bd{B@dBb}}}}{{{f{B@d}}}BAj}{{{f{B@d}}{f{B@d}}}{{Bd{bBb}}}}{{{f{B@d}}e}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{B@d}}Ff}{{C`{{f{B`}}}}}}{{{f{B@d}}c}{{Bd{B@dBb}}}{{BDb{Ff}}}}2{{{f{B@d}}c}{{Bd{{Fl{B`}}Bb}}}{{BCl{{AOh{AOf}}}}}}{{{f{B@d}}e{f{{Lf{BAj}}}}}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{B@d}}e{f{BAj}}}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{ClB@d}}{f{{An{c}}}}}{{Bd{bBb}}}{{Hh{Af}}}}{{{f{B@d}}}{{Gh{FfFf}}}}{{{f{B@d}}Gd}B@d}{{{f{B@d}}}d}{{{f{ClB@d}}}b}{{{f{BCf}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BCh}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{B@d}}GdFf}B@d}0{{{f{B@d}}cEn}{{Bd{B@dBb}}}{{BCl{{AOh{AOf}}}}}}{{{f{ClB@d}}cEn}{{Bd{{f{ClB@d}}Bb}}}{{BCl{{AOh{AOf}}}}}}{{{f{ClB@d}}}{{`{{Ch{}{{Cb{B@d}}}}}}}}{{B@dFfd}{{Fl{B@d}}}}{{{f{B@d}}BAn}{{Bd{{C`{B`}}Bb}}}}{{{f{B@d}}{C`{Ff}}}B@d}{{{f{B@d}}{f{{l{El}}}}}{{Bd{B@dBb}}}}{{{f{B@d}}{f{{l{El}}}}}B@d}{{{f{B@d}}{f{{l{El}}}}d}B@d}{{{f{B@d}}}{{f{B@d}}}}{{{f{B@d}}BDd}{{Bd{{Oh{Oj{Of{{Od{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{B@d}}FfcEn}{{Bd{B@dBb}}}{{BCl{{AOh{AOf}}}}}}{{{f{ClB@d}}{C`{{f{Af}}}}{C`{{Ol{Ef{Fl{Ef}}}}}}}{{Bd{B@dBb}}}}{{{f{ClB@d}}{f{Af}}e}{{Bd{{f{ClB@d}}Bb}}}BAl{{A@b{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@d}}Ffe}{{Bd{{f{ClB@d}}Bb}}}BAl{{A@b{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}000{{{Gh{{BDf{{Cf{Cd}}}}{f{{An{ANl}}}}}}}{{Bd{B@dBb}}}}1{BDh{{Bd{B@dBb}}}}{{c{f{BAj}}}{{Bd{B@dBb}}}{{Ch{}{{Cb{{Bd{{f{BBf}}Bb}}}}}}}}{{{f{B@d}}{f{Af}}}{{Bd{FfBb}}}}44444{{{f{c}}}On{}}0000{{{f{B@d}}{C`{{f{{An{Ef}}}}}}BB`{C`{{Gh{GdFf}}}}}{{Bd{B@dBb}}}}{{{f{B@d}}d{C`{{f{{An{Ef}}}}}}BB`{C`{{Gh{GdFf}}}}}{{Bd{B@dBb}}}}1{{{f{B@d}}c}{{Bd{B@dBb}}}{{BCl{Ef}}}}{{{f{B@d}}c{f{Af}}BDj}{{Bd{B@dBb}}}{{BCl{Ef}}}}0{{{f{B@d}}{f{B@d}}}{{Bd{B@dBb}}}}{{{f{ClB@d}}{f{B@d}}}{{Bd{{f{ClB@d}}Bb}}}}{ce{}{}}0000{{{f{B@d}}}Ff}{{{f{ClB@d}}c}{{Bd{{f{ClB@d}}Bb}}}BAl}{{{f{ClB@d}}c{f{BAj}}}{{Bd{{f{ClB@d}}Bb}}}BAl}{{{f{ClB@d}}B`}{{f{ClB@d}}}}{{{f{B@d}}{f{Af}}{C`{Ih}}}{{Bd{B@dBb}}}}{{{f{ClB@d}}{f{Af}}{C`{Ih}}}{{f{ClB@d}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BCn}}}BCn}{{{f{c}}{f{Cle}}}b{}{}}{{}BCn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{BCn}}{f{BCn}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCn}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{BCn}}{f{Clc}}}bAH`}`{{}Ff}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBh}}}{{Bd{B@dBb}}}}`{{{f{BDl}}}{{f{{An{{BDn{Ih}}}}}}}}{{{f{BBh}}c}{{Bd{B@dBb}}}{{Dn{B@d}{{Dd{{Bd{B@dBb}}}}}}HlHn}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BDl}}}BDl}{{{f{Bh}}}Bh}{{{f{BBh}}}BBh}{{{f{BE`}}}BE`}{{{f{c}}{f{Cle}}}b{}{}}000:{{}BDl}{{}Bh}{Ff{{f{c}}}{}}00{{{f{BEb}}}f}11111{Ff{{f{Clc}}}{}}0000000`{{BEdc}{}BEf}{Ffb}000{{{f{ClBDl}}}b}1111{{{f{BDl}}{f{BDl}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEh}}}Ih}{{{f{BDl}}}{{f{{An{Ih}}}}}}{{{f{BBh}}}{{Bd{B@dBb}}}}{{{f{ClBDl}}}{{f{Cl{Fl{Ih}}}}}}{{{f{BDl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Bh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BBh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BE`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{Af}}BE`}Ef}{cc{}}000{{{Fl{{Fl{{Gh{Ih{BDn{Ih}}}}}}}}}BDl}{{{Fl{{Gh{{Fl{Ih}}{Fl{{BDn{Ih}}}}}}}}}BDl}2{{{Fl{{Gh{Ih{BDn{Ih}}}}}}}BDl}{BDlBh}44{BEjBE`}5{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cBDl{{H`{}{{Cb{{Gh{Ih{BDn{Ih}}}}}}}}}}{cBDl{{Ib{}{{Cb{{Gh{Ih{BDn{Ih}}}}}}}}}}{{{f{Bh}}Ff}BEh}{{{f{BBh}}}{{f{Bh}}}}{{{f{ClBBh}}}{{f{ClBh}}}}{{{f{Bh}}}{{l{El}}}}{{{f{BEl}}dd}{{Bd{BhBb}}}}{{{f{BBh}}}{{Bd{B@dBb}}}}{{{f{ClBh}}}{{f{ClBDl}}}}{{}Ff}0000000{ce{}{}}0000000{BhBDl}1{BDl}{{{f{BDl}}}}310{{{f{BEh}}}d}{{{f{Bh}}}d}{{{f{BDl}}}d}{{{f{BDl}}}{{BF`{{BEn{{Fd{Ih}}}}{Fd{{BDn{Ih}}}}}}}}{{{f{Bh}}}BFb}{{{f{BBh}}}{{Fl{B`}}}}{{{f{BBh}}{C`{{Gh{GdFf}}}}}{{Fl{B`}}}}={{{f{BEh}}}Ff}{{{f{Bh}}}Ff}?????{{{Fl{Ih}}{Fl{{BDn{Ih}}}}d}BDl}{{{f{B@d}}{Fl{B`}}Bh{C`{{Fl{Ef}}}}}BBh}{{{f{ClBFb}}}C`}{{{f{ClBFb}}Ff}C`}{{{f{BBh}}c}{{Bd{B@dBb}}}{{Df{B@d}{{Dd{{Bd{B@dBb}}}}}}HlHn}}{{{f{c}}}{}{}}{{{f{Bh}}}BEd}{{{f{BBh}}LdNb}{{Bd{B@dBb}}}}{{BBhe}BBh{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{Bh}}GdFf}BEb}{{{f{ClBDl}}}b}{{{f{ClBh}}}b}{{{f{BBh}}Al}{{Bd{B@dBb}}}}{{{f{BBh}}}{{Bd{B@dBb}}}}{Bh{{Fl{Ih}}}}0{BBhBh}{{{f{ClBBh}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}On{}}0000000{BhBh}{{{f{Bh}}}{{f{BDl}}}}{{{f{Bh}}}{{f{{Fl{{Od{Ih}}}}}}}};{ce{}{}}0000000`````{{{f{BDl}}c}B`{{Df{{Gh{Ih{f{{BDn{Ih}}}}}}}{{Dd{C`}}}}HlHn}}{{{f{BDl}}c}B`{{Df{{Gh{Ih{f{{BDn{Ih}}}}}}}{{Dd{}}}}HlHn}}{{{f{{An{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{C`}}}}HlHn}}{{{f{{An{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{}}}}HlHn}}{{{f{{An{c}}}}e{C`{{Lf{AEf}}}}}{{AJn{c}}}{BFdBFf}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{An{c}}}}{f{Hj}}e{C`{{Lf{AEf}}}}}{{AJn{c}}}{BFdBFf}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{l{c}}}}IhIh}{{l{c}}}Db}{{{f{{Fl{{Od{Ih}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFh}}{f{Bh}}}B`}{{BFjBFj}BFj}0`{{{f{BFl}}{f{B@d}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BFl}}}{{Bd{{f{Af}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBFn}}If}{{C`{b}}}}{{{f{ClBG`}}{f{If}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BFn}}}BFn}{{{f{BG`}}}BG`}{{{f{BBf}}}BBf}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{{An{c}}}}}Ed{{Hd{Ed}}}}{{}BBf}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{Ffb}00{{{f{BBf}}{f{BBf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBf}}{f{ClGj}}}{{Bd{bGl}}}}{{{Gh{{f{Ed}}Ff}}}BFn}{cc{}}0{{{Gh{{f{Ed}}Ff}}}BG`}1{{eFf}BAj{{ANj{Ed}}}{{Ch{}{{Cb{{Fl{{Gh{Efc}}}}}}}}}}{{}Ff}00{ce{}{}}00{BFnB`}{BG`B`}{{{f{Ed}}Ff}BFn}{{{f{Ed}}Ff}BG`}{{{Fl{If}}}BBf}{{{f{ClBFn}}Ff}B`}{{{f{ClBG`}}Ff}B`}{{{f{{An{BBf}}}}{C`{Ff}}}{{Bd{BAjBb}}}}0{{{f{{An{BBf}}}}{C`{Ff}}}{{Bd{{Fl{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}On{}}00<<<{{{f{{An{B@d}}}}}{{Bd{B@dBb}}}}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{B@d{f{{An{{f{Af}}}}}}{f{{An{{f{Af}}}}}}{C`{{f{Af}}}}{f{B@d}}}B@d}{{BCjc}{{Bd{B@dBb}}}{{Df{BGb{f{Cl{BGf{BGd}}}}{f{Cl{BGf{BGh}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BGj}}{f{{An{Ih}}}}dd}B@d}{{{f{BGj}}{Gh{{Ol{{Fl{Ih}}{Fl{Nj}}}}{Ol{{Fl{A@`}}{Fl{Nj}}}}}}{f{B@d}}BGl}{{Bd{B@dBb}}}}{{{f{BGj}}{f{B@d}}{f{B`}}{f{B`}}BGl}{{Bd{B@dBb}}}}{{{f{Af}}{f{Af}}}Ef}{{{f{BGj}}{f{B@d}}{f{B`}}{f{B`}}BGld{C`{{f{{An{{f{Af}}}}}}}}}{{Bd{B@dBb}}}}{{{f{BDh}}Ff}{{Gh{BDhBDh}}}}{{{f{BGn}}{f{{An{Nj}}}}Kj}B@d}0{{{f{BGn}}{f{{An{Nj}}}}}B@d}0{{{f{BH`}}{C`{{Fl{{f{Af}}}}}}{C`{{f{Af}}}}d}{{Bd{B@dBb}}}}{{BCjd}BCj}{{{BHb{c}}{C`{{Lf{BHd}}}}}{{BHb{c}}}BHf}{{{f{B`}}}{{Bd{B`Bb}}}}{BHhBHh}{{{BHj{}{{Dd{c}}}}{f{B`}}}c{}}{{BHhBHh}}{{{f{BDj}}Gd{C`{{f{AKh}}}}}{{Bd{GdBb}}}}0{{{f{BHl}}{f{B`}}}{{Bd{B`Bb}}}}1{{BHnc}BCj{{Hh{{An{BHh}}}}}}5`{{BHh{f{Af}}}BHh}{{}BHh}{{BHhd}BHh}{c{{Bd{BHhBb}}}{{Hh{{An{BHh}}}}}}{{{f{{Lf{ce}}}}}{{f{e}}}{}BI`}{{BIbd}BIb}`{{{f{BId}}}d}{{{f{BIf}}}d}11`{{BHhc}BHh{{ANj{BHh}}}}{{{Lf{BId}}BIh}{{Bd{BCjBb}}}}76{{BHhcd}BHh{{ANj{BHh}}}}{{{f{ClAAd}}}b}{{{f{ClAAf}}}b}{{{f{ClAAd}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{C`{c}}}b{}}{{{f{ClAAd}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAf}}c}b{}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BHnc{Lf{BAj}}}BCj{{Df{B@d}{{Dd{{Bd{B@dBb}}}}}}HlHn}}{{BHhc{BIl{{Lf{BIj}}}}}BHh{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BHhBHhc{BIl{{Lf{BIj}}}}}BHh{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{{f{BHh}}{f{Clc}}f}{{Bd{BInBb}}}{{Dn{{f{BHh}}f}{{Dd{{Bd{BInBb}}}}}}}}{{{f{AFh}}{f{Df}}}AFh}{{{f{AFh}}{f{Df}}}{{l{c}}}Db}{{BHhc{f{{An{BHh}}}}{BIl{{Lf{BIj}}}}}BHh{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BHhBJ`{f{{An{BHh}}}}dd}BHh}{{ce{BIl{{Lf{BIj}}}}d}BHh{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}{{Hh{{An{BHh}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BHhBHhGdEd}BHh}{BDh{{Lf{Cd}}}}{{{f{BJb}}}{{C`{Ff}}}}{BJdBHh}{BJfBHh}{BHhBHh}3210{{{f{AFj}}Ej}{{l{El}}}}{{BHhEj}BHh}{{{f{BJh}}Ej}{{l{El}}}}{{cEn}BHh{{Hh{{An{BHh}}}}}}{{{f{AFj}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{El}}Bb}}}}{{{f{AFl}}}{{Bd{{l{El}}Bb}}}}6{{{f{BJh}}}{{Bd{{l{El}}Bb}}}}{cBHh{{ANj{BHh}}}}{{{f{BJj}}}{{f{{An{Ml}}}}}}``{BHhBJd}{eALb{}{{H`{}{{Cb{c}}}}}}0{{AEde}ALd{}{{H`{}{{Cb{c}}}}}}0`{{{f{Cl{BJl{c}}}}}{{Bd{BBdBb}}}BJn}{{{f{BId}}}{{f{AEf}}}}{{{f{BJh}}}{{f{AEf}}}}{{{f{BK`}}}{{f{AEf}}}}{{{f{BIf}}}{{f{AEf}}}}{{{f{BDh}}}{{f{AEf}}}}{{{f{ClBJh}}}{{f{ClAEf}}}}{{{f{ClBDh}}}{{f{ClAEf}}}}{{{f{BKb}}}{{f{{l{Ab}}}}}}{{{f{BKd}}{C`{{f{Af}}}}d}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}Jjdd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}Jjd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{{Lf{c}}}}}BKf{BKhNh}}{{{f{BKj}}}{{f{{l{j}}}}}}{{{f{{Lf{ce}}}}}{}NhBI`}{{{f{{Lf{c}}}}}LnBKl}{{{f{BKn}}}{{f{BHh}}}}{{{f{{Lf{ce}}}}}{{f{c}}}NhBI`}{{{f{ALf}}}{{f{Ed}}}}{{{f{BL`}}}{{f{B`}}}}{{{f{ClBJh}}}{{Bd{FfBb}}}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BLb}}}{{f{{l{Ad}}}}}}{{{Fl{BHh}}}BHh}{{{f{BKd}}{C`{{f{Af}}}}d}{{Bd{{Jf{KfJh}}Bb}}}}{{{Lf{{An{{BLd{c}}}}e}}}{{Lf{{An{c}}e}}}{}BI`}{{{Lf{{BLd{c}}e}}}{{Lf{ce}}}{}BI`}{{{f{Af}}}BHh}{{BHh{C`{Ih}}}BHh}{{{f{BLf}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BLf}}}{{l{Ad}}}}{{{f{{Jf{JlJh}}}}{f{Jj}}{f{AKh}}}{{Jf{KbJh}}}}`{{{BHb{{Cf{BHf}}}}{C`{{Lf{BAj}}}}}{{Bd{BLhBb}}}}{{{BLj{c}}{f{BAj}}}{{Bd{{BLl{c}}Bb}}}BLn}{{{BM`{c}}{f{BAj}}}{{Bd{{BMb{c}}Bb}}}BLn}{{{BMd{c}}Ff}{{Bd{BMfBb}}}BHf}{{{BMh{c}}{f{BAj}}}{{Bd{{BMj{c}}Bb}}}BLn}{{{f{Cl{BHb{c}}}}}{{Bd{BMlBb}}}BHf}`{BHhBMn}{{BHhBN`BHh}BHh}{{{f{BJh}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lf{ce}}}}}{{f{c}}}NhBI`}11111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BCjIhcEn}BCj{{Hh{{An{BHh}}}}}}{BDh{{Cf{Cd}}}}`{BCjBCj}```{{{f{BNb}}{f{Af}}}{{Bd{EfBb}}}}{{BNd{Fl{BHh}}}{{Bd{BHhBb}}}}{{{f{AKn}}{f{AKn}}c}{{Bd{AKnBb}}}AMf}{{{f{BK`}}{f{Cl{An{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BNf}}B`B`}{{Bd{B`Bb}}}}{{BNd{Fl{BHh}}}BHh}{{{f{BNh}}}b}{{BHhEd}BHh}{{{f{AFn}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AMh}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{BJh}}{f{Ed}}}{{Bd{B`Bb}}}}{{BCj{BNj{{f{Af}}EdNn}}d}BCj}4{{BCjEdd}BCj}4`{BHhBNl}{{{f{{Lf{c}}}}}{{C`{{f{AJj}}}}}{AJjNh}}{BHhBHh}{{{f{BNn}}}{{Bd{B`Bb}}}}1`{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}{{{f{BDh}}Ff}d}{{{f{BBd}}{f{BBd}}{C`{{f{{An{Ef}}}}}}{f{Af}}}{{Bd{bBb}}}}{{{f{BAj}}{f{BAj}}{C`{{f{{An{Ef}}}}}}{f{Af}}}{{Bd{bBb}}}}0{{{f{BOb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJh}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOb}}c}{{Bd{B`Bb}}}Aj}{{{f{BJh}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}``{{{f{BJh}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{ClBJh}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHhBHhBHh}BHh}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHhBHh}BHh}10{{{f{BOd}}}BOd}{{{f{BBj}}}BBj}{{{f{BNh}}}BNh}{{{f{BD`}}}BD`}{{{f{BCj}}}BCj}{{{f{BHn}}}BHn}{{{f{BOf}}}BOf}{{{f{BDj}}}BDj}{{{f{BIh}}}BIh}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BIf}}}BIf}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{C@b}}}C@b}{{{f{C@d}}}C@d}{{{f{A@`}}}A@`}{{{f{Nj}}}Nj}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{BGl}}}BGl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{BKn}}}BKn}{{{f{BHh}}}BHh}{{{f{CDh}}}CDh}{{{f{BN`}}}BN`}{{{f{{BIl{c}}}}}{{BIl{c}}}ABh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{BJ`}}}BJ`}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{BNd}}}BNd}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{{Lf{ce}}}}}{{Lf{ce}}}Nh{BI`ABh}}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{Nd}}}Nd}{{{f{BDd}}}BDd}{{{f{BDh}}}BDh}{{{f{BAj}}}BAj}{{{f{ANl}}}ANl}{{{f{BBd}}}BBd}{{{f{Nb}}}Nb}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{BJh}}}{{Lf{BJh}}}}{{{f{c}}{f{Cle}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CGf}}}{{C`{{f{CGh}}}}}}````{{{f{BDj}}{f{BDj}}}AOn}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}AOn{CGjNh}BI`}{{{f{{An{BHh}}}}}BHh}{{BIbCAn}BIb}{{{f{CAn}}{f{CB`}}}d}`{{{f{{An{B`}}}}}{{Bd{B`Bb}}}}{{{f{Af}}}BHh}{BCj{{Bd{B@dBb}}}}{c{{Bd{{Fl{B@d}}Bb}}}{{Ib{}{{Cb{BCj}}}}}}{ANde{}{{ALb{c}}AJf}}0{{ANdAEd}e{}{{ALd{c}}AJf}}0{{ABn{f{Af}}}{{l{c}}}Db}{{AC`{f{{l{c}}}}}{{l{c}}}Db}10{{AC`{f{Af}}Ed}{{l{c}}}Db}0{BCj{{Bd{BNhBb}}}}{cBHh{{BCl{Ef}}}}{{{f{CFn}}Ff}CGl}``{{{f{BH`}}{Fl{{f{Af}}}}{C`{{f{Af}}}}d}{{Bd{B@dBb}}}}`{{{f{c}}{f{e}}}AOn{}{}}0``{{{f{CCn}}}{{Bd{{Lf{BAj}}Bb}}}}{{cCFj}{{Bd{BCjBb}}}{{Hh{{An{BCj}}}}}}{{{f{BLf}}{f{{l{Ad}}}}}{{l{Ad}}}}{{ed}{{Bd{BHhBb}}}{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}{{{f{CGf}}{Fl{BCj}}}{{Bd{BCjBb}}}}{{{f{BOh}}{Fl{BCj}}}{{Bd{BCjBb}}}}44{e{{Bd{BHhBb}}}{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}{{c{f{Af}}d}BHh{{Hh{{An{BHh}}}}}}{{BJdc}BHh{{ANj{BHh}}}}{{{f{CGn}}{f{{An{Al}}}}}{{l{n}}}}{{{f{BLf}}{f{Af}}d}{{Bd{{l{n}}Bb}}}}{{BJfc}BHh{{ANj{BHh}}}}{{{f{BAj}}{f{Af}}}d}{{{f{CGn}}{f{{l{Ab}}}}}{{l{n}}}}{{{f{BLf}}{f{{l{Ad}}}}dd}{{Bd{{l{n}}Bb}}}}{{{f{BLf}}{f{Af}}}{{Bd{{l{n}}Bb}}}}{{{f{Cd}}{f{AEd}}}{{Cf{Cd}}}}{{{f{B`}}Ff}{{Bd{{l{El}}Bb}}}}{BCjBCj}{BHhBHh}{{{f{BLf}}{f{Af}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{CH`}}Al{C`{Al}}{C`{{f{C@l}}}}Ald}{{Bd{FfBb}}}}{{{AMb{Af}}}Ed}{{{f{BGj}}{f{{An{Nj}}}}d}B@d}{{{f{CHb}}c}{{Cf{CHd}}}BLn}{{{f{CHf}}c}{{Cf{CHd}}}BLn}`{{BCjBCj{C`{Ef}}}BCj}{{{f{CHh}}{f{B@d}}{C`{{f{Af}}}}{C`{{Gh{GdFf}}}}}{{Bd{B@dBb}}}}{{{f{CHh}}{f{B@d}}{C`{{Gh{GdFf}}}}d}{{Bd{{Gh{B@dB@d}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BHhd}BHh}{{BHhced}BHh{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hh{{An{BHh}}}}}}212121{{ce}BHh{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hh{{An{BHh}}}}}}32{{CHjBHhFfd}BHh}`{{{f{BDh}}}{{f{AEd}}}}{{{f{ANl}}}{{f{AEd}}}}```{{BHhBHhBDjBOl}BHh}`{CEdBHh}`{{BHhBHhBDjBOl{C`{Jj}}{C`{Ef}}}BHh}0{AKfGd}00{{{f{CHl}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}`{{{f{CI`}}}{{l{Jh}}}}{{{f{BDj}}}Gd}`{{{f{BDj}}}d}```{{}b}{cbBI`}{{}CHb}{{}CHf}{{}BBj}{{}BD`}{{}BCj}{{}BIh}{{}BOj}{{}C@`}{{}C@b}{{}C@f}{{}C@h}{{}C@j}{{}CA`}{{}CAb}{{}CAd}{{}CAh}{{}CAj}{{}CAl}{{}BGl}{{}CAn}{{}CBd}{{}CBf}{{}CBh}{{}CBj}{{}CBl}{{}CBn}{{}CCb}{{}CCl}{{}CCn}{{}BHh}{{}{{BIl{{Lf{BNf}}}}}}{{}{{BIl{{Lf{BIj}}}}}}{{}{{BIl{{Lf{CIb}}}}}}{{}CEd}{{}CEf}{{}CEj}{{}CEl}{{}CEn}{{}CF`}{{}CFd}{{}CFh}{{}CFj}{{}{{Lf{CId}}}}{{}{{Lf{c}}}CIf}{{}{{Lf{Af}}}}{{}{{Lf{{An{c}}}}}{}}{{}CFl}{{}Nd}{{}BDd}{{}BAj}{{}ANl}{{}BBd}{{}Nb}`{{}{{Ol{{Fl{A@`}}{Fl{Nj}}}}}}{Ff{{f{c}}}{}}0{{{f{{AKb{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BIl{c}}}}}f{}}22222222222222222222{{{f{{Lf{ce}}}}}{{f{c}}}NhBI`}333333333333333{Ff{{f{Clc}}}{}}00{{{f{Cl{AKb{c}}}}}{{f{Cl}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CCn}}}{{Bd{EfBb}}}}{{{f{BCj}}}{{Bd{EfBb}}}}0001{{{f{{Lf{c}}}}}{{f{Af}}}{AJjNh}}{{{f{ANl}}{f{CIh}}}{{Bd{CIjBb}}}}```{{{f{B`}}GdCIl}{{Bd{B`Bb}}}}{{BJfGdCIl}BHh}{{BHhGdCIl}BHh}{{{f{CCn}}}{{Bd{{`{BAh}}Bb}}}}``{{{BHj{}{{Dd{c}}}}{f{B`}}}c{}}{{BHhBHh}}{{{f{BHl}}{f{B`}}}{{Bd{B`Bb}}}}{{BHhc}BHh{{ANj{BHh}}}}{{{Lf{AEfc}}}{{Bd{{Lf{ec}}{Lf{AEfc}}}}}BI`{AEfHlHn}}{{{Lf{AEfc}}}{{Lf{ec}}}BI`{AEfHlHn}}{{{f{{Lf{ce}}}}}{{CIn{ce}}}Nh{ABhBI`}}{Ffb}000000000000000000000{{{f{ClBNh}}}b}11{{BCje}BCj{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}22222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lf{ce}}}}}bNhBI`}33333333333333{BHhBHh}{{BCj{C`{{Fl{BHh}}}}}BCj}1{{{f{BJh}}}B`}{{{f{{Jf{JlJh}}}}{f{Jj}}{f{AKh}}}{{Jf{KbJh}}}}`{BHhCJ`}{{{f{AMh}}}{{f{Ed}}}}{{{f{BJh}}}{{f{Ed}}}}`{{{f{Ed}}}BHh}{cBHh{{Hh{{An{Ed}}}}}}`{CEfBHh}``{{}CFl}{{{f{c}}}e{}{{CJd{CJb}}}}0`{{{f{CGn}}{f{{An{Al}}}}}{{l{n}}}}{{{f{CGn}}{f{{l{Ab}}}}}{{l{n}}}}{{BDj{f{Ed}}{f{Af}}}{{Bd{bBb}}}}{{BDj{C`{{f{Af}}}}{f{Af}}}{{Bd{bBb}}}}{{{f{CJf}}{f{Af}}}{{Bd{bBb}}}}`{{{f{BOd}}{f{BOd}}}d}{{{f{BBj}}{f{BBj}}}d}{{{f{BD`}}{f{BD`}}}d}{{{f{BDj}}{f{BDj}}}d}{{{f{BOl}}{f{BOl}}}d}{{{f{BOn}}{f{BOn}}}d}{{{f{C@b}}{f{C@b}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{C@j}}{f{C@j}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{BGl}}{f{BGl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{BKn}}{f{BKn}}}d}{{{f{BHh}}{f{BHh}}}d}{{BHhc}BHh{{ANj{BHh}}}}{{{f{CDh}}{f{CDh}}}d}{{{f{BN`}}{f{BN`}}}d}{{{f{{BIl{B`}}}}{f{{BIl{B`}}}}}d}{{{f{{BIl{{Lf{c}}}}}}{f{{BIl{{Lf{c}}}}}}}dNh}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{BJ`}}{f{BJ`}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CJhNh}BI`}{{{f{{Lf{Cd}}}}{f{Cd}}}d}{{{f{{Lf{CJj}}}}{f{CJj}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{BDd}}{f{BDd}}}d}{{{f{BDh}}{f{{f{Cd}}}}}d}{{{f{BDh}}{f{BDh}}}d}{{{f{BAj}}{f{BAj}}}d}{{{f{ANl}}{f{ANl}}}d}{{{f{BBd}}{f{BBd}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{CGd}}{f{CGd}}}d}{{BHhc}BHh{{ANj{BHh}}}}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CJlBHhd}BHh}``{{BHhc}BHh{{BCl{Ef}}}}{{BHhc}BHh{{Hh{{An{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAb}}}{}CJn{}}{{{f{BCj}}d}{{Bd{EfBb}}}}{{BCje}BCj{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}{{{f{AGd}}}{{Bd{B`Bb}}}}{BHhBHh}{{{f{AGd}}}{{Bd{{Gh{B`{Gf{Gd}}}}Bb}}}}`{{BHhBHhBHh}BHh}{{{f{CHb}}}CH`}{{{f{CHf}}}CH`}{{{f{BLf}}{f{{l{Ad}}}}Ff}{{Bd{{l{Ad}}Bb}}}}{Nj{{Gh{IhIh}}}}{{{f{BLf}}{f{Af}}}{{Bd{{l{j}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLf}}{f{Af}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAd}}}d}``{{{f{BNh}}}{{C`{{Bd{B@dBb}}}}}}{{BCjFf}{{Bd{B@dBb}}}}{{{f{BNh}}}{{Bd{B@dBb}}}}{{{f{AAd}}}{{f{Ml}}}}{{{f{BJh}}}{{Dj{Ml}}}}{{CK`Gd}BHh}{{CK`{f{Af}}}BHh}{{CK`{f{{An{c}}}}}BHh{{Hh{Af}}}}{{{f{BDh}}}{{f{{An{ANl}}}}}}```{{BCjc}BCj{{ANj{BHh}}}}{{BHhc}BHh{{ANj{BHh}}}}`10{{BHhAG`}BHh}{{{f{AGf}}c}{{Bd{AGfBb}}}{}}{{{f{AGh}}{f{{l{n}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BJh}}{f{{l{n}}}}}{{Bd{B`Bb}}}}{{BCjBHh}BCj}5{{BBdc}BBd{{Df{Ff{f{ANl}}}{{Dd{d}}}}}}{{{f{BLf}}{f{Af}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BLf}}{f{Af}}}{{Bd{{l{El}}Bb}}}}{CKb{{Bd{B@dBb}}}}{{{f{ClCHd}}{f{ClB@d}}}{{Bd{bBb}}}}{AAf{{l{c}}}Db}{{AMf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{BIbBCj}{{{BHb{c}}}{{Bd{B@dBb}}}BHf}{{{f{Cl{BLj{c}}}}{f{ClB@d}}}{{Bd{bBb}}}BLn}{{{CKd{c}}}{{Bd{B@dBb}}}BHf}{{{BJl{c}}}{{Bd{B@dBb}}}BJn}{{{f{Cl{CKf{c}}}}{f{ClB@d}}}{{Bd{bBb}}}BLn}{CGf{{Bd{BCjBb}}}}{{{f{Cl{BM`{c}}}}{f{ClB@d}}}{{Bd{bBb}}}BLn}{{{f{Cl{CKh{c}}}}{f{ClB@d}}}{{Bd{bBb}}}BLn}{{{CKj{c}}}{{Bd{B@dBb}}}BHf}{BOh{{Bd{BCjBb}}}}{{{CKl{c}}}{{Bd{B@dBb}}}BHf}{{{BMd{c}}}{{Bd{B@dBb}}}BHf}{{{BMh{c}}{f{ClB@d}}}{{Bd{J`Bb}}}BLn}{{{f{ClAAd}}}{{l{j}}}}84{BIf{{Bd{BCjBb}}}}{{{CKd{c}}{C`{{Lf{BHd}}}}d}{{Bd{B@dBb}}}BHf}{{{f{BMf}}Ff}d}{{}BHh}{BCjBCj}{BJfBHh}{BHhBHh}`0``{{}{{BIl{{Lf{BIj}}}}}}{{{f{BNn}}}{{Bd{B`Bb}}}}2{{BHhBHh}BHh}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lf{ADl}}}}}{{Bd{bBAb}}}}{{{f{BK`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BNf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BNb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BBj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BD`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BDj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{BOl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BOn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@b}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{A@`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Nj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@f}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@h}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@j}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@l}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{C@n}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CA`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BId}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CKn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BGl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CAn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CB`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CBb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBf}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CBh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CBn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CC`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CCl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BHh}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BN`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{{BIl{c}}}}{f{ClGj}}}{{Bd{bGl}}}{}}{{{f{CDj}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDl}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CDn}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CE`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CEb}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{BJ`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{CEd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CEn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CF`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BNd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFf}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{{Lf{ce}}}}{f{ClGj}}}{{Bd{bGl}}}{BAhNh}BI`}{{{f{{Lf{ce}}}}{f{ClGj}}}{{Bd{bGl}}}{AEhNh}BI`}{{{f{{Lf{ce}}}}{f{ClGj}}}{{Bd{bGl}}}NhBI`}{{{f{CIj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CFn}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Nd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BDd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BDh}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BAj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{ANl}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{BBd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Nb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CG`}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGb}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{CGd}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{Af}}BE`}Ef}```{{BHhce}BHh{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hh{{An{BHh}}}}}}{{BIbd}BIb}``{{{f{Af}}c}{{Bd{BHhBb}}}{{Hh{{An{BHh}}}}}}{{BHh{C`{Ih}}}BHh}{cc{}}00000000000000000000000{BHnBCj}1{CCnBCj}2222222222222222{IhA@`}333333333{{{f{Af}}}C@l}4444444444{CB`BGl}55555555555555555555555{IhBHh}{MbBHh}{MjBHh}{{{f{Af}}}BHh}9{J`BHh}{LnBHh}{GdBHh}{LdBHh}{dBHh}{AlBHh}{BKnBHh}{LjBHh}{InBHh}{cc{}}0{BJ`{{BIl{{Lf{BK`}}}}}}{CL`{{BIl{{Lf{BK`}}}}}}{CLb{{BIl{{Lf{BK`}}}}}}{CDn{{BIl{{Lf{BK`}}}}}}{CEb{{BIl{{Lf{BK`}}}}}}{CLd{{BIl{{Lf{BK`}}}}}}{CDj{{BIl{{Lf{BK`}}}}}}{CDl{{BIl{{Lf{BK`}}}}}}{CLf{{BIl{{Lf{BK`}}}}}}{CLh{{BIl{{Lf{BK`}}}}}}::::::{CLdBJ`};{CDjBJ`}{CEbBJ`}{CDlBJ`}>>>>>{CF`CEn}????????{{{Dj{c}}}{{Lf{c}}}{CLjNh}}{{{Od{c}}}{{Lf{{An{c}}}}}{}}{{{f{Af}}}{{Lf{Af}}}}{Ef{{Lf{Af}}}}{{{f{{An{c}}}}}{{Lf{{An{c}}}}}ABh}{{{Fl{ce}}}{{Lf{{An{c}}e}}}{}{BI`ABh}}{c{{Lf{c}}}{}}{{{f{CLl}}}{{Lf{CLl}}}}{CLn{{Lf{CId}}}}{{{Cf{ce}}}{{Lf{ce}}}NhBI`}{CH`{{Lf{CM`}}}}{{{f{CId}}}{{Lf{CId}}}}{{{Lf{Af}}}{{Lf{{An{Al}}}}}}{{{f{CM`}}}{{Lf{CM`}}}}{CMbc{}}{cc{}}{CMd{{Lf{CLl}}}}1{CMfCIj}222222{CMhBDh}{CMjBDh}{{{f{{An{B`}}}}}BAj}5{{{Lf{BBd}}}BAj}{{{f{{Lf{BBd}}}}}BAj}{{{f{BBd}}}BAj}{BBdBAj}{{{f{BBf}}}BAj}::{{{Fl{ANl}}}BBd};;;;{{c{C`{Hj}}}CMl{}}{{{CMn{Gd}}{CMn{Al}}{C`{Hj}}}CN`}{{{CMn{Gd}}{CMn{Al}}{C`{Hj}}}CNb}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}00{c{{AKb{{l{e}}}}}{{H`{}{{Cb{}}}}}A`}{c{{AKb{{l{n}}}}}{{H`{}{{Cb{d}}}}}}{e{{Lf{{An{c}}}}}{}{{H`{}{{Cb{c}}}}}}{eBAj{{ANj{Ml}}}{{H`{}{{Cb{c}}}}}}{{gFf}{{CNd{Gd}}}Hh{{H`{}{{Cb{{C`{c}}}}}}}{{H`{}{{Cb{{C`{e}}}}}}}}0{e{{CNd{Gd}}}{{H`{}{{Cb{{C`{d}}}}}}}{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}ABl{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gAEd}{{CNd{Gd}}}BFf{{H`{}{{Cb{{C`{c}}}}}}}{{H`{}{{Cb{{C`{e}}}}}}}}763{{{f{Af}}e}ABl{}{{Ch{}{{Cb{c}}}}}}{c{{AKb{{l{e}}}}}{{Ib{}{{Cb{}}}}}A`}{e{{Lf{{An{c}}}}}Hl{{Ib{}{{Cb{c}}}}}}`{c{{Bd{{CKl{ADl}}Bb}}}{{ANj{CH`}}}}{{}{{Lf{c}}}Nh}{c{{Lf{ec}}}BI`Nh}{{{f{Af}}{f{{An{c}}}}}ABl{}}{{{f{Af}}{f{{An{{C`{c}}}}}}}ABl{}}{{{f{Af}}}{{Bd{CNf}}}}{c{{AKb{{l{n}}}}}{{Id{}{{Cb{d}}}}}}{c{{AKb{{l{e}}}}}{{Id{}{{Cb{}}}}}A`}{Ed{{BIl{{Lf{BIj}}}}}}{{{f{Af}}c}CNh{}}{{{Fl{c}}AEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{Fl{c}}AEd}{{AJf{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}ABh{{G`{}{{Cb{e}}}}IdHlHn}}`{{{f{Af}}cFf}AGj{}}{{FfcAEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{}CFl}{{BCjBCjcc}BCj{{ANj{BHh}}}}{{{f{CNj}}{f{B@d}}ee}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{Af}}Ff}AGl}{{FfAEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}``{{BHhc{BIl{{Lf{BIj}}}}CNl}BHh{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}`{{BHhc}BHh{{ANj{BHh}}}}{{BHhFfFf}BHh}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNnNh}BI`}{{{f{BJh}}Ff}{{Bd{IfBb}}}}{{BJdBHhd}BHh}{{BJfBHhd}BHh}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}6{{{f{BAj}}{f{Af}}}{{C`{{f{Ed}}}}}}{{{f{AGn}}Ff}{{Bd{IfBb}}}}{{{f{AMh}}Ff}{{Bd{IfBb}}}}{{{f{AGn}}Ff}If}{{{f{AMh}}Ff}If}{{{f{BAj}}Ff}{{C`{{Gh{{f{{AOh{AOf}}}}{f{Ed}}}}}}}}{{{f{ClBAj}}Ff}{{C`{{Gh{{f{Cl{AOh{AOf}}}}{f{ClEd}}}}}}}}{BNlBHh}{{{f{BCj}}}CFd}{{{f{CFf}}}Ed}{{}Ed}{{{f{C@d}}GdBOl{C`{{f{AKh}}}}}{{Bd{BOfBb}}}}00{{{f{CIb}}{f{BAj}}CO`{f{Ml}}{f{Ml}}}{{C`{Ml}}}}{{{f{BIj}}{f{BAj}}CO`{f{{An{Ml}}}}}Ml}{{{f{BAj}}{f{Af}}}{{C`{Ml}}}}{{{f{AEd}}}{{f{{An{ANl}}}}}}{{{f{BJj}}}Ff}{{{f{BAj}}{f{Af}}}{{C`{{Gh{Ff{f{{AOh{AOf}}}}{f{Ed}}}}}}}}{{{f{Cl{BMd{c}}}}}{{Bd{{f{{Lf{CFn}}}}Bb}}}BHf}{{{f{Cl{Lf{ce}}}}}{{C`{{f{Clc}}}}}NhBI`}{{{f{Cl{Lf{ce}}}}}{{f{Clc}}}NhBI`}{{{f{COb}}}{{Fl{{f{Af}}}}}}{{{f{BAj}}}{{Fl{{f{Af}}}}}}{{{f{BBd}}}{{Fl{{f{Af}}}}}}{{{f{BJh}}Ff}{{C`{{f{Il}}}}}}{{{f{BJh}}FfFf}{{C`{{f{Il}}}}}}{{{f{BK`}}}{{C`{{BIl{{Lf{BIj}}}}}}}}{{{f{C@d}}BOfBOlJj{C`{{f{AKh}}}}C@b}{{Bd{COdBb}}}}{{{f{C@f}}}{{Lf{C@h}}}}{{{f{Clc}}}{{Bd{COfBb}}}{BJnBHfNh}}{{{f{CKn}}{f{BAj}}}{{Bd{{Lf{BAj}}Bb}}}}{{cFf}{{Fl{{Gh{FfFf}}}}}{{Ch{}{{Cb{Ff}}}}}}{{{f{AOj}}Ff}If}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BJh}}Ff}If}{{{f{CGf}}}d}{{{f{BOh}}}d}`{{BCje}BHn{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}{{{f{COh}}{Fl{B`}}{f{BBj}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}{{BCjBHhcBBj}BHn{{Hh{{An{BHh}}}}}}2{{BDjBDj{f{{An{Gd}}}}BOlJj{C`{AKh}}}{{Bd{{Fl{{Od{Ih}}}}Bb}}}}{{C@d{f{{An{Gd}}}}BOlJj{f{{C`{Ef}}}}ddC@b}{{Gh{{Fl{{Od{Ih}}}}{Fl{Gd}}{Fl{Gd}}}}}}{{{f{BEl}}dd}{{Bd{BhBb}}}}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}{{BHhc}BHh{{ANj{BHh}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNnNh}BI`}21`{{{f{BJh}}}d}{{{f{COj}}}d}{{{f{BBj}}{f{Clc}}}bAH`}{{{f{BD`}}{f{Clc}}}bAH`}{{{f{BDj}}{f{Clc}}}bAH`}{{{f{BOl}}{f{Clc}}}bAH`}{{{f{BOn}}{f{Clc}}}bAH`}{{{f{C@b}}{f{Clc}}}bAH`}{{{f{C@f}}{f{Clc}}}bAH`}{{{f{C@h}}{f{Clc}}}bAH`}{{{f{C@j}}{f{Clc}}}bAH`}{{{f{C@l}}{f{Clc}}}bAH`}{{{f{C@n}}{f{Clc}}}bAH`}{{{f{CA`}}{f{Clc}}}bAH`}{{{f{CAb}}{f{Clc}}}bAH`}{{{f{CAd}}{f{Clc}}}bAH`}{{{f{CAf}}{f{Clc}}}bAH`}{{{f{CAh}}{f{Clc}}}bAH`}{{{f{CAj}}{f{Clc}}}bAH`}{{{f{CAl}}{f{Clc}}}bAH`}{{{f{BGl}}{f{Clc}}}bAH`}{{{f{CAn}}{f{Clc}}}bAH`}{{{f{CB`}}{f{Clc}}}bAH`}{{{f{CBb}}{f{Clc}}}bAH`}{{{f{CBd}}{f{Clc}}}bAH`}{{{f{CBf}}{f{Clc}}}bAH`}{{{f{CBh}}{f{Clc}}}bAH`}{{{f{CBj}}{f{Clc}}}bAH`}{{{f{CBl}}{f{Clc}}}bAH`}{{{f{CBn}}{f{Clc}}}bAH`}{{{f{CC`}}{f{Clc}}}bAH`}{{{f{CCb}}{f{Clc}}}bAH`}{{{f{CCd}}{f{Clc}}}bAH`}{{{f{CCf}}{f{Clc}}}bAH`}{{{f{CCh}}{f{Clc}}}bAH`}{{{f{CCj}}{f{Clc}}}bAH`}{{{f{CCl}}{f{Clc}}}bAH`}{{{f{BKn}}{f{Clc}}}bAH`}{{{f{BHh}}{f{Clc}}}bAH`}{{{f{CDh}}{f{Clc}}}bAH`}{{{f{BN`}}{f{Clc}}}bAH`}{{{f{CDj}}{f{Clc}}}bAH`}{{{f{CDl}}{f{Clc}}}bAH`}{{{f{CDn}}{f{Clc}}}bAH`}{{{f{CE`}}{f{Clc}}}bAH`}{{{f{CEb}}{f{Clc}}}bAH`}{{{f{BJ`}}{f{Clc}}}bAH`}{{{f{CEh}}{f{Clc}}}bAH`}{{{f{CEj}}{f{Clc}}}bAH`}{{{f{CEl}}{f{Clc}}}bAH`}{{{f{CEn}}{f{Clc}}}bAH`}{{{f{CF`}}{f{Clc}}}bAH`}{{{f{CFb}}{f{Clc}}}bAH`}{{{f{CFf}}{f{Clc}}}bAH`}{{{f{CFh}}{f{Clc}}}bAH`}{{{f{CFj}}{f{Clc}}}bAH`}{{{f{{Lf{ce}}}}{f{Clg}}}b{COlNh}BI`AH`}{{{f{CFl}}{f{Clc}}}bAH`}{{{f{BDd}}{f{Clc}}}bAH`}{{{f{BAj}}{f{Clc}}}bAH`}{{{f{ANl}}{f{Clc}}}bAH`}{{{f{Nb}}{f{Clc}}}bAH`}{{{f{CGd}}{f{Clc}}}bAH`}{{{f{COn}}{f{B`}}CBfd}{{Bd{{Gh{{Gh{{Fl{Ih}}{Fl{Ih}}}}d}}Bb}}}}{{{f{COn}}{f{B`}}CBfd}{{Bd{{Gh{{AJn{Ih}}{AJn{Ih}}}}Bb}}}}{{BHn{C`{Ff}}}BCj}{{BJfBHh}BHh}{{BHh{C`{Ff}}}BHh}{{{f{BLf}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BLf}}}{{l{Ad}}}}`{{{f{{An{{f{{l{Ad}}}}}}}}{f{Af}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{D@`}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}`{{{f{CI`}}}{{l{Jh}}}}`{{BIbCB`}BIb}``{{{f{A@`}}}Ih}`{{{f{{Jf{JlJh}}}}{f{{l{Ad}}}}CGd{Fh{Gd}{{Dd{AKf}}}}{Fh{AKf}{{Dd{Gd}}}}{f{AKh}}{f{AKh}}}{{Bd{{l{Jh}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{Af}}}}{Fh{Gd}{{Dd{AKf}}}}{Fh{AKf}{{Dd{Gd}}}}{f{AKh}}{f{AKh}}}{{Bd{{l{Jh}}Bb}}}}{BHhBHh}{{{f{AKf}}}d}{{{BLj{c}}d}{{BLj{c}}}BLn}``0`{{}b}{cb{ABhBI`}}{cBHh{{Hh{{An{Gd}}}}}}``{{{f{COb}}{f{Af}}}{{C`{Ff}}}}{{{f{BAj}}{f{Af}}}{{C`{Ff}}}}{{{f{BBd}}{f{Af}}}{{C`{Ff}}}}{{{f{{An{Ih}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{COf}}Al{C`{Ff}}d{C`{{f{BAj}}}}FfFf{C`{{f{C@l}}}}{C`{Al}}Al{C`{{f{C@n}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gh{BAjFfFf}}Bb}}}}{{{CKj{c}}{C`{Ff}}}{{CKj{c}}}BHf}{{{CKl{c}}{C`{Ff}}}{{CKl{c}}}BHf}``{{}Ff}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAd}}}{{Cf{Cd}}}}{{BCjBCjcc}BCj{{ANj{BHh}}}}{{{f{CNj}}{f{B@d}}ee}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{ClNj}}}{{f{ClJ`}}}}`{{{f{ClBAj}}Ff{AOh{AOf}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BHhBHhGdEd}BHh}{{BHhBHhBHh}BHh}``{{{f{B`}}CC`}B`}{{BHhCC`}BHh}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BHhBHh}BHh}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDh{{Gh{{Fl{ANl}}{Fl{{Cf{Cd}}}}{C`{Hj}}}}}}{{{AKb{c}}}c{}}{{{Lf{ce}}}{{C`{c}}}{}BI`}33{{{f{BHh}}}}{{{f{BDh}}}}{BAj}{D@bBJf}{BJfBJf}{{{Lf{ce}}}{}NhBI`}{{{Lf{ce}}}{{Gh{e}}}NhBI`}{{C@fc}{{BHb{c}}}BHf}{BAlB`}{{{Lf{BJh}}}B`}{CFnD@d}{BCl{{Fl{c}}}{}}{c{{Fl{{AOh{AOf}}}}}{}}{c{{Fl{Ef}}}{}}{{{f{CB`}}}d}{{{f{B`}}{f{B`}}{f{B`}}CCb}{{Bd{{l{n}}Bb}}}}{{BHhccCCb}BHh{{ANj{BHh}}}}{cd{{Hh{CM`}}}}{{{f{{An{Al}}}}}d}{{{f{BDj}}{C`{{f{Af}}}}}d}{{{f{CFl}}}d}{{{f{BJh}}}d}{{{f{BAj}}}d}{{{f{BBd}}}d}{{{f{BMf}}}d}{BHhBHh}{{{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{AHb}}}{{Bd{{l{n}}Bb}}}}27{{{f{BDj}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{BHhc}BHh{{ANj{BHh}}}}54{{{f{AHd}}}{{Bd{{l{n}}Bb}}}}6{{{f{CHl}}}{{l{n}}}}{{{f{CHn}}}{{l{n}}}}{{{f{BO`}}}{{Bd{{l{n}}Bb}}}}999{{{f{BJh}}}{{l{n}}}}::0{{{f{Nj}}}d};{{{f{A@`}}}d}`{{{f{B`}}}d}{{{f{{Lf{ADl}}}}}d}{{}d}{{{f{CJf}}Ej}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CBf}}{f{CB`}}}{{Bd{bBb}}}}4?{{{f{CHl}}}{{l{Jb}}}}{{{f{CHn}}}{{l{Jb}}}}{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEl{cgAEj}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BDh}}}{{AEl{{Fl{{Cf{CJj}}}}D@fAEj}}}}{{{f{BAj}}}{{`{{Ch{}{{Cb{{Gh{{f{{AOh{AOf}}}}{f{Ed}}}}}}}}}}}}{{{f{BAj}}}{{`{Kd}}}}{{{f{ClBAj}}}{{`{Kd}}}}11{{{f{CGf}}}{{Bd{{C`{{Cf{Ch}}}}Bb}}}}{{BJdBHhd}BHh}{{BCjBCjccBGl}BCj{{Hh{{An{BHh}}}}}}{{BJfBHhd}BHh}{{{f{CNj}}{f{B@d}}eeBGl}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{f{D@h}}{f{B@d}}{f{Af}}{f{Af}}CBj{C`{If}}{C`{Ef}}}{{Bd{B@dBb}}}}{{{f{D@j}}{f{B@d}}{f{Af}}{f{Af}}eeCBj{C`{If}}}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{BCjBIb}{{{f{D@l}}{f{Af}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{D@l}}{f{{l{Ad}}}}d}{{Bd{{l{Ad}}Bb}}}}{{BIbd}BIb}`{CK`BHh}{D@nBHh}{{{f{CFn}}}{{f{{C`{{Fl{DA`}}}}}}}}``{{}BHh}{BCjBCj}{BJfBHh}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{BHhBHh}{DAbBCj}4{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNnNh}BI`}`{{BCjBCjcc}BCj{{ANj{BHh}}}}{{{f{CNj}}{f{B@d}}ee}{{Bd{B@dBb}}}{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{BIbc}BIb{{Hh{{An{BHh}}}}}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}e{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}<{{{f{BJh}}}Ff};9{{{f{BDh}}}Ff}{{{f{BAj}}}Ff}{{{f{BBd}}}Ff}{{BCjIh}BCj}{{{f{BJh}}Ff}B`}{{{f{BMf}}}d}`{BHhBJf}{cBHhDAd}{DAdBHh}{BDjBHh}{DAfBHh}{CFfBHh}{{BHhc}BHh{{ANj{BHh}}}}0``{{BIfd}BIf}{{{CKl{c}}d}{{CKl{c}}}BHf}```{BHhBHh}{{{f{D@l}}}{{l{El}}}}0{{{f{D@l}}{f{{An{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{D@l}}GdCIl}{{Bd{{l{j}}Bb}}}}{{{f{D@l}}Gdd}{{Bd{B`Bb}}}}{{{f{D@l}}{f{{l{Ad}}}}d}{{Bd{{l{Ad}}Bb}}}}4{{{f{D@l}}}{{Bd{B`Bb}}}}{{{f{D@l}}}B`}01{{{f{D@l}}}{{Bd{{l{El}}Bb}}}}{{{f{D@l}}}{{l{j}}}}{{{f{D@l}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{D@l}}GdFf}{{l{j}}}}{{{f{D@l}}Ej}{{Bd{{l{j}}Bb}}}}{{{f{D@l}}Al}B`}7{{{f{D@l}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}{{BHhc}BHh{{ANj{BHh}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CNnNh}BI`}21``````{{{f{AKn}}{f{AKn}}}{{Bd{{Gh{AKnAKn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lf{ce}}}}}{{f{Clc}}}ABh{BI`ABh}}{{BCjcCFd{C`{{Lf{CKn}}}}{C`{{f{Af}}}}}BCj{{Df{B@d}{{Dd{{Bd{B@dBb}}}}}}HlHn}}{{D@nc}BHh{{Df{{f{Af}}}{{Dd{{Bd{EfBb}}}}}}HlHn}}{{BHhc{BIl{{Lf{BIj}}}}}BHh{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BHhBHhc{BIl{{Lf{BIj}}}}}BHh{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BHh{f{Clc}}{f{Cl}}}{{Bd{BHhBb}}}{{Dn{BHh{f{Cl}}}{{Dd{{Bd{BHhBb}}}}}}}}{{{f{BJj}}{C`{{f{Ef}}}}}{{Bd{MlBb}}}}{{{f{BJj}}c}{{Bd{MlBb}}}{{A@b{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BIl{{Lf{BIj}}}}}{{Df{{f{Ed}}}{{Dd{Ed}}}}HlHn}}{c{{BIl{{Lf{BIj}}}}}{{Df{{f{{An{{f{Ed}}}}}}}{{Dd{Ed}}}}HlHn}}{{BHhc}BHh{{Dn{BHh}{{Dd{BHh}}}}}}{c{{BIl{{Lf{BIj}}}}}{{Df{{f{Ml}}}{{Dd{Ml}}}}HlHn}}{{D@n{Lf{Df}}}BHh}{c{{BIl{{Lf{BIj}}}}}{{Df{{f{{An{Ml}}}}}{{Dd{Ml}}}}HlHn}}:{{ce{BIl{{Lf{BIj}}}}}BHh{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}{{Hh{{An{BHh}}}}}}{{BHhc{f{{An{BHh}}}}{BIl{{Lf{BIj}}}}}BHh{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHn}}{{BHhBJ`{f{{An{BHh}}}}dd}BHh}2{{{f{BJj}}}{{Bd{MlBb}}}}{{C@fc}C@f{{Df{C@h}{{Dd{C@h}}}}}}1111{CFfCFf}{{{C`{{f{{An{Ff}}}}}}{f{BBd}}{C`{{f{{An{B`}}}}}}{C`{{f{DAh}}}}}B@d}{{{C`{{f{{An{Ef}}}}}}{f{BAj}}{C`{{f{{An{B`}}}}}}d}{{C`{{Fl{Ff}}}}}}{{{f{Af}}}BHh}{BJdBHh}{BCjBCj}{BJfBHh}{{{f{AHf}}}{{C`{c}}}{}}{BHhBHh}{{{f{DAj}}}Lb}{{{f{BJh}}}{{Bd{LbBb}}}}``754{{{f{AHf}}}{{C`{Ld}}}}3{{{f{BJh}}}{{C`{Ld}}}}9876{{{f{AHh}}}{{C`{c}}}{}}51{{{f{DAl}}}Lb}4{{BCjBCn}BCj}``{{{CKd{c}}{C`{CH`}}}{{CKd{c}}}BHf}{{{f{ClBAj}}BAj}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBAj}}{f{BAj}}}b}````{{{f{CI`}}}{{l{Jh}}}}`{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}1`{{{f{Af}}}BHh}{BJdBHh}{BCjBCj}{BJfBHh}{{{f{AHf}}}{{C`{c}}}{}}{BHhBHh}{{{f{AHf}}}{{C`{{Gh{cc}}}}}{}}```{{{f{DAj}}}Lb}{{{f{BJh}}}{{Bd{LbBb}}}}``{{{f{D@`}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}`=```6{{{f{CHl}}}{{l{Lh}}}}21`{{{f{DAn}}{C`{{f{AKh}}}}}{{Bd{DAnBb}}}}{{{f{DB`}}{C`{{f{AKh}}}}}{{Bd{DB`Bb}}}}{{{f{BDj}}}Gd}{{{f{BDj}}}d}{{{BHj{}{{Dd{c}}}}{f{B`}}}c{}}{{BDjGd}BDj}{{BHhBHh}}{{{f{BHl}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BJh}}}Ff}{{{f{CGf}}}{{C`{Ff}}}}{{{f{BOh}}}{{C`{Ff}}}}{{{f{BIf}}}{{C`{Ff}}}}`````{{{BLj{c}}Ff}{{BLj{c}}}BLn}`{BJdBHh}{BJfBHh}{{{f{AFl}}}{{Bd{FfBb}}}}{BHhBHh}{{{f{BJh}}}{{Bd{FfBb}}}}{{{f{BJh}}}{{f{Af}}}}{BHhD@n}````33`{{{f{D@`}}}{{l{Jb}}}}{{{f{CHn}}}{{l{Jb}}}}{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}{{{f{CI`}}}{{l{Jh}}}}{{{f{BDj}}}Gd}`{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{CJhNh}BI`}{{{f{CBf}}}d}{BDj}{BHh}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{BDj}}}d}{{DBbFf}{{C`{Ff}}}}{{BHhc}BHh{{ANj{BHh}}}}0{{{f{BJj}}}{{Bd{MlBb}}}}{{}c{}}{cCKbBJn}{cCHdBLn}2{{{f{Af}}c}DBd{}}{c{{AKb{c}}}{}}{BCjBIb}{c{{BHb{c}}}BHf}{c{{BLj{c}}}BLn}{{{f{{An{Ml}}}}}BJj}{c{{CKd{c}}}BHf}{c{{BJl{c}}}BJn}{c{{CKf{c}}}BLn}{{}CHb}{c{{BM`{c}}}BLn}{{}CHf}{c{{CKh{c}}}BLn}{c{{CKj{c}}}BHf}{GdBDj}{cBOh{{Hh{CM`}}}}{cBIf{{Hh{CM`}}}}{{BDjBDjBDj}C@d}{c{{CKl{c}}}BHf}{{DBf{Lf{CFn}}{Lf{BBd}}Ff{C`{{Fl{Ff}}}}{C`{{Lf{BHd}}}}{C`{DAh}}Ffd{C`{{Fl{B`}}}}CBd}{{Bd{BMfBb}}}}{c{{BMd{c}}}BHf}{c{{BMh{c}}}{BLnBLn}}{CB`BGl}{c{{BIl{c}}}{}}{{BHhBHhBHh}CEd}{{}CEf}{{{f{Af}}{Fl{Ml}}{BIl{{Lf{BIj}}}}c}BNdBK`}{c{{Lf{c}}}{}}{{AEd{Fl{{Cf{Cd}}}}{C`{Hj}}}BDh}{{}BAj}{{cAEdd}ANl{{ANj{Ef}}}}{e{{Lf{c}}}{}{{A@b{{f{{CIn{c}}}}}{{Dd{c}}}}}}{AEdBDh}{{{f{AHj}}FfFf}{{l{c}}}Db}{{{f{BJh}}FfFf}B`}{{{f{Af}}}C@l}{{ce}{{Lf{ce}}}{}BI`}{{{f{BAj}}Ff{AOh{AOf}}Ed}{{Bd{BAjBb}}}}{{Gd{f{Af}}}{{Bd{B`Bb}}}}{EfC@l}{{AEdFf}BDh}{{{Lf{{An{CH`}}}}}BOh}{{{Lf{{An{CH`}}}}}BIf}{AlC@l}{{}{{Lf{{BLd{c}}}}}{}}{c{{Lf{{BLd{e}}c}}}BI`{}}{Ff{{Lf{{An{{BLd{c}}}}}}}{}}{{Ffc}{{Lf{{An{{BLd{e}}}}c}}}BI`{}}3210{{{f{ClDBh}}}C`}{{{f{ClCOd}}}C`}{{{f{ClBMl}}Ff}{{Bd{{C`{{Fl{B@d}}}}Bb}}}}{{{f{ClBLh}}Ff}{{Bd{{C`{{Fl{B@d}}}}Bb}}}}{{{f{ClBMf}}Ff}{{Bd{{C`{{Fl{B@d}}}}Bb}}}}{{{f{BHh}}{f{Cl{BDn{{f{BHh}}}}}}}b}{{BHh{f{Cl{BDn{BHh}}}}}b}{BHhBHh}0{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}0{GdBHh}`{{}A@`}{{}Nj}`{{{f{BJh}}}Ff}{BCjBCj}6`````{{{f{Cl{BMd{c}}}}}{{Bd{FfBb}}}BHf}````{{{f{AGd}}}{{Bd{{Gf{Gd}}Bb}}}}{{BIbc}BIb{{Hh{{An{BHh}}}}}}{{BCj{f{Cl{BGf{BGd}}}}{f{Cl{BGf{BGh}}}}}{{Bd{BGbBb}}}}`{{BHhc}BHh{{ANj{BHh}}}}{{{f{CHl}}}{{l{M`}}}}{{{f{CHn}}}{{l{M`}}}}{{{f{BO`}}}{{Bd{{l{M`}}Bb}}}}{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}{{CDbc}BHh{{ANj{BHh}}}}{{CDfc}BHh{{ANj{BHh}}}}`{{BHhe}BHh{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}{{BHhe{C`{{Gh{eEj}}}}CF`}BHh{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}```{{{f{Af}}}BDj}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jf{JdJb}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jf{KfJh}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}Jj}{{Jf{JlJh}}}}``{{{f{BDj}}{f{BDj}}}{{C`{AOn}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}{{C`{AOn}}}{CNnNh}BI`}{{{f{CGf}}}{{f{CM`}}}}{{{f{BOh}}}{{f{CM`}}}}{{{f{BIf}}}{{f{CM`}}}}`{{{f{CGf}}}{{f{{An{CH`}}}}}}{{{f{BOh}}}{{f{{An{CH`}}}}}}{{{f{BIf}}}{{f{{An{CH`}}}}}}``{{}BHh}{c{{DBj{{Lf{c}}}}}{}}{{ce}{{DBj{{Lf{ce}}}}}{}BI`}````{{BHhc}BHh{{ANj{BHh}}}}```{{D@n{f{Af}}}BHh}0{{{f{B@d}}{f{B@d}}d}{{Bd{{Gh{{Ol{{Fl{Ih}}{Fl{Nj}}}}{Ol{{Fl{A@`}}{Fl{Nj}}}}}}Bb}}}}`{{{f{DAj}}}Lb}{BHhBHh}{BCj{{Bd{{Gh{B@dB@d}}Bb}}}}```{{{f{{Lf{c}}}}{f{ClDBl}}}b{AJjNh}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}dNhBI`}{{{f{Af}}BHhNb}BHh}{{BCjBHhNb}BCj}{{{f{AHh}}LdNb}{{Bd{{C`{c}}Bb}}}{}}{{BHhBHhNb}BHh}{{{f{DAl}}LdNb}{{Bd{LbBb}}}}{{{f{BJh}}LdNb}{{Bd{LbBb}}}}{{{f{CHl}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAb}}}{}CJn{}}````{{{f{DBn}}CCl{C`{J`}}}B`}{{BHhCCl{C`{J`}}}BHh}{{{f{Cl{Lf{ADl}}}}{f{Cl{An{Al}}}}}{{Bd{FfBAb}}}}{{{f{Cl{Lf{ADl}}}}DC`}{{Bd{bBAb}}}}{{{BMd{c}}CBd}{{BMd{c}}}BHf}{{{f{Cl{Lf{ADl}}}}{f{Cl{Fl{Al}}}}}{{Bd{FfBAb}}}}{{{f{Cl{Lf{ADl}}}}{f{ClEf}}}{{Bd{FfBAb}}}}{{{f{Clc}}}{{Bd{eBAb}}}{}DCb}{{{f{Cl{Lf{ADl}}}}{f{Cl{An{DCd}}}}}{{Bd{FfBAb}}}}{{{f{CGf}}}d}{{{f{BJh}}}B`}{{{f{BOh}}}d}{{{f{BIf}}}d}````{{ce}BHh{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}HlHnABh}{{Hh{{An{BHh}}}}}}{{{f{AHl}}}B`}0{{{BHj{}{{Dd{c}}}}{f{B`}}}c{}}{{BHhBHh}}{{{f{BHl}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBAj}}{f{Af}}}{{C`{Ed}}}}{{{f{ClBJh}}{f{Af}}}b}{{BCjei}BCj{{Hh{Af}}}{{H`{}{{Cb{c}}}}}{{Hh{Af}}}{{H`{}{{Cb{g}}}}}}{{{f{ClBAj}}{f{Af}}{AOh{AOf}}}{{C`{{AOh{AOf}}}}}}{{CK`{Fl{Ef}}}BHh}{{cBHh}BHh{{ANj{BHh}}}}{{{f{B`}}{f{{l{El}}}}}{{Bd{{l{j}}Bb}}}}{{BHhc}BHh{{ANj{BHh}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{BLf}}{f{Af}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}{{BHhcc{C`{c}}{C`{Ed}}}BHh{{ANj{BHh}}}}1{{{f{BJj}}{C`{Ed}}}{{Bd{MlBb}}}}{{{f{BLf}}{f{Af}}{f{Af}}Ff}{{Bd{{l{Ad}}Bb}}}}3{{{f{{Jf{JlJh}}}}{C`{{f{Af}}}}{f{{l{Ad}}}}CGd}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{ClBAj}}Ff}b}{{BHh{f{{An{Gd}}}}CFb}BHh}{{{f{CM`}}}CH`}`{{{f{AHn}}}AHn}{{{f{BJh}}}B`}{BJdBHh}{BCjBCj}{BJfBHh}{BHhBHh}`{{BIbc}BIb{{Hh{{An{BHh}}}}}}{{{f{COh}}{Fl{B`}}{f{BD`}}}{{Bd{{Gh{B`{Fl{B`}}Bh}}Bb}}}}{{BCjBHhcBD`}BHn{{Hh{{An{BHh}}}}}}{{BHhBD`}BHh}{{{f{AI`}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{BHh{Lf{Df}}{BIl{{Lf{BIj}}}}Nd}BHh}{{{f{BJh}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{BHhFfc}BHh{{Dn{{f{Cl{l{E`}}}}}{{Dd{{C`{Ld}}}}}}HlHnDh}}{{{f{DCf}}Nd}{{Bd{B`Bb}}}}{{BHhNd}BHh}{{{f{DCf}}{f{B`}}BOd}{{Bd{B`Bb}}}}{{BHhBHhBOd}BHh}32102032103{{BHhNbLdNd}BHh}2{{BHhBHhNbLdBOd}BHh}543254325432{{{f{DCh}}{f{{l{Ad}}}}{C`{{f{AKh}}}}}{{Bd{DChBb}}}}{{{f{BNn}}Ih}{{Bd{B`Bb}}}}{{BHhIh}BHh}{{{f{C@d}}Gd{C`{{f{AKh}}}}}{{Bd{GdBb}}}}0{{{f{BNn}}Ln}{{Bd{B`Bb}}}}{{BHhLn}BHh}2````{{{f{CGf}}}{{C`{{f{DAh}}}}}}{{{f{BOh}}}{{C`{{f{DAh}}}}}}{{{f{BIf}}}{{C`{{f{DAh}}}}}}``````{{{f{D@l}}{l{j}}}{{l{j}}}}{{}{{BIl{{Lf{BIj}}}}}}{{BHhBHhdd{C`{J`}}}BHh}0`{{{f{BId}}DCj}{{Bd{B@dBb}}}}{{{f{BIf}}DCj}{{Bd{B@dBb}}}}{{cBOj}{{Bd{BCjBb}}}{{Hh{CM`}}}}{{{Lf{{An{CH`}}}}BOj}{{Bd{BCjBb}}}}{{cC@`}{{Bd{BCjBb}}}{{Hh{CM`}}}}{{{Lf{{An{CH`}}}}C@`}{{Bd{BCjBb}}}}{{DCl{f{{An{Ih}}}}e}{{Bd{B`Bb}}}Dh{{H`{}{{Cb{{C`{c}}}}}}}}{{{f{AIb}}c{C`{e}}}{{Bd{AIbBb}}}{{H`{}{{Cb{Ih}}}}}{}}{{{f{AIb}}ci}{{Bd{AIbBb}}}{{H`{}{{Cb{Ih}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{Cl{CKd{c}}}}}{{Bd{{Lf{BBd}}Bb}}}BHf}{{{f{Cl{BJl{c}}}}}{{Bd{BAjBb}}}BJn}{{{f{ClBCj}}}{{Bd{{Lf{BAj}}Bb}}}}{{{f{BIf}}{C`{Ff}}}{{Bd{{Lf{BAj}}Bb}}}}{{{f{BMf}}}{{f{{Lf{BBd}}}}}}{{{f{Cl{BMd{c}}}}}{{Bd{{Lf{BBd}}Bb}}}BHf}{{{f{BId}}{C`{Ff}}}{{Bd{{Lf{BAj}}Bb}}}}{{{f{CFn}}}{{f{DCn}}}}``````{{{f{ClBCj}}{f{Cl{BGf{BGd}}}}{f{Cl{BGf{BGh}}}}}{{Bd{{Lf{BAj}}Bb}}}}`{{{f{D@`}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}`{{{f{CI`}}}{{l{Jh}}}}`{{{f{Cl{Lf{ADl}}}}DD`}{{Bd{J`BAb}}}}{{BCjc}BCj{{Hh{{An{BHh}}}}}}0````{{{f{AIb}}{f{{l{n}}}}{C`{c}}}{{Bd{AIbBb}}}{}}{{{f{BCj}}{BGf{BGd}}{BGf{BGh}}}b}{{{f{ClBAj}}{f{Af}}Ed}{{C`{Ed}}}}{{{f{ClBAj}}FfEd}{{C`{Ed}}}}{{{BMd{c}}d}{{BMd{c}}}BHf}{{{BMh{c}}d}{{BMh{c}}}BLn}{{{CKd{c}}d}{{CKd{c}}}BHf}{{{BJl{c}}d}{{BJl{c}}}BJn}{{{CKj{c}}d}{{CKj{c}}}BHf}4{{CKbd}CKb}{{BHhKj}BHh}{{{f{ClBDh}}{C`{Hj}}}b}{{{f{AId}}Gd}{{l{c}}}Db}{{{f{BJh}}Gd}B`}{{BJdBHh}BHh}{{BCjc}BCj{{ANj{BHh}}}}{{BJfBHh}BHh}{{BHhBHh}BHh}{{{f{AIf}}Gdc}{{l{e}}}{}Db}{{BCjce}BCj{{ANj{BHh}}}{{ANj{BHh}}}}{{BHhce}BHh{{ANj{BHh}}}{{ANj{BHh}}}}{{{f{ClBAj}}{f{Af}}}{{C`{Ed}}}}{{{f{ClBAj}}Ff}{{C`{{Gh{{AOh{AOf}}Ed}}}}}}{{{f{BGl}}}d}{BHhBHh}{{{f{ClAAf}}}b}{{{f{ClBJh}}}b}{{BHh{C`{J`}}}BHh}``{{BCjCH`CA`}{{Bd{bBb}}}}{{BCjCH`CAh}{{Bd{bBb}}}}{{BCjCH`CAl}{{Bd{bBb}}}}{{BCjCH`CBl}{{Bd{bBb}}}}`````{{{f{BJh}}GdFf}B`}{{BCjGdIh}BCj}{{BJfBHhBHh}BHh}>{{{f{ClBDh}}FfFf}b}0```{{{f{AIh}}FfFf}AIh}{{{f{c}}FfFf}e{}{}}1022{{BDhFfFf}BDh}0`{{{f{AFj}}d}{{l{c}}}Db}{{BJdEj}BHh}{{BCjcEn}BCj{{BCl{{AOh{AOf}}}}}}{{BJfEj}BHh}{{BHhEj}BHh}{{BHheEn}BHh{{ANj{BHh}}ABh}{{Hh{{An{c}}}}}}{{BCjcEn}BCj{{Hh{{An{BHh}}}}}}{{{f{AFj}}Ej}{{l{c}}}Db}{{{f{BJh}}Ej}{{Bd{B`Bb}}}}{{{f{{Lf{c}}}}}{{C`{{f{AJj}}}}}{AJjNh}}{{{f{BLf}}{f{{l{Ad}}}}}{{l{j}}}}{{{f{BDh}}Ff}{{Gh{{Cf{Cd}}{Cf{Cd}}}}}}0{{{f{BLf}}{f{{l{Ad}}}}Ff}{{Bd{AKlBb}}}}0{{{f{{l{Ad}}}}{f{{l{Ad}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}3{{{f{{l{Ad}}}}{f{{l{Ad}}}}Ffed}{{Bd{AKlBb}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{BHhBHh}`{{{f{CGn}}{f{{An{Al}}}}}{{l{n}}}}{{{f{CGn}}{f{{l{Ab}}}}}{{l{n}}}}`{{BJdAl}BHh}{{BCjAl}BCj}{{BJfAl}BHh}{{{f{AIj}}Al}{{C`{Ld}}}}{{BHhAl}BHh}{{{f{BJh}}Al}{{C`{Ld}}}}{{{f{DDb}}Al}Lb}{{{f{BJh}}Al}{{Bd{LbBb}}}}{{IhIh}Nj}{BHhDDd}{{{f{BLf}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Ad}}}}{f{Af}}d}{{l{Ad}}}}{{{f{BLf}}}{{l{El}}}}0{{{f{BLf}}}{{l{Ad}}}}{{{f{BLf}}{f{B`}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}4````{{{f{BO`}}{f{Af}}}{{Bd{B`Bb}}}}`{{BHhEd}BHh}`{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ad}}}}707070{{{f{BLf}}{f{{l{Ad}}}}}{{l{Ad}}}}10{{{f{{Lf{ce}}}}}FfNhBI`}{BHhCK`}{{{BHj{}{{Dd{c}}}}{f{B`}}}c{}}{{BHhBHh}}{{{f{BHl}}{f{B`}}}{{Bd{B`Bb}}}}{{BIbc}BIb{{Hh{Af}}}}{{D@n{f{Af}}}BHh}{{{f{BGl}}}{{f{Af}}}}`1{{{f{Af}}}BHh}{BJdBHh}{BCjBCj}{BJfBHh}{{{f{AHf}}}{{C`{c}}}{}}{BHhBHh}{{{f{DAj}}}Lb}{{{f{BJh}}}{{Bd{LbBb}}}}{{}{{BIl{{Lf{BIj}}}}}}{{{f{Clc}}i}{{Bd{gBAb}}}{}{}{}{{A@b{{f{Cle}}}{{Dd{g}}}}}}{{BCjIh}BCj}{{BHn{C`{Ff}}}BCj}{{BJfBHh}BHh}{{BHh{C`{Ff}}}BHh}{{{f{AIl}}{f{c}}}{{Bd{AIlBb}}}Nh}{{{f{BJh}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{DDf}}{f{{An{Nj}}}}Kj}DDf}{{{f{DDf}}{f{{An{Nj}}}}}DDf}{{{f{BJh}}{f{{An{Ih}}}}}{{Bd{B`Bb}}}}{{{f{BJh}}{f{{An{Ih}}}}}B`}{{{f{AIn}}{f{c}}}AInNh}{{{f{BJh}}{f{{l{El}}}}}B`}{{{f{ClBDh}}}{{C`{Hj}}}}{{BHhBHhBHh}BHh}{{CD`c}CDb{{ANj{BHh}}}}{{CDdc}CDf{{ANj{BHh}}}}`{{BHhBHhBDjBOl}BHh}```{{{f{BO`}}Jj}{{Bd{{l{Jh}}Bb}}}}{BCj{{Bd{DDhBb}}}}{CCn{{Bd{DDhBb}}}}1{{{f{CFf}}}{{C`{If}}}}{{BJfFf}BHh}{{{f{BAj}}d}BBd}{{{f{BDh}}}{{Cf{Cd}}}}{{{f{AJ`}}}{{Fl{{f{{An{Al}}}}}}}}{{{f{BCj}}d}{{Bd{EfBb}}}}{{{f{DDj}}{C`{{f{Af}}}}d}{{Bd{B@dBb}}}}{{{f{BH`}}{C`{{f{Af}}}}d}{{Bd{B@dBb}}}}{{{f{BHh}}{f{BAj}}CO`}{{Bd{MlBb}}}}{{{f{BLf}}{f{{l{El}}}}d}{{Bd{{l{Jh}}Bb}}}}{BJdBHh}{{{f{BLf}}}{{l{Ad}}}}{D@nBHh}{{{f{A@`}}}{{C`{Ih}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BHhBHh}{{{f{BJj}}}{{Bd{MlBb}}}}{{{f{BO`}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}00000000000{{{f{ClBAj}}{f{BAj}}}{{Bd{dBb}}}}`887``{{BCjIhcEn}BCj{{Hh{{An{BHh}}}}}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}g{}{}{}}{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}g{}{}{}}{{{f{DDl}}{C`{{f{AKh}}}}{f{{l{Ad}}}}}{{Bd{DDlBb}}}}{{{f{BDj}}Gd{C`{{f{AKh}}}}ceg}{{Bd{GdBb}}}{{Df{Gd}{{Dd{Gd}}}}}{{Df{Gd}{{Dd{AKf}}}}}{{Df{AKf}{{Dd{Gd}}}}}}{{{f{BDj}}Gd{C`{{f{AKh}}}}}{{Bd{GdBb}}}}{{{f{C@d}}Gd{C`{{f{AKh}}}}}{{Bd{GdBb}}}}10`10{g{{Bd{ALbe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{AEdg}{{Bd{ALde}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{ANd{{Bd{eg}}}{}{{ALb{c}}AJf}{}}0{{ANdAEd}{{Bd{eg}}}{}{{ALd{c}}AJf}{}}0{{ABn{f{Af}}}{{Bd{{l{c}}e}}}Db{}}{{AC`{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{AC`{f{Af}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{If{{Bd{CFfBb}}}}111{{{Lf{{An{c}}e}}}{{Bd{{Lf{{Od{c}}e}}}}}{}BI`}22222222222222{D@d{{Bd{CFnB@l}}}}{{{f{BAj}}{f{Af}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BAj}}Ff}{{Bd{{Gh{{f{{AOh{AOf}}}}{f{Ed}}}}Bb}}}}{{{f{BAj}}{f{Af}}}{{Bd{MlBb}}}}{{{f{BAj}}{f{Af}}}{{Bd{{Gh{Ff{f{{AOh{AOf}}}}{f{Ed}}}}Bb}}}}{{{f{ClBAj}}{f{Af}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{COb}}{f{Af}}}{{Bd{FfBb}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{C@f{C`{CH`}}}{{Bd{{BHb{ADl}}Bb}}}}{{{f{BJj}}c}{{Bd{MlBb}}}{{A@b{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BJj}}c}{{Bd{MlBb}}}{{A@b{{f{{An{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BHhc}{{Bd{BHhBb}}}{{Dn{BHh}{{Dd{{Bd{BHhBb}}}}}}}}{{{f{BJj}}c}{{Bd{MlBb}}}{{A@b{{f{Ml}}}{{Dd{{Bd{MlBb}}}}}}}}{{DBbFf}{{Bd{FfBb}}}}{Al{{Bd{CCdBb}}}}{Ih{{Bd{CCfBb}}}}{Ln{{Bd{CCjBb}}}}{c{{Bd{{Lf{c}}DDn}}}{}}{{AEd{Fl{{Cf{Cd}}}}{C`{Hj}}}{{Bd{BDhBb}}}}{{ce}{{Bd{{Lf{ce}}DDn}}}{}BI`}{{}{{Bd{{Lf{{BLd{c}}}}DDn}}}{}}{c{{Bd{{Lf{{BLd{e}}c}}DDn}}}BI`{}}10`{c{{Bd{{DBj{{Lf{c}}}}DDn}}}{}}{{ce}{{Bd{{DBj{{Lf{ce}}}}DDn}}}{}BI`}{{{f{BK`}}{f{Cl{Fl{Al}}}}}{{Bd{bBb}}}}{{{Lf{ce}}}{{Bd{c{Lf{ce}}}}}{}BI`}``{{{f{c}}}On{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Af}}}}`{{{f{AFl}}}{{Bd{AFlBb}}}}{BJdBHh}{{BCj{C`{{Fl{Ef}}}}BB`}BCj}{BJfBHh}{BHhBHh}{{{f{BJh}}}{{Bd{B`Bb}}}}4321{{BCje}BCj{{Hh{Af}}}{{H`{}{{Cb{c}}}}}}{{{Lf{{DE`{c}}}}}{{Bd{cb}}}Hl}{{{Lf{ce}}}cABhBI`}{{{f{ClC@f}}{f{DEb}}}b}5{{{f{DEd}}c{f{Af}}BDj}{{Bd{B@dBb}}}{{BCl{Ef}}}}0{{{BMd{c}}d}{{BMd{c}}}BHf}```{{BIbCBf}BIb}`{{{f{BDh}}}{{C`{{f{Hj}}}}}}0{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}cABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{CJf}}ddEf}{{Bd{B@dBb}}}}{{BHhddEf}BHh}`2`{{{f{BDh}}}{{f{{An{{Cf{Cd}}}}}}}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{BDh}}}D@f}{{BJdAl}BHh}{{BCjAl}BCj}{{BJfAl}BHh}{{{f{AIj}}Al}{{C`{Ld}}}}{{BHhAl}BHh}{{{f{BJh}}Al}{{C`{Ld}}}}{{{f{DDb}}Al}Lb}{{{f{BJh}}Al}{{Bd{LbBb}}}}`{{{f{DEf}}Nn{f{Cl{Fl{J`}}}}}{{Bd{bBb}}}}{{{f{DEf}}Nn{f{Cl{An{J`}}}}}{{Bd{bBb}}}}`{{{f{{Lf{{DE`{c}}}}}}g}{{Bd{eb}}}Hl{}{{A@b{{f{c}}}{{Dd{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lf{ce}}}}}FfNhBI`}{{{f{CHl}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}210{{{f{C@b}}}{{C`{Ih}}}}{{{f{BDj}}}Gd}`{{{f{BDj}}}d}`{cCD`{{ANj{BHh}}}}{{CDbc}CDd{{ANj{BHh}}}}{{CDfc}CDd{{ANj{BHh}}}}```{{BIbBCj}BIb}{{CEdBHh}CEd}{{{BLj{c}}{DEh{Ff}}}{{BLj{c}}}BLn}{{{CKj{c}}{DEh{Ff}}}{{CKj{c}}}BHf}{{BIf{C`{{DEh{Ff}}}}}BIf}{{BOhd}BOh}{Ffc{}}0{FfBAj}{{{CKl{c}}{C`{{DEh{Ff}}}}}{{CKl{c}}}BHf}{{C@fFf}C@f}{{BOh{C`{CGh}}}BOh}{{BCjd}BCj}{{BGlCAn}BGl}{{BCjBHh}BCj}{{{f{ClBAj}}{AOh{AOf}}Ed}{{C`{Ed}}}}{{{CKd{c}}{C`{{Fl{Ef}}}}}{{CKd{c}}}BHf}{{{BJl{c}}{C`{{Fl{Ef}}}}}{{BJl{c}}}BJn}{{BCjc}BCj{{Hh{{An{BHh}}}}}}{{{BMd{c}}{C`{{Fl{Ef}}}}}{{BMd{c}}}BHf}{{C@f{C`{{Lf{{Fl{Ef}}}}}}}C@f}`2{{BOh{C`{{f{Af}}}}}BOh}{{C@h{C`{c}}}C@h{{ANj{C@l}}}}{{{CKf{c}}{C`{CAj}}}{{CKf{c}}}{}}{{CHb{C`{CAj}}}CHb}{{{BM`{c}}{C`{CAj}}}{{BM`{c}}}BLn}{{CHf{C`{CAj}}}CHf}{{{BMh{c}}CBn}{{BMh{c}}}BLn}{{BCjc}BCj{{Hh{{An{BCj}}}}}}{{{BMh{c}}{C`{Ff}}}{{BMh{c}}}BLn}{{{BLj{c}}{C`{Ef}}}{{BLj{c}}}BLn}0{{CEdBHh}CEd}{{CEfBHh}CEf}{{BOhd}BOh}{{C@hd}C@h}{{{f{BJj}}Ed}{{Bd{MlBb}}}}{{BOh{C`{{Lf{BAj}}}}}BOh}{{C@f{C`{{Lf{{Fl{Ed}}}}}}}C@f}{{BOhC@j}BOh}{{C@hC@j}C@h}{{BOhAl}BOh}{{C@hAl}C@h}{{CHbCH`}CHb}{{CHfCH`}CHf}{{CK`{Fl{BHh}}}BHh}{{{BLj{c}}{C`{Ff}}}{{BLj{c}}}BLn}{{CEfBHhBHhBHh}CEf}=={{C@fd}C@f}{{{BMd{c}}{C`{{Fl{B`}}}}}{{BMd{c}}}BHf}{{CEdBHhBHhBHh}CEd}3{{CEdBHh}CEd}{{CEfBHh}CEf}{{{CKj{c}}d}{{CKj{c}}}BHf}{{BOhd}BOh}{{BIfd}BIf}{{{CKl{c}}d}{{CKl{c}}}BHf}8{{BOh{C`{Ff}}}BOh}{{BIf{C`{Ff}}}BIf}{{C@f{C`{Ff}}}C@f}{{{CKh{c}}DEj}{{CKh{c}}}BLn}{{{CKj{c}}DEj}{{CKj{c}}}BHf}{{{BLj{c}}Ef}{{BLj{c}}}BLn}8>{{ANl{DEl{EfEf}}}ANl}{{BBd{DEl{EfEf}}}BBd}=<<=<:{{C@hd}C@h}>{{CGfc}CGf{{ANj{{C`{Ff}}}}}}{{{CKd{c}}{C`{Ff}}}{{CKd{c}}}BHf}{{{BJl{c}}{C`{Ff}}}{{BJl{c}}}BJn}{{BOhc}BOh{{ANj{{C`{Ff}}}}}}<{{BIfc}BIf{{ANj{{C`{Ff}}}}}}<{{{CKl{c}}{C`{Ff}}}{{CKl{c}}}BHf}{{{BMd{c}}{C`{Ff}}}{{BMd{c}}}BHf}=1={{CEfBHh}CEf};{{BOh{C`{C@n}}}BOh}{{C@h{C`{C@n}}}C@h}{{BCjCFd}BCj}{{C@fC@h}C@f}{{CGfCH`}CGf}{{BOhCH`}BOh}{{BIfCH`}BIf}{{{CKl{c}}{C`{e}}}{{CKl{c}}}BHf{{ANj{CH`}}}}{{C@f{C`{c}}}C@f{{ANj{CH`}}}}{{CGf{Lf{{An{CH`}}}}}CGf}{{BOh{Lf{{An{CH`}}}}}BOh}{{BIf{Lf{{An{CH`}}}}}BIf}{{{CKf{c}}d}{{CKf{c}}}{}}{{{BM`{c}}d}{{BM`{c}}}BLn}{{{BMd{c}}{C`{{Lf{BHd}}}}}{{BMd{c}}}BHf}{{BCjd}BCj}{{{CKd{c}}{C`{{Fl{Ff}}}}}{{CKd{c}}}BHf}{{{BJl{c}}{C`{{Fl{Ff}}}}}{{BJl{c}}}BJn}{{{CKj{c}}{C`{{Fl{Ef}}}}}{{CKj{c}}}BHf}{{{BMd{c}}{C`{{Fl{Ff}}}}}{{BMd{c}}}BHf}{{C@f{C`{{Lf{{Fl{Ff}}}}}}}C@f}5{{{BLj{c}}Al}{{BLj{c}}}BLn}{{BOh{C`{Al}}}BOh}{{C@h{C`{Al}}}C@h}{{{BLj{c}}CAd}{{BLj{c}}}BLn}{{BOhd}BOh}{{C@fd}C@f}{{CGfd}CGf}2{{BIfd}BIf}{{{CKl{c}}d}{{CKl{c}}}BHf}3>{{{BMh{c}}{C`{Ff}}}{{BMh{c}}}BLn}{{CGfc}CGf{{ANj{{C`{DAh}}}}}}{{{CKd{c}}{C`{DAh}}}{{CKd{c}}}BHf}{{{BJl{c}}{C`{DAh}}}{{BJl{c}}}BJn}{{BCj{f{Af}}{C`{Ih}}}BCj}{{BOhc}BOh{{ANj{{C`{DAh}}}}}}{{BOh{C`{DAh}}}BOh}{{BIf{C`{DAh}}}BIf}{{BIfc}BIf{{ANj{{C`{DAh}}}}}}{{{BMd{c}}{C`{DAh}}}{{BMd{c}}}BHf}{{C@f{C`{DAh}}}C@f}{{{f{BJj}}}{{Bd{MlBb}}}}{{C@fFf}C@f}{{{CKj{c}}{Lf{BAj}}}{{CKj{c}}}BHf}{{BOh{C`{{Lf{BAj}}}}}BOh}{{BIf{C`{{Lf{BAj}}}}}BIf}{{{CKl{c}}{Lf{BAj}}}{{CKl{c}}}BHf}{{{BMd{c}}{C`{{Lf{BBd}}}}}{{BMd{c}}}BHf}{{C@f{C`{{Lf{BAj}}}}}C@f}{{BOhc}{{Bd{BOhBb}}}{{Df{BAj}{{Dd{{Bd{BAjBb}}}}}}}}{{{CKj{c}}{f{BAj}}}{{CKj{c}}}BHf}{{{CKl{c}}{f{BAj}}}{{CKl{c}}}BHf}3{{CEdBHh}CEd}{{CEfBHh}CEf}{{{BLj{c}}Al}{{BLj{c}}}BLn}{{BOhAl}BOh}{{C@hAl}C@h}{{BCjd}BCj}{{BOhFf}BOh}{{C@fFf}C@f}102{{{BMh{c}}CFl}{{BMh{c}}}BLn}3{{BGl{C`{Ef}}}BGl}{{{BLj{c}}{C`{Ef}}}{{BLj{c}}}BLn}{{CEdJj}CEd}{{CEd{C`{Ef}}}CEd}{{BOhd}BOh}{{C@hd}C@h}109{{{f{BDh}}{C`{Hj}}}{{Cf{Cd}}}}{{BDh{C`{Hj}}}BDh}{{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{C`{Hj}}}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{CEfBHh}CEf}{{CEdBHh}CEd}{BCjBCj}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}{{{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}c}e{}{}{}}10{{c{A@j{}{{A@d{c}}{A@f{e}}{A@h{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lf{ADl}}}}{f{{An{Al}}}}}{{Bd{FfBAb}}}}{{{f{Clc}}e}{{Bd{FfBAb}}}{}DCb}{{{f{Cl{Lf{ADl}}}}{f{{An{DEn}}}}}{{Bd{FfBAb}}}}{{BHhc}BHh{{ANj{BHh}}}}{{{f{CHl}}}{{l{Jb}}}}{{{f{CHn}}}{{l{Jb}}}}{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}``{{{f{AJb}}{f{{l{n}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BDl}}c}B`{{Df{{Gh{Ih{f{{BDn{Ih}}}}}}}{{Dd{C`}}}}HlHn}}{{{f{BDl}}c}B`{{Df{{Gh{Ih{f{{BDn{Ih}}}}}}}{{Dd{}}}}HlHn}}{{{f{{An{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{C`}}}}HlHn}}{{{f{{An{{Od{Ih}}}}}}c}B`{{Df{{Od{Ih}}}{{Dd{}}}}HlHn}}{{{f{{An{c}}}}e{C`{{Lf{AEf}}}}}{{AJn{c}}}{BFdBFf}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{An{c}}}}{f{Hj}}e{C`{{Lf{AEf}}}}}{{AJn{c}}}{BFdBFf}{{Ch{}{{Cb{{Gh{IhIh}}}}}}Id}}{{{f{{l{c}}}}IhIh}{{l{c}}}Db}{{{f{{Fl{{Od{Ih}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFh}}{f{Bh}}}B`}{{BFjBFj}BFj}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJd{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDb{CdAJf}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJh{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Af}}}{{Bd{{l{m}}i}}}DbDbCdAJj{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{Gn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJj{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJf}AJj{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AJl{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAJlDb}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJf}{{Dn{f}{{Dd{e}}}}}{{Db{}{{Gn{e}}}}}}0``{{{f{DF`}}}{{l{El}}}}0{{{f{DF`}}{f{{l{Jh}}}}d}{{Bd{B`Bb}}}}{{{f{DF`}}{f{{l{Ad}}}}d}{{Bd{B`Bb}}}}{{{f{DF`}}}B`}{{{f{DF`}}}{{Bd{B`Bb}}}}1{{{f{DF`}}}{{Bd{{l{El}}Bb}}}}{{{f{DF`}}}{{l{Bj}}}}{{{f{DF`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DF`}}Ej}{{Bd{{l{Bj}}Bb}}}}{{{f{DF`}}Al}{{Bd{B`Bb}}}}5{{{f{DF`}}}{{Bd{{l{j}}Bb}}}}01{{{f{DFb}}}{{f{{l{Bj}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BMnBHh}BHh}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}3{cc{}}{{}Ff}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}2````````{{{f{BKd}}{C`{{f{Af}}}}d}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}Jjdd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}Jjd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}d}{{Bd{{Jf{KfJh}}Bb}}}}`{{{f{CHl}}}{{l{Lh}}}}{{{f{CHn}}}{{l{Lh}}}}{{{f{CI`}}}{{l{Jh}}}}`{{{f{D@`}}}{{l{Lh}}}}21{{{f{CHl}}}{{l{n}}}}{{{f{CHn}}}{{l{n}}}}{{{f{CHl}}}{{l{Jb}}}}{{{f{CHn}}}{{l{Jb}}}}55`46576{{{f{D@`}}}{{l{Jb}}}}16{{{f{CHl}}}{{l{M`}}}}{{{f{CHn}}}{{l{M`}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jf{JdJb}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jf{KfJh}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}Jj}{{Jf{JlJh}}}}=<{{{f{DCf}}Nd}{{Bd{B`Bb}}}}{{{f{DCf}}{f{B`}}BOd}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BKd}}{C`{{f{Af}}}}d}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}}{{Bd{{Jf{JdJb}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}Jjdd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{BKd}}{C`{{f{Af}}}}Jjd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jf{JlJh}}Bb}}}}{{{f{DFd}}}{{f{{l{Ad}}}}}}{{{f{BKd}}{C`{{f{Af}}}}d}{{Bd{{Jf{KfJh}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFf}}}DFf}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFf}}{f{DFf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DFf}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DFf}}{f{Clc}}}bAH`}`{{}Ff}{ce{}{}}{{{f{DFf}}{f{Af}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DFh{c}}}}}{{DFh{c}}}{ABhA`}}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}?{{{f{Af}}}{{C`{DFf}}}}>=`{{{f{Cl{DFh{c}}}}{f{Af}}}C`A`}{{{f{ClDFj}}{f{{An{Al}}}}{C`{Jj}}}{{C`{c}}}{}}{{{f{Cl{DFh{Jh}}}}{f{{An{Al}}}}{C`{Jj}}}{{C`{Gd}}}}{{{f{Cl{DFh{Jb}}}}{f{{An{Al}}}}{C`{Jj}}}{{C`{Ln}}}}`?>{{c{C`{Jj}}}{{Bd{{DFn{}{{DFl{e}}}}Bb}}}{}{}}{{DFf{C`{Jj}}}{{Bd{{DFh{Jb}}Bb}}}}{{DFf{C`{Jj}}}{{Bd{{DFh{Jh}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}On{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CGh}}}CGh}{{{f{c}}{f{Cle}}}b{}{}}{{}CGh}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{Ffb}0{{{f{CGh}}{f{CGh}}}d}{{{f{DG`}}{f{DG`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CGh}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}0{{{f{Af}}}{{Bd{DG`}}}}{{{f{Af}}g}{{Bd{CGhBb}}}{{Hh{Af}}}{{ANj{Ef}}}{{H`{}{{Cb{{Gh{ce}}}}}}}}{{{f{CGh}}{f{Clc}}}bAH`}{{}Ff}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}On{}}033`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eALb{}{{H`{}{{Cb{c}}}}}}0{{AEde}ALd{}{{H`{}{{Cb{c}}}}}}0{{{f{ALf}}}{{f{Ed}}}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKn}}{f{AKn}}c}{{Bd{AKnBb}}}AMf}{{{f{AMh}}{f{Ed}}}{{Bd{B`Bb}}}}`{ANde{}{{ALb{c}}AJf}}0{{ANdAEd}e{}{{ALd{c}}AJf}}0{{{AMb{Af}}}Ed}{{{f{AMh}}}{{f{Ed}}}}`{{AMf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}{{{Fl{c}}AEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{Fl{c}}AEd}{{AJf{}{{ALh{e}}{ALj{c}}{ALl{g}}}}}{ALn{AM`{e}}}ABh{{G`{}{{Cb{e}}}}IdHlHn}}{{FfcAEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{FfAEd}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AMh}}Ff}{{Bd{IfBb}}}}{{{f{AMh}}Ff}If}{{}Ed}{{{f{AOj}}Ff}If}4{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{AEl{cgAEj}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}{{C`{c}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{{{f{AKn}}{f{AKn}}}{{Bd{{Gh{AKnAKn}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gh{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{ALbe}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{{AEdg}{{Bd{ALde}}}{}{}{{H`{}{{Cb{{Bd{ce}}}}}}}}0{ANd{{Bd{eg}}}{}{{ALb{c}}AJf}{}}0{{ANdAEd}{{Bd{eg}}}{}{{ALd{c}}AJf}{}}0{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}Ff}cABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}0{{{f{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}}}gABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}{Ffc{}}0{{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}{C`{Hj}}}{{AJf{}{{ALh{c}}{ALj{e}}{ALl{g}}}}}ABh{ALn{AM`{c}}}{{G`{}{{Cb{c}}}}IdHlHn}}```````````{{{f{AKn}}{f{AKn}}c}{{Bd{AKnBb}}}AMf}{{AMf{f{{l{El}}}}{f{{l{El}}}}}{{Bd{{l{El}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jf{JlJh}}}}{f{{l{Ad}}}}CGd{Fh{Gd}{{Dd{AKf}}}}{Fh{AKf}{{Dd{Gd}}}}{f{AKh}}{f{AKh}}}{{Bd{{l{Jh}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{Af}}}}{Fh{Gd}{{Dd{AKf}}}}{Fh{AKf}{{Dd{Gd}}}}{f{AKh}}{f{AKh}}}{{Bd{{l{Jh}}Bb}}}}{{{f{{Jf{JlJh}}}}{C`{{f{Af}}}}{f{{l{Ad}}}}CGd}{{Bd{{Jf{JlJh}}Bb}}}}```{{c{C`{Hj}}}CMl{}}{{{CMn{Gd}}{CMn{Al}}{C`{Hj}}}CN`}{{{CMn{Gd}}{CMn{Al}}{C`{Hj}}}CNb}`{CJ`BHh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CJ`Jj}BHh}3{{CJ`BHhJj}BHh}{{CJ`Ef}BHh}555{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}8{cc{}}9{{}Ff}{ce{}{}};;;;;;;;;;{{CJ`{C`{Ef}}BHhCGd}BHh}{{CJ`BHh}BHh}={{CJ`{f{Af}}}BHh}>;0>>>>>>>1{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}5{CJ`BHh}0>0`{{{f{BFl}}{f{B@d}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BFl}}}{{Bd{{f{Af}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DGb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{DGb{C`{{f{AEd}}}}}{{Bd{AClBb}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DGb}}}d}{{FfFf}DGb}{{{f{ClDGb}}{Cf{Cd}}}b}{{{f{ClDGb}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}6`{{{f{{l{c}}}}}FfA`}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGd}}}DGd}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGd}}{f{DGd}}}d}{{{f{DGd}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DGd}}{f{Clc}}}bAH`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGf}}}DGf}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGf}}{f{DGf}}}d}{{{f{DGf}}{f{ClGj}}}{{Bd{bGl}}}}0{cc{}}{{{f{DGf}}{f{Clc}}}bAH`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}4{{KjKj}Kj}{{{f{{l{El}}}}Ih}{{Bd{bBb}}}}{{{f{{AJn{Ih}}}}Ih}{{Bd{bBb}}}}```{{{f{B`}}CC`}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{Af}}}B`}0`{{{f{c}}h}b{}}{{{f{DGh}}}{{f{AEf}}}}{{{f{ClDGh}}}{{Cf{Cd}}}}{{{f{ClDGh}}}{{f{ClAEf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGh}}}DGh}{{{f{c}}{f{Cle}}}b{}{}}{{{f{DGh}}}{{f{AEd}}}}{{}DGh}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{ClDGh}}Ff}b}{{{f{DGh}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DGh}}}Ff}{FfDGh}{{{f{ClDGh}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}{{{f{DGh}}}{{C`{{f{DGj}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEb}}}DEb}{{{f{c}}{f{Cle}}}b{}{}}{{}DEb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DEb}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{DEb}}}Ff}{{{f{DEb}}}{{Lf{BAj}}}}{{{f{COf}}Al{C`{Ff}}d{C`{{f{BAj}}}}FfFf{C`{{f{C@l}}}}{C`{Al}}Al{C`{{f{C@n}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gh{BAjFfFf}}Bb}}}}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{COf}}{f{C@f}}}{{Bd{DEbBb}}}}1{{{f{c}}}On{}}4{{DEb{Lf{BAj}}}DEb}````{{{f{{l{c}}}}eAK`d}{{Fl{Ih}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{An{f}}}}cIhe}{{Fl{Ih}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}``{{{f{DGl}}}{{f{B`}}}}{{{f{BO`}}}{{Bd{{l{Jb}}Bb}}}}{{{f{BO`}}}{{Bd{{l{Lh}}Bb}}}}0{{{f{BO`}}}{{Bd{{l{n}}Bb}}}}22112{{{f{BO`}}}{{Bd{{l{M`}}Bb}}}}322{{{f{BO`}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{BO`}}Jj}{{Bd{{l{Jh}}Bb}}}}1445`{{{f{AIh}}FfFf}AIh}0`{{Ff{f{Cl{Fl{d}}}}}b}```11{{Ff{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKb{{l{El}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKdBb}}}}{{{f{Af}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{Af}}{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKdBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{Eh}}Bb}}}}0```````````88```{{{f{BLb}}}{{f{{l{Ad}}}}}}{{{f{BLf}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BLf}}}{{l{Ad}}}}{{{f{BLf}}{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{BLf}}{f{Af}}d}{{Bd{{l{n}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}dd}{{Bd{{l{n}}Bb}}}}{{{f{BLf}}{f{Af}}}{{Bd{{l{n}}Bb}}}}{{{f{BLf}}{f{Af}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}d}{{Bd{{l{El}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}Ff}{{Bd{{l{Ad}}Bb}}}}{{{f{BLf}}{f{Af}}}{{Bd{{l{j}}Bb}}}}{{{f{BLf}}{f{{l{Ad}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLf}}{f{Af}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BLf}}{f{{l{Ad}}}}dd}{{Bd{{l{El}}Bb}}}}{{{f{BLf}}{f{Af}}}{{Bd{{l{El}}Bb}}}}=<{{{f{{An{{f{{l{Ad}}}}}}}}{f{Af}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{BLf}}{f{Af}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}0{{{f{BLf}}{f{Af}}{f{Af}}Ff}{{Bd{{l{Ad}}Bb}}}}1{{{f{BLf}}{f{{l{Ad}}}}}{{l{j}}}}{{{f{BLf}}{f{{l{Ad}}}}Ff}{{Bd{AKlBb}}}}0{{{f{{l{Ad}}}}{f{{l{Ad}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{{{f{{l{Ad}}}}{f{{l{Ad}}}}Ffed}{{Bd{AKlBb}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{{{f{BLf}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Ad}}}}{f{Af}}d}{{l{Ad}}}}{{{f{BLf}}}{{l{El}}}}0{{{f{BLf}}}{{l{Ad}}}}{{{f{BLf}}{f{B`}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}4{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ad}}}}505050{{{f{BLf}}{f{{l{Ad}}}}}{{l{Ad}}}}10{{{f{BLf}}{f{{l{El}}}}d}{{Bd{{l{Jh}}Bb}}}}444````````{{eFfFf}{{DGn{Gd}}}{{Hh{Af}}}{{Ch{}{{Cb{c}}}}}}{{eFfFf}{{DH`{Gd}}}{{Hh{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Af}}{Fl{{Cf{Cd}}}}{f{AEd}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fl{{Cf{Cd}}}}{f{AEd}}{C`{{f{{DEl{EfEf}}}}}}}{{Bd{B`Bb}}}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AhL`}}{{B`c}{}{AhL`}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Ff}}}}0{{{f{BJh}}Ej}{{l{El}}}}{{{f{BJh}}}{{Bd{{l{El}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bj}}}}Bb}}}}{{{f{B`}}Ff}{{f{{Cf{Cd}}}}}}{{{f{BJh}}}{{f{AEf}}}}{{{f{ClBJh}}}{{f{ClAEf}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBJh}}}{{f{Cl{l{c}}}}}Db}{{{f{BJh}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BJh}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBJh}}}{{Bd{FfBb}}}}{{{f{ClB`}}}{{Bd{FfBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ab}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eh}}}}Bb}}}}{{{f{BJh}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{n}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BJh}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}}{{Bd{{f{AKn}}Bb}}}}6{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Aj}{{{f{BJh}}}{{Fj{{Fd{{Cf{Cd}}}}{Fh{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}{{{f{BJh}}}{{f{{Fl{{Cf{Cd}}}}}}}}{{{f{ClBJh}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fl{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kj}}}Kj}1{{{f{BJh}}}{{Lf{BJh}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jf{JdJb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jf{JlJh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jf{K`Jn}}}}Bb}}}}{{}B`}{Ff{{f{c}}}{}}0{{{f{B`}}}f}1{Ff{{f{Clc}}}{}}00{{B`c}{}{AhL`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}c}{}{AhL`}}{{B`B`}}{Ffb}00{{{f{BJh}}}B`}{{{f{BJh}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jf{KbJh}}}}Bb}}}}{{{f{Kj}}{f{Kj}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{Af}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANh}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}30{{{f{B`}}c}{}ANh}{{{f{B`}}{f{Af}}}}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Ff}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IfFf}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{BJh}}}{{Dj{Ml}}}}{{{f{B`}}AG`}{{Bd{B`Bb}}}}{{{f{BJh}}{f{{l{n}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{l{n}}}}d}{{Bd{B`Bb}}}}{{{f{Kj}}{f{ClGj}}}{{Bd{bGl}}}}{{{f{B`}}{f{ClGj}}}{{Bd{bGl}}}}0{{{f{B`}}}Ef}{cc{}}00{{{Jf{KbJh}}}B`}{{{Jf{KfJh}}}B`}{{{l{c}}}B`Db}{{{Jf{JdJb}}}B`}{{{Jf{JlJh}}}B`}{{{f{Af}}{f{{An{If}}}}d}{{Bd{B`Bb}}}}{{{f{Af}}{f{{An{If}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{Af}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fl{{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fl{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hb{c}{{Cb{e}}}}}{}}{cB`{{H`{}{{Cb{J`}}}}}}{cB`{{H`{}{{Cb{{f{Ln}}}}}}}}{cB`{{H`{}{{Cb{{C`{Mb}}}}}}}}{cB`{{H`{}{{Cb{{f{Mj}}}}}}}}{cB`{{H`{}{{Cb{{C`{Gd}}}}}}}}{cB`{{H`{}{{Cb{{C`{Mj}}}}}}}}{cB`{{H`{}{{Cb{{f{Mb}}}}}}}}{cB`{{H`{}{{Cb{{f{Af}}}}}}}}{cB`{{H`{}{{Cb{{f{Gd}}}}}}}}{cB`{{H`{}{{Cb{Ih}}}}}}{cB`{{H`{}{{Cb{Ld}}}}}}{cB`{{H`{}{{Cb{{f{J`}}}}}}}}{cB`{{H`{}{{Cb{Ef}}}}}}{cB`{{H`{}{{Cb{{f{Ih}}}}}}}}{cB`{{H`{}{{Cb{{C`{J`}}}}}}}}{cB`{{H`{}{{Cb{Mj}}}}}}{cB`{{H`{}{{Cb{{C`{Ln}}}}}}}}{cB`{{H`{}{{Cb{{f{Ld}}}}}}}}{cB`{{H`{}{{Cb{{f{In}}}}}}}}{cB`{{H`{}{{Cb{In}}}}}}{cB`{{H`{}{{Cb{{f{d}}}}}}}}{cB`{{H`{}{{Cb{{C`{Ih}}}}}}}}{cB`{{H`{}{{Cb{Ln}}}}}}{cB`{{H`{}{{Cb{{C`{Al}}}}}}}}{cB`{{H`{}{{Cb{d}}}}}}{cB`{{H`{}{{Cb{{C`{d}}}}}}}}{cB`{{H`{}{{Cb{{C`{In}}}}}}}}{cB`{{H`{}{{Cb{Gd}}}}}}{cB`{{H`{}{{Cb{{C`{Lj}}}}}}}}{cB`{{H`{}{{Cb{{C`{Ld}}}}}}}}{cB`{{H`{}{{Cb{Lj}}}}}}{cB`{{H`{}{{Cb{{f{Al}}}}}}}}{cB`{{H`{}{{Cb{Al}}}}}}{cB`{{H`{}{{Cb{{f{Lj}}}}}}}}{cB`{{H`{}{{Cb{Mb}}}}}}{{{f{Af}}{Fl{Mj}}}B`}{{{f{Af}}{Fl{J`}}}B`}{{{f{Af}}{Fl{In}}}B`}{{{f{Af}}{Fl{Ih}}}B`}{{{f{Af}}{Fl{Gd}}}B`}{{{f{Af}}{Fl{Mb}}}B`}{{{f{Af}}{Fl{Lj}}}B`}{{{f{Af}}{Fl{Ld}}}B`}{{{f{Af}}{Fl{Al}}}B`}{{{f{Af}}{Fl{Ln}}}B`}{{{f{Af}}Ff{f{Ed}}}B`}{{{f{B`}}FfFf}B`}{{{f{BJh}}Ff}{{Bd{IfBb}}}}{{{f{B`}}}Ff}{{{f{B`}}}Ij}{{{f{B`}}}B`}{{{f{BJh}}Ff}{{C`{{f{Il}}}}}}{{{f{BJh}}FfFf}{{C`{{f{Il}}}}}}{{{f{BJh}}Ff}If}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}{f{Af}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANh}302{{{f{B`}}{f{Af}}}}{{{f{BJh}}}d}{{{f{Kj}}{f{Clc}}}bAH`}{{{f{B`}}{C`{Ff}}}B`}{{{f{B`}}}{{Bd{{f{{l{M`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Lh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Ff}00{ce{}{}}00{B`B@d}1{BAlB`}{B`B`}={{{f{B`}}}{{Bd{{l{n}}Bb}}}}000{{{f{BJh}}}{{l{n}}}}0{{}d}0{{{f{B`}}}Kj}{{{f{B`}}}DHb}{{{f{BJh}}}Ff}{{{f{BJh}}Ff}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BHh}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANh}{{{f{B`}}{f{Af}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}3210{{{f{B`}}}{{Bd{{C`{c}}Bb}}}L`}{{{f{BJh}}}{{Bd{LbBb}}}}{{{f{BJh}}}{{C`{Ld}}}}{{{f{B`}}}Lb}1232{{{f{B`}}{f{B`}}}}{{B`c}{}{AhL`}}{{{f{B`}}c}{}{AhL`}}{{B`B`}}?{{{f{BJh}}}{{Bd{FfBb}}}}{{{f{BJh}}}{{f{Af}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Mj}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ln}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Lj}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{f{Af}}}}}}}}}}{{{f{Af}}c}B`BAl}{{{f{Af}}c}B`{{Hh{{An{Ln}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ih}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{AOb}}}}}}}}{{{f{Af}}{f{B`}}}B`}{{{f{Af}}c}B`{{Hh{{An{{C`{AKj}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ld}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{Dj{Af}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ef}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Lj}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{f{{An{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{d}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{In}}}}}}{{{f{Af}}c}B`{{Hh{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{d}}}}}}{{{f{Af}}c}B`{{Hh{{An{If}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{AOd}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Al}}}}}}{{{f{Af}}{Ll{Ih}}}B`}{{{f{Af}}{Ll{J`}}}B`}{{{f{Af}}c}B`{{Hh{{An{{C`{Gd}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{J`}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{In}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Mj}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ld}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{Fl{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{AKj}}}}}}{{{f{Af}}c}B`{{Hh{{An{{Dj{Af}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{Fl{Al}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{AKf}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{B`}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Gd}}}}}}{{{f{Af}}c}B`{{Hh{{An{{f{Af}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ih}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Mb}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ef}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{AKf}}}}}}{{{f{Af}}c}B`{{Hh{{An{AOd}}}}}}{{{f{Af}}c}B`{{Hh{{An{B`}}}}}}{{{f{Af}}c}B`{{Hh{{An{Mb}}}}}}{{{f{Af}}{Ll{Gd}}}B`}{{{f{Af}}c}B`{{Hh{{An{{C`{Al}}}}}}}}{{{f{Af}}{Ll{Ln}}}B`}{{{f{Af}}c}B`{{Hh{{An{AOb}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{J`}}}}}}}}{{{f{Af}}{f{Ed}}}B`}{{{f{BJh}}FfFf}B`}{{{f{Af}}Ff}B`}{{{f{ClDHb}}}C`}{{{f{{AGb{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{n}}Bb}}}}{{{f{B`}}c}{{Bd{{l{n}}Bb}}}ANh}{{{f{B`}}{f{Af}}}{{Bd{{l{n}}Bb}}}}32{{{f{B`}}c}{}ANh}{{{f{B`}}{f{Af}}}}{{{f{B`}}}{{Bd{{f{ABj}}Bb}}}}{{{f{BJh}}}Ff}`{{{f{B`}}}{{Cf{Kd}}}}{{{f{B`}}}{{Bd{LbBb}}}}{{{f{BJh}}LdNb}{{Bd{LbBb}}}}{{{f{BJh}}}B`}{{{f{B`}}c}{}{AhL`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhL`}}{{{f{ClBJh}}{f{Af}}}b}{{{f{ClB`}}{f{Af}}}{{f{ClB`}}}}{{{f{B`}}{f{{An{Gd}}}}}{{Bd{B`Bb}}}}06{KjKj}{{{f{BJh}}{f{Df}}Nd}{{Bd{B`Bb}}}}{{{f{B`}}Lddd{C`{J`}}}{{Bd{B`Bb}}}}{{{f{B`}}Ffdd{C`{J`}}}{{Bd{B`Bb}}}}{{{f{B`}}Ff}B`}{{{f{ClB`}}Kj}b}{{{f{BJh}}Gd}B`}{{{f{ClBJh}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{J`}}}B`}{{{f{DHb}}}{{Gh{Ff{C`{Ff}}}}}}{{{f{BJh}}GdFf}B`}{{{f{B`}}Ej}{{Bd{B`Bb}}}}{{{f{BJh}}Ej}{{Bd{B`Bb}}}}{{{f{BJh}}Al}{{C`{Ld}}}}{{{f{BJh}}Al}{{Bd{LbBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ad}}}}Bb}}}}{{{f{B`}}Ff}{{Bd{{Dj{Af}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AKl}}Bb}}}}{{B`B`}}{{{f{B`}}c}{}{AhL`}}{{B`c}{}{AhL`}}{{{f{B`}}{f{B`}}}}{{{f{B`}}}{{Bd{cBb}}}L`}{{{f{BJh}}}{{Bd{LbBb}}}}{{{f{B`}}}{{Bd{LbBb}}}}{{{f{B`}}{C`{Ff}}}B`}{{{f{BJh}}{f{{l{El}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{An{Nj}}}}Kj}B`}{{{f{B`}}{f{{An{Nj}}}}}B`}{{{f{BJh}}{f{{An{Ih}}}}}{{Bd{B`Bb}}}}{{{f{BJh}}{f{{An{Ih}}}}}B`}{{{f{B`}}{f{{An{Ih}}}}d}B`}{{{f{B`}}{f{{l{El}}}}d}{{Bd{B`Bb}}}}{{{f{BJh}}{f{{l{El}}}}}B`}{{{f{B`}}{f{{An{Ih}}}}}B`}{{{f{B`}}{f{{l{El}}}}d}B`}{{{f{B`}}}{{Bd{{f{{Jf{KfJh}}}}Bb}}}}{{{f{B`}}Ffd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{Af}}}}d}{{Bd{B@dBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{B`B`}{{Bd{B`Bb}}}}1{c{{Bd{e}}}{}{}}00{{{Gh{{f{Af}}{Fl{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{Af}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{ANl}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gh{{f{ANl}}{Fl{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}444656{{{f{ClB`}}{Gb{c}}}dDb}76{{{f{c}}}On{}}00{{{f{B`}}}{{Bd{{f{{l{Mh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Md}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mf}}}}Bb}}}}{{{f{BJh}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJh}}}{{Bd{{f{{l{c}}}}Bb}}}Db}`{{{f{BJh}}Al}{{C`{Ld}}}}{{{f{BJh}}Al}{{Bd{LbBb}}}}{ce{}{}}00{{B`{f{Af}}}B`}{{{f{B`}}c}B`{AhL`}}{{{f{B`}}{f{{l{n}}}}{f{B`}}}{{Bd{B`Bb}}}}````{{{f{B`}}{f{B`}}c}{{Bd{B`Bb}}}{{Dn{{f{B`}}{f{B`}}}{{Dd{{Bd{B`Bb}}}}}}}}{{{BHj{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BHl}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BOb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOb}}c}{{Bd{B`Bb}}}Aj}{{{f{{l{Fb}}}}c}{{Bd{B`Bb}}}Aj}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CIl}}}CIl}{{{f{c}}{f{Cle}}}b{}{}}{{}CIl}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{CIl}}{f{CIl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CIl}}{f{ClGj}}}{{Bd{bGl}}}}{cc{}}{{{f{CIl}}{f{Clc}}}bAH`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}3``{{{f{c}}h}b{}}{{{f{ClDl}}}{{f{ClB`}}}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{Dl}}}B`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{}Ff}{ce{}{}}{{{f{ClB`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}On{}}5{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}","D":"AEIlAFf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10803],[5,"ListType",1874,10804],[5,"ChunkedArray",17,10805],[5,"BooleanType",1874,10804],[10,"PolarsNumericType",1874,10804],[5,"BinaryType",1874,10804],[5,"StringType",1874,10804],[1,"str"],[10,"Num",10806],[10,"ToPrimitive",10807],[1,"u8"],[1,"slice"],[5,"Series",10313,10808],[6,"PolarsError",3296,10809],[6,"Result",10810],[10,"NumOpsDispatchInner",10726,10811],[6,"GroupsProxy",3673,10812],[5,"FixedSizeListType",1874,10804],[5,"ObjectType",1874,10804],[10,"PolarsObject",1440,10813],[6,"Option",10814],[17,"Item"],[10,"Array",10815],[5,"Box",10816],[10,"Iterator",10817],[5,"AmortizedListIter",10818],[0,"mut"],[17,"IsNested"],[5,"FalseT",1874,10804],[10,"PolarsDataType",1874,10804],[17,"Output"],[10,"Fn",10819],[10,"Copy",10820],[6,"Cow",10821],[5,"UnstableSeries",10779,10822],[10,"FnMut",10819],[5,"Float64Type",1874,10804],[5,"Float32Type",1874,10804],[6,"DataType",1874,10823],[5,"String",10824],[5,"BinaryOffsetType",1874,10804],[5,"SortOptions",1566,10825],[5,"UInt32Type",1874,10804],[5,"SortMultipleOptions",1566,10825],[10,"PolarsIntegerType",1874,10804],[10,"NumOpsDispatchCheckedInner",10747,10826],[5,"Iter",10827],[1,"usize"],[1,"fn"],[5,"Map",10828],[5,"Vec",10829],[5,"MetadataProperties",1209,10830],[10,"DoubleEndedIterator",10831],[5,"Metadata",1209,10830],[1,"i64"],[5,"OffsetsBuffer",10832],[1,"tuple"],[5,"Formatter",10833],[5,"Error",10833],[17,"Array"],[10,"IntoIterator",10834],[10,"FallibleIterator",10835],[10,"Borrow",10836],[10,"PolarsAsRef",10837],[10,"AsRef",10838],[5,"Bitmap",10839],[10,"Send",10820],[10,"Sync",10820],[10,"NoOption",10840],[10,"IntoParallelIterator",10841],[10,"TrustedLen",10842],[6,"AnyValue",1874,10843],[1,"u32"],[5,"MetadataFlags",1209,10830],[10,"PolarsObjectSafe",1440,10813],[1,"f32"],[1,"u64"],[5,"Int32Type",1874,10804],[5,"DateType",1874,10804],[5,"Logical",1874,10844],[5,"Int64Type",1874,10804],[6,"TimeUnit",1874,10845],[5,"DatetimeType",1874,10804],[5,"Int128Type",1874,10804],[5,"DecimalType",1874,10804],[5,"DurationType",1874,10804],[10,"ExactSizeIterator",10846],[5,"TimeType",1874,10804],[10,"PolarsFloatType",1874,10804],[6,"IsSorted",10313,10847],[10,"PolarsIterator",1137,10848],[6,"ChunkedArrayLayout",17,10805],[10,"NumCast",10807],[5,"Scalar",1874,10843],[1,"f64"],[5,"Arc",4036,10849],[5,"Int8Type",1874,10804],[1,"i8"],[5,"Range",10850],[1,"i32"],[5,"Int16Type",1874,10804],[1,"i16"],[5,"UInt64Type",1874,10804],[5,"UInt8Type",1874,10804],[5,"UInt16Type",1874,10804],[1,"u16"],[5,"Field",1874,10851],[10,"ParallelIterator",10841],[10,"IndexedParallelIterator",10841],[6,"QuantileInterpolOptions",4036,10852],[5,"RollingOptionsFixedWindow",4036,10853],[10,"PolarsOpsNumericType",10854],[10,"Sized",10820],[5,"ChunkId",4036,10855],[17,"HasViews"],[5,"RandomState",10856],[5,"BytesHash",10857],[5,"ViewRepr",10858],[1,"array"],[5,"Dim",10859],[5,"ArrayBase",10858],[5,"OwnedRepr",10860],[6,"Either",10861],[5,"TypeId",10862],[5,"NullableIdxSize",4036,10855],[10,"FnOnce",10819],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",815,10863],[5,"AnonymousListBuilder",843,10864],[5,"AnonymousOwnedListBuilder",843,10864],[5,"ListBooleanChunkedBuilder",843,10865],[5,"ListPrimitiveChunkedBuilder",843,10866],[10,"ListBuilderTrait",843,10867],[10,"ChunkedBuilder",843,10868],[5,"ListStringChunkedBuilder",843,10869],[5,"ListBinaryChunkedBuilder",843,10869],[5,"ListNullChunkedBuilder",843,10870],[5,"BinViewChunkedBuilder",843,10871],[10,"ViewType",10872],[5,"BooleanChunkedBuilder",843,10873],[5,"NullChunkedBuilder",843,10874],[5,"PrimitiveChunkedBuilder",843,10875],[10,"Clone",10876],[5,"NullChunked",10877],[10,"NewChunkedArray",843,10868],[10,"ChunkedCollectInferIterExt",1117,10878],[10,"ChunkedCollectIterExt",1117,10878],[10,"Canonical",1131,10879],[10,"ChunkedCollectParIterExt",1133,10880],[10,"FromParIterWithDtype",1133,10880],[5,"BooleanArray",10881],[5,"BoolIterNoNull",1137,10848],[5,"FixedSizeListArray",10882],[5,"FixedSizeListIterNoNull",1137,10848],[5,"StructIter",1137,10848],[5,"SomeIterator",1137,10848],[5,"MetadataEnv",1209,10883],[10,"MetadataCollectable",1209,10830],[5,"Iter",10884],[5,"IterNames",10884],[5,"File",10885],[5,"Mutex",10886],[6,"MetadataMerge",1209,10830],[5,"ObjectArray",1440,10813],[6,"ArrowDataType",1874,10887],[10,"Any",10862],[10,"Debug",10833],[5,"BitmapIter",10888],[6,"ZipValidity",10889],[5,"ObjectChunkedBuilder",1515,10890],[10,"AnonymousObjectBuilder",1538,10891],[5,"ObjectRegistry",1538,10891],[17,"FuncRet"],[10,"ChunkApply",1566,10892],[10,"ChunkApplyKernel",1566,10892],[10,"ChunkSort",1566,10892],[10,"ChunkUnique",1566,10892],[10,"ChunkCast",1566,10892],[6,"FillNullStrategy",1566,10892],[10,"ChunkCompare",10313,10892],[10,"ChunkExplode",1566,10892],[10,"ChunkFillNullValue",1566,10892],[10,"ChunkFilter",1566,10892],[10,"ChunkFull",1566,10892],[10,"ChunkFullNull",1566,10892],[10,"ChunkAnyValue",1566,10892],[10,"Hasher",10893],[10,"IsFirstDistinct",1566,10892],[10,"IsLastDistinct",1566,10892],[10,"ChunkAgg",1566,10892],[10,"ChunkQuantile",1566,10892],[10,"ChunkExpandAtIndex",1566,10892],[10,"Reinterpret",1566,10892],[10,"ChunkReverse",1566,10892],[10,"ChunkRollApply",1566,10892],[10,"ChunkSet",1566,10892],[10,"ChunkShift",1566,10892],[10,"ChunkShiftFill",1566,10892],[10,"SlicedArray",1566,10894],[10,"ChunkVar",1566,10892],[10,"ChunkTake",1566,10892],[10,"ChunkTakeUnchecked",1566,10892],[10,"ChunkBytes",1566,10892],[10,"ChunkZip",1566,10892],[10,"BinaryFnMut",1767,10895],[10,"StaticArray",1874,10896],[10,"TernaryFnMut",1767,10895],[10,"Error",10897],[10,"UnaryFnMut",1767,10895],[5,"PrimitiveArray",10898],[6,"SearchSortedSide",1807,10899],[5,"NoNull",4036,10900],[5,"RowsEncoded",10901],[5,"NaiveDateTime",10902],[6,"Tz",10903],[5,"NaiveTime",10904],[5,"StructChunked",1874,10905],[5,"CategoricalChunked",1874,10906],[5,"CategoricalChunkedBuilder",1874,10907],[10,"ArrayFromIter",1874,10908],[10,"ArrayFromIterDtype",1874,10908],[10,"AsRefDataType",1874,10823],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10909],[10,"From",10838],[5,"BinaryViewArrayGeneric",10872],[6,"RevMapping",1874,10910],[10,"CategoricalMergeOperation",1874,10911],[10,"LogicalType",1874,10844],[6,"CategoricalOrdering",1874,10910],[5,"OwnedObject",1874,10843],[6,"UnknownKind",1874,10823],[5,"CategoricalType",1874,10804],[6,"ArrowTimeUnit",1874],[10,"ArrayCollectIterExt",1874,10908],[5,"GlobalRevMapMerger",1874,10911],[10,"NumericNative",1874,10804],[10,"Into",10838],[5,"ArrowField",4036],[6,"PrimitiveType",10912],[6,"IntegerType",10913],[5,"TimeDelta",10914],[5,"NaiveDate",10915],[5,"LazyCompact",10916],[5,"SmartString",10917],[10,"GetAnyValue",1874,10843],[5,"CatIter",1874,10906],[6,"Ordering",10918],[1,"u128"],[6,"PhysicalType",10913],[5,"DataFrame",3391,10919],[5,"StringCacheHolder",3275,10920],[5,"ErrString",3296,10809],[6,"PolarsWarning",3296,10921],[6,"Error",10922],[6,"Error",10923],[5,"Utf8Error",10924],[5,"Error",10925],[5,"TryReserveError",10926],[5,"Error",10927],[10,"Display",10833],[5,"Schema",4036,10928],[10,"IntoSeries",10313,10929],[6,"NullStrategy",3391,10919],[6,"UniqueKeepStrategy",3391,10919],[5,"HashSet",10930],[5,"ArrowSchema",4036,10931],[5,"Row",3927,10932],[5,"GroupBy",3673,10933],[5,"DynamicGroupOptions",4036,10934],[5,"RangeFrom",10850],[5,"RangeTo",10850],[5,"RangeFull",10850],[5,"RangeToInclusive",10850],[5,"RangeInclusive",10850],[5,"RecordBatchIter",3391,10919],[5,"PhysRecordBatchIter",3391,10919],[5,"LazyFrame",4036,10935],[10,"IntoVec",4036,10900],[5,"MeltArgs",3644,10936],[5,"RollingGroupOptions",4036,10934],[10,"RangeBounds",10850],[6,"IndexOrder",4036,10937],[5,"RecordBatchT",10938],[5,"StructArray",4036,10939],[5,"Duration",4036,10940],[5,"GroupsIdx",3673,10812],[5,"UnitVec",10941],[6,"GroupByMethod",3673,10933],[5,"SlicedGroups",3673,10812],[5,"GroupsProxyParIter",3673,10812],[10,"UnindexedConsumer",10942],[6,"GroupsIndicator",3673,10812],[6,"IRAggExpr",10943],[10,"IntoGroupsProxy",3673,10944],[5,"Copied",10945],[5,"Zip",10946],[5,"GroupsProxyIter",3673,10812],[10,"IsFloat",10947],[10,"NativeType",10948],[10,"AggList",3911,10949],[10,"TakeExtremum",3911,10950],[10,"PhysicalAggExpr",3924,10951],[6,"AnyValueBuffer",3927,10952],[6,"AnyValueBufferTrusted",3927,10952],[5,"Node",10953],[6,"IR",10954],[5,"Arena",10953],[6,"AExpr",10943],[10,"JoinDispatch",4036,10955],[5,"JoinArgs",4036,10956],[10,"DfTake",4036,10957],[10,"DataFrameOps",4036,10958],[5,"CsvReader",4036,10959],[10,"PhysicalIoExpr",10960],[10,"MmapBytesReader",10961],[6,"Expr",4036,10962],[10,"LhsNumOps",10726,10811],[10,"NumOpsDispatch",10726,10811],[5,"LazyGroupBy",4036,10935],[10,"Allocator",10963],[5,"JoinBuilder",4036,10935],[10,"AnonymousScan",4036,10964],[5,"LazyJsonLineReader",4036,10965],[5,"ScanArgsAnonymous",4036,10966],[10,"FunctionOutputField",4036,10967],[5,"SpecialEq",4036,10967],[6,"VisitRecursion",10968],[6,"FunctionExpr",4036,10969],[10,"ArgAgg",4036,10970],[5,"ArrayNameSpace",4036,10971],[5,"ListNameSpace",4036,10972],[10,"SeriesTrait",10313,10847],[5,"FieldsMapper",4036,10973],[5,"IpcStreamReader",4036,10974],[10,"Read",10975],[10,"SeriesUdf",4036,10967],[10,"AsBinary",4036,10976],[10,"StringMethods",9287,10977],[5,"BorrowedFd",10978],[10,"AsFd",10978],[10,"AsList",4036,10979],[10,"AsRawFd",10980],[6,"AggExpr",4036,10962],[10,"SeriesSealed",4036,10981],[10,"AsString",4036,10982],[20,"MaybeUninit",10983],[10,"StringNameSpaceImpl",4036,10984],[5,"OwnedBatchedCsvReader",4036,10985],[5,"CsvWriter",4036,10986],[5,"BatchedWriter",10986],[10,"Write",10975],[5,"IpcWriter",4036,10987],[5,"BatchedWriter",10987],[5,"ParquetReader",4036,10988],[5,"BatchedParquetReader",4036,10989],[5,"ParquetWriter",4036,10990],[5,"BatchedWriter",10991],[5,"BatchedCsvReader",4036,10985],[5,"BinaryNameSpace",9270,10992],[6,"Operator",4036,10962],[10,"RenameAliasFn",4036,10967],[5,"UserDefinedFunction",4036,10993],[10,"SeriesBinaryUdf",4036,10967],[5,"InProcessQuery",4036,10994],[5,"HashMap",10995],[5,"CategoricalNameSpace",4036,10996],[10,"RoundSeries",4036,10997],[10,"TemporalMethods",10196,10998],[10,"NumOpsDispatchChecked",10747,10826],[5,"RollingOptionsDynamicWindow",4036,10999],[5,"Bounds",4036,11000],[5,"LazyCsvReader",4036,11001],[5,"ScanArgsIpc",4036,11002],[6,"ClosedWindow",4036,11003],[6,"Label",4036,11003],[5,"ScanArgsParquet",4036,11004],[6,"StartBy",4036,11003],[5,"Window",4036,11005],[5,"CsvReadOptions",4036,11006],[5,"CsvParseOptions",4036,11006],[6,"CsvEncoding",4036,11006],[6,"CommentPrefix",4036,11006],[6,"NullValues",4036,11006],[5,"CsvWriterOptions",4036,11007],[5,"SerializeOptions",4036,11007],[6,"QuoteStyle",4036,11007],[5,"IpcScanOptions",4036,11008],[5,"IpcWriterOptions",4036,10987],[6,"IpcCompression",4036,10987],[5,"JsonWriterOptions",4036,11009],[6,"JoinCoalesce",4036,10956],[6,"JoinType",4036,10956],[5,"ParquetOptions",4036,11010],[6,"ParallelStrategy",4036,11010],[6,"JoinValidation",4036,10956],[5,"AsOfOptions",4036,11011],[6,"AsofStrategy",4036,11011],[5,"ParquetWriteOptions",4036,11012],[6,"ParquetCompression",4036,11012],[6,"InterpolationMethod",4036,11013],[6,"ClosedInterval",4036,11014],[5,"GzipLevel",4036,11012],[5,"BrotliLevel",4036,11012],[6,"RankMethod",4036,11015],[5,"ZstdLevel",4036,11012],[5,"RankOptions",4036,11015],[6,"DslPlan",4036,11016],[5,"When",4036,11017],[5,"Then",4036,11017],[5,"ChainedWhen",4036,11017],[5,"ChainedThen",4036,11017],[6,"Excluded",4036,10962],[6,"BooleanFunction",4036,11018],[6,"CategoricalFunction",4036,11019],[6,"TemporalFunction",4036,11020],[6,"PowFunction",4036,11021],[6,"StringFunction",4036,11022],[5,"DatetimeArgs",4036,11023],[5,"DurationArgs",4036,11023],[5,"RollingCovOptions",4036,11024],[5,"StrptimeOptions",4036,11024],[5,"JoinOptions",4036,11024],[6,"WindowType",4036,11024],[6,"WindowMapping",4036,11024],[6,"NestedType",4036,11024],[5,"OptState",4036,11025],[6,"LiteralValue",4036,11026],[5,"AnonymousScanOptions",4036,11027],[5,"UnionArgs",4036,11027],[5,"StatisticsOptions",4036,11028],[5,"FileMetaData",4036,11029],[5,"RollingVarParams",4036,11030],[5,"RollingQuantileParams",4036,11030],[6,"NonExistent",4036,11031],[10,"LazyFileListReader",4036,11032],[5,"CloudOptions",9422,11033],[10,"Ord",10918],[6,"ColumnOrder",11034],[10,"BinaryNameSpaceImpl",4036,11035],[5,"PathBuf",11036],[5,"IpcStreamWriterOption",4036,10974],[10,"SerWriter",4036,11037],[5,"IpcWriterOption",4036,10987],[10,"CrossJoin",4036,11038],[10,"ExprEvalExtension",4036,11039],[10,"DateMethods",9287,11040],[10,"DatetimeMethods",9287,11041],[10,"DurationMethods",9287,11042],[10,"BinaryUdfOutputField",4036,10967],[5,"CStr",11043],[10,"Default",11044],[5,"RowGroupMetaData",11045],[5,"ParquetStatistics",4036],[6,"NullBehavior",10753,11046],[5,"Weak",10849],[5,"DateLikeNameSpace",9779,11047],[1,"char"],[10,"FromIterator",10834],[10,"SeriesMethods",4036,11048],[10,"PartialEq",10918],[10,"Scalar",11049],[10,"ListNameSpaceExtension",4036,11050],[10,"Command",11051],[5,"StructNameSpace",4036,11052],[10,"SerReader",4036,11037],[5,"IpcReader",4036,11008],[5,"IpcStreamWriter",4036,10974],[5,"JsonWriter",4036,11009],[5,"JsonReader",4036,11009],[5,"JsonLineReader",4036,11053],[10,"UdfSchema",4036,11054],[6,"ListFunction",11055],[6,"RangeFunction",11056],[6,"BinaryFunction",11057],[6,"ArrayFunction",11058],[6,"StructFunction",11059],[10,"ToOwned",10821],[5,"OsStr",11060],[5,"CString",11061],[5,"Path",11036],[1,"never"],[5,"OsString",11060],[5,"MutableStatistics",11062],[5,"MutableStructArray",11063],[5,"GrowableStruct",11064],[10,"FromData",9773,11065],[5,"Buffer",11066],[10,"FromDataUtf8",9773,11065],[10,"FromDataBinary",9773,11065],[5,"ListArray",11067],[6,"Ambiguous",4036,11031],[10,"NamedFromOwned",4036,11068],[10,"DataFrameJoinOps",4036,11069],[5,"FunctionOptions",11027],[10,"PartialOrd",10918],[6,"Context",11016],[10,"IndexOfSchema",4036,10928],[5,"BoundsIter",4036,11005],[6,"ReaderBytes",10961],[10,"PolarsTemporalGroupby",4036,10934],[10,"PolarsArray",4036,11070],[10,"Hash",10893],[10,"SeriesJoin",4036,11071],[10,"TimeMethods",9287,11072],[10,"IntoListNameSpace",4036,11050],[5,"FileMetaData",11073],[5,"StructValueIter",11074],[10,"AsofJoin",4036,11011],[10,"AsofJoinBy",4036,11075],[10,"ListNameSpaceImpl",4036,11076],[5,"ExprNameNameSpace",4036,11077],[5,"KeyValue",11073],[10,"IntoLazy",4036,10935],[10,"Literal",4036,11026],[5,"Null",4036,11026],[5,"RowIndex",11078],[10,"ChunkAggSeries",4036,11079],[10,"QuantileAggSeries",4036,11080],[10,"PolarsMonthEnd",4036,11081],[10,"PolarsMonthStart",4036,11082],[10,"IndexToUsize",4036,11083],[10,"NamedFrom",4036,11068],[6,"RowGroupFetcher",10989],[5,"SplitNChars",4036,11084],[5,"Pin",11085],[5,"Request",10897],[10,"SeriesRank",4036,11015],[5,"BorrowedCursor",11086],[10,"VarInt",11087],[5,"IoSliceMut",10975],[10,"SeriesOpsTime",9287,11088],[10,"PolarsRound",4036,11089],[5,"AnonymousScanArgs",4036,10964],[10,"ChunkedSet",4036,10854],[5,"SchemaDescriptor",11090],[6,"SeekFrom",10975],[10,"VarAggSeries",4036,11091],[5,"StringNameSpace",11092],[10,"TakeChunked",4036,10957],[5,"IRPlan",10954],[10,"ToDummies",4036,11093],[10,"PolarsTruncate",4036,11094],[5,"AllocError",10963],[5,"RwLock",11095],[5,"SchemaInferenceResult",10166,11096],[10,"PolarsUpsample",4036,11097],[10,"VecHash",4036,11098],[5,"NonZero",11099],[6,"JsonFormat",4036,11009],[5,"BTreeMap",11100],[5,"IoSlice",10975],[10,"ArrayNameSpace",9251,11101],[10,"AsArray",9251,11102],[10,"AsString",9354,10977],[6,"Pattern",9354,11103],[5,"DatetimeInfer",9392,11104],[10,"StrpTimeParser",9392,11104],[17,"Error"],[10,"TryFromWithUnit",9392,11104],[6,"CloudType",9422,11033],[5,"AnonymousBuilder",9834,11105],[6,"RollingFunction",10065,11106],[6,"RollingFunctionBy",10094,11107],[5,"MutableNullArray",10136,11108],[5,"MutableBitmap",11109],[10,"AsSeries",10196,10998],[5,"Utf8Array",11110],[5,"BinaryArray",11111],[5,"SeriesIter",10313,11112],[8,"FillNullLimit",1566],[10,"InitHashMaps",1874],[10,"InitHashMaps2",1874],[5,"TrueT",1874],[8,"PolarsResult",3296],[15,"IO",9183],[15,"Context",9183],[15,"Count",9177],[15,"Slice",9178],[8,"ChunkJoinOptIds",4036],[8,"DynArgs",4036],[8,"AllowedOptimizations",4036],[10,"ListFromIter",4036],[15,"Quantile",9057],[15,"Min",9057],[15,"Max",9057],[15,"IsBetween",10019],[15,"Any",10019],[15,"All",10019],[15,"GroupBy",9067],[15,"Union",9067],[15,"Sort",9067],[15,"Cache",9067],[15,"ExtContext",9067],[15,"DataFrameScan",9067],[15,"IR",9067],[15,"Select",9067],[15,"HStack",9067],[15,"Scan",9067],[15,"MapFunction",9067],[15,"Filter",9067],[15,"Distinct",9067],[15,"Slice",9067],[15,"Sink",9067],[15,"Join",9067],[15,"HConcat",9067],[15,"SortBy",9121],[15,"Filter",9121],[15,"Cast",9121],[15,"Sort",9121],[15,"Gather",9121],[15,"RenameAlias",9121],[15,"Ternary",9121],[15,"Function",9121],[15,"Window",9121],[15,"AnonymousFunction",9121],[15,"Slice",9121],[15,"BinaryExpr",9121],[15,"Round",10022],[15,"RoundSF",10022],[15,"Clip",10022],[15,"BackwardFill",10022],[15,"ForwardFill",10022],[15,"Random",10022],[15,"GatherEvery",10022],[15,"ValueCounts",10022],[15,"Rank",10022],[15,"Replace",10022],[15,"CumCount",10022],[15,"CumSum",10022],[15,"CumProd",10022],[15,"CumMin",10022],[15,"CumMax",10022],[15,"Range",9180],[15,"ConcatHorizontal",10043],[15,"ConcatVertical",10043],[15,"ExtractGroups",10043],[15,"SplitExact",10043],[15,"Contains",10043],[15,"Find",10043],[15,"Replace",10043],[15,"DatetimeFunction",10057],[10,"Utf8FromIter",10309],[10,"BinaryFromIter",10309]],"r":[[1,11113],[2,11113],[3,11113],[4,11113],[6,10920],[7,11113],[8,11113],[9,11113],[13,11113],[14,11113],[16,10920],[17,10805],[18,10805],[19,10805],[112,10805],[135,10805],[136,10805],[160,10805],[162,10805],[215,10805],[268,10805],[409,10805],[457,10805],[556,10805],[559,10805],[691,10805],[815,10863],[843,10864],[844,10864],[845,10871],[846,10871],[847,10873],[848,10868],[849,10869],[850,10865],[851,10867],[852,10870],[853,10866],[854,10869],[855,10868],[856,10874],[857,10875],[858,10871],[991,10868],[1007,10867],[1035,10868],[1100,10864],[1101,10864],[1102,10869],[1103,10865],[1104,10867],[1105,10870],[1106,10866],[1107,10869],[1115,10867],[1117,10878],[1118,10878],[1131,10879],[1133,10880],[1134,10880],[1137,10848],[1138,10848],[1139,10848],[1140,10848],[1141,10848],[1187,10848],[1207,11114],[1208,11114],[1220,10830],[1221,10830],[1222,10883],[1223,10830],[1224,10830],[1225,10830],[1440,10813],[1441,10813],[1442,10813],[1443,10813],[1455,10813],[1484,10813],[1515,10890],[1538,10891],[1539,10891],[1540,10891],[1541,10891],[1553,10891],[1554,10891],[1555,10891],[1558,10891],[1560,10891],[1567,10892],[1568,10892],[1569,10892],[1570,10892],[1571,10892],[1572,10892],[1573,10892],[1574,10892],[1575,10892],[1576,10892],[1577,10892],[1578,10892],[1579,10892],[1580,10892],[1581,10892],[1582,10892],[1583,10892],[1584,10892],[1585,10892],[1586,10892],[1587,10892],[1588,10892],[1589,10892],[1590,10892],[1591,10892],[1592,10892],[1593,10892],[1596,10892],[1597,10892],[1606,10892],[1607,10894],[1609,10825],[1610,10825],[1623,10892],[1664,10892],[1667,10892],[1676,10892],[1679,10892],[1722,10892],[1728,10892],[1765,10892],[1767,10895],[1771,10895],[1772,10895],[1773,10895],[1774,10895],[1775,10895],[1776,10895],[1777,10895],[1778,10895],[1779,10895],[1780,10895],[1781,10895],[1782,10895],[1783,10895],[1784,10895],[1785,10895],[1786,10895],[1787,10895],[1788,10895],[1789,10895],[1790,10895],[1791,10895],[1792,10895],[1793,10895],[1794,10895],[1795,10895],[1796,10895],[1797,10895],[1798,10895],[1799,10895],[1800,10895],[1801,10895],[1802,11115],[1803,11115],[1804,11116],[1805,11116],[1806,11116],[1810,10899],[1812,10899],[1830,10899],[1836,10894],[1837,11117],[1838,11117],[1839,11117],[1840,11117],[1843,11118],[1844,11119],[1845,11119],[1846,11119],[1847,11119],[1848,11119],[1849,11119],[1850,11119],[1851,10894],[1852,10825],[1853,10825],[1864,11120],[1865,11121],[1866,11121],[1867,11121],[1868,11120],[1869,11120],[1870,11122],[1871,11121],[1872,11121],[1873,11121],[1875,10843],[1879,10804],[1880,10908],[1881,10908],[1882,10908],[1883,10887],[1885,10823],[1889,10804],[1891,10804],[1892,10804],[1894,10804],[1899,10804],[1900,10804],[1901,10906],[1904,10906],[1905,10907],[1906,10911],[1907,10910],[1908,10804],[1909,10823],[1910,10823],[1911,10823],[1916,11123],[1917,10804],[1920,11124],[1921,10804],[1926,11125],[1927,10804],[1932,11126],[1933,10804],[1937,10804],[1938,10851],[1939,10851],[1942,10804],[1948,10804],[1949,10804],[1953,10804],[1954,10804],[1955,10843],[1957,10911],[1961,11127],[1962,11083],[1963,11127],[1964,11127],[1965,11128],[1966,11127],[1968,10804],[1969,10804],[1973,10804],[1974,10804],[1978,10804],[1979,10804],[1983,10804],[1984,10804],[1988,10804],[1989,10804],[1999,10804],[2000,10804],[2002,10844],[2003,10844],[2015,10804],[2018,10804],[2020,10804],[2021,10843],[2025,11128],[2026,11128],[2027,11127],[2028,11128],[2029,11128],[2030,10804],[2031,10804],[2032,10804],[2033,10804],[2035,10910],[2036,10843],[2038,10896],[2042,10804],[2044,10804],[2048,10905],[2054,11129],[2055,10804],[2056,10845],[2057,10823],[2060,10804],[2064,10804],[2065,10804],[2069,10804],[2070,10804],[2074,10804],[2075,10804],[2079,10804],[2080,10804],[2084,10823],[2254,10911],[2267,10844],[2356,10823],[2880,10911],[2881,10911],[2885,10823],[3252,10906],[3253,10906],[3254,10907],[3255,10911],[3256,10910],[3258,10911],[3262,10910],[3263,10911],[3265,10911],[3266,10911],[3267,10906],[3268,10906],[3269,10910],[3274,10910],[3275,10920],[3281,10920],[3284,10920],[3292,10920],[3302,10809],[3309,10809],[3310,10809],[3311,10921],[3327,10809],[3340,10809],[3356,10921],[3363,10809],[3364,10809],[3365,10809],[3366,10809],[3367,10809],[3368,10921],[3369,10809],[3388,11130],[3389,11130],[3390,11130],[3392,10919],[3397,10919],[3398,10919],[3400,10919],[3401,10919],[3468,10919],[3502,10919],[3565,10919],[3644,10936],[3673,10812],[3676,10933],[3677,10933],[3679,10812],[3680,10812],[3681,10812],[3682,10812],[3683,10812],[3684,10812],[3687,10812],[3689,10944],[3701,10812],[3710,10933],[3777,10933],[3787,10933],[3911,10949],[3912,10950],[3913,10950],[3914,10950],[3915,10950],[3916,10950],[3917,10950],[3918,10950],[3919,10950],[3920,10950],[3924,10951],[3929,10952],[3930,10952],[3950,10932],[3981,10932],[4002,10932],[4016,10932],[4017,10932],[4018,10932],[4034,11131],[4035,11131],[4038,10962],[4045,11025],[4047,11031],[4050,10964],[4051,10964],[4052,11027],[4058,10843],[4059,10849],[4060,10970],[4063,10863],[4068,10804],[4069,10908],[4071,10908],[4072,10908],[4073,10971],[4074,10815],[4075,10887],[4077,10931],[4079,10976],[4080,10979],[4082,11011],[4083,10823],[4084,10982],[4086,11011],[4087,11075],[4088,11011],[4091,11132],[4097,10985],[4098,10989],[4103,10804],[4104,10871],[4107,11035],[4109,10804],[4110,10804],[4112,10804],[4113,10967],[4120,10804],[4121,10873],[4122,11018],[4123,10804],[4124,10812],[4127,11000],[4128,11005],[4130,11012],[4135,10906],[4139,10906],[4140,10907],[4141,11019],[4142,10911],[4143,10996],[4144,10910],[4145,10804],[4149,11017],[4150,11017],[4151,10892],[4152,11079],[4153,10892],[4154,10892],[4155,10892],[4156,10892],[4157,10892],[4158,10892],[4159,10892],[4160,10892],[4161,10892],[4162,10892],[4163,10892],[4164,10892],[4165,10855],[4166,10956],[4167,10892],[4168,10892],[4169,10892],[4170,10892],[4171,10892],[4172,10892],[4173,10892],[4174,10892],[4175,10892],[4176,10892],[4177,10892],[4178,10892],[4179,10805],[4180,10868],[4181,10878],[4182,10878],[4183,10854],[4185,11014],[4186,11003],[4194,11006],[4206,11038],[4207,11006],[4208,11006],[4209,11006],[4210,10959],[4211,10986],[4212,11007],[4219,10823],[4220,10823],[4221,10919],[4222,11069],[4223,10958],[4227,10823],[4234,11123],[4235,11040],[4237,10804],[4241,11023],[4242,11124],[4244,11041],[4245,10804],[4251,11125],[4252,10804],[4254,10957],[4261,11016],[4265,10940],[4271,11023],[4272,11126],[4273,11042],[4274,10804],[4275,11030],[4276,10934],[4285,10962],[4288,10962],[4289,11039],[4290,11077],[4297,11132],[4298,11132],[4299,10804],[4300,10851],[4302,10851],[4303,10973],[4304,11077],[4305,11029],[4306,11133],[4308,10892],[4309,10892],[4319,10804],[4327,10804],[4328,10804],[4333,10804],[4334,10804],[4342,11065],[4343,11065],[4344,11065],[4348,10969],[4349,10967],[4353,10843],[4355,10967],[4357,10911],[4358,10933],[4360,10933],[4362,10812],[4363,10812],[4364,10812],[4365,10812],[4366,10812],[4367,10812],[4372,11012],[4382,11127],[4383,11132],[4388,11083],[4389,11127],[4390,10812],[4391,10855],[4392,11127],[4395,10994],[4397,10928],[4398,10937],[4399,11083],[4400,11128],[4401,11127],[4403,10956],[4406,10804],[4407,10804],[4412,10804],[4413,10804],[4418,10804],[4419,10804],[4424,10804],[4425,10804],[4430,10804],[4431,10804],[4434,11013],[4436,10944],[4437,10935],[4438,11050],[4439,10929],[4440,10900],[4442,10987],[4443,11008],[4444,11008],[4445,10974],[4446,10974],[4447,10974],[4448,10987],[4449,10987],[4450,10987],[4453,10892],[4457,10892],[4469,10956],[4470,10935],[4471,10956],[4472,10955],[4473,11024],[4475,10956],[4476,10956],[4478,11009],[4479,11053],[4481,11009],[4482,11009],[4483,11009],[4487,11003],[4489,11134],[4491,11134],[4492,11134],[4498,11001],[4499,11032],[4500,10935],[4501,10935],[4502,10965],[4509,10956],[4514,10811],[4521,10869],[4522,10865],[4523,10867],[4524,10804],[4526,11070],[4527,10972],[4528,11050],[4529,11076],[4530,10866],[4531,10869],[4532,10804],[4533,11026],[4535,11026],[4537,10844],[4540,10844],[4565,10936],[4588,11026],[4593,11068],[4594,11068],[4606,11024],[4608,10868],[4610,10900],[4611,11031],[4623,11026],[4631,11006],[4632,10855],[4633,10855],[4634,10811],[4635,10826],[4636,10804],[4639,10804],[4641,10804],[4646,10962],[4647,11025],[4655,10985],[4656,10843],[4658,11132],[4659,11010],[4660,11012],[4661,11010],[4662,10988],[4664,11012],[4665,10990],[4666,11032],[4669,11128],[4670,11128],[4671,11127],[4672,11128],[4673,11128],[4675,11070],[4676,10804],[4677,10809],[4678,10804],[4679,10804],[4680,10848],[4681,11081],[4682,11082],[4683,10804],[4684,10813],[4685,10809],[4686,11089],[4687,10934],[4688,11094],[4690,11097],[4692,11021],[4693,10875],[4696,11080],[4697,10852],[4699,11007],[4707,11015],[4708,11015],[4709,10892],[4711,10967],[4717,10910],[4726,11024],[4729,10934],[4730,10999],[4731,10853],[4732,11030],[4733,11135],[4734,11030],[4738,10997],[4739,11136],[4744,10843],[4747,10966],[4748,11002],[4749,11004],[4750,10928],[4753,10928],[4754,10899],[4759,11037],[4760,11037],[4761,11007],[4762,10808],[4764,10967],[4765,11071],[4766,11048],[4767,11088],[4768,11015],[4769,10981],[4770,10847],[4771,10967],[4784,10894],[4785,10812],[4792,10825],[4793,10825],[4794,10967],[4798,11084],[4800,11003],[4802,10896],[4803,11028],[4811,10920],[4813,10804],[4814,10871],[4816,11022],[4817,10977],[4818,10984],[4820,10804],[4827,11024],[4831,10939],[4832,10905],[4835,11052],[4843,10957],[4845,11020],[4846,10998],[4848,11017],[4856,11129],[4857,11072],[4859,10804],[4860,10845],[4861,10823],[4865,11093],[4879,10804],[4886,10804],[4887,10804],[4892,10804],[4893,10804],[4898,10804],[4899,10804],[4904,10804],[4905,10804],[4906,11054],[4910,11027],[4912,10919],[4915,10823],[4918,10993],[4927,11091],[4928,11098],[4932,11017],[4934,11005],[4937,11024],[4938,11024],[4947,11012],[5038,11137],[5043,11137],[5053,11138],[5063,10933],[5065,11139],[5067,11140],[5079,11140],[5090,11141],[5096,11142],[5099,11143],[5112,11144],[5117,11144],[5120,10892],[5126,11145],[5151,11146],[5155,11147],[5159,11148],[5167,11142],[5169,11017],[5425,10911],[5430,11147],[5438,11142],[5447,11132],[5448,11132],[5449,11132],[5455,11149],[5458,11150],[5460,11150],[5462,11150],[5648,11151],[5656,11140],[5660,11152],[5661,11139],[5663,11153],[5675,11139],[5686,11153],[5688,11154],[5691,11153],[5692,11153],[5693,11154],[5694,11154],[5703,11070],[5704,11155],[5709,11156],[5710,10823],[5718,11157],[5720,11140],[5721,11157],[5723,11157],[5725,11157],[5727,11140],[5728,11157],[5735,11113],[5737,11143],[5738,11145],[5739,11023],[5741,11143],[5742,11143],[5743,11121],[5744,11121],[5745,11121],[5812,11070],[5813,10955],[6070,11062],[6072,11113],[6074,11158],[6215,11159],[6216,11142],[6221,11139],[6222,11139],[6224,11023],[6233,10940],[6234,10940],[6495,10933],[6521,10892],[6558,11142],[6562,11070],[6565,10892],[6570,11160],[6666,10933],[6670,11140],[6674,11154],[6890,10892],[6899,11142],[6901,10892],[6941,11132],[6943,11132],[6954,11003],[6955,11003],[7034,11161],[7046,11162],[7047,11162],[7049,11163],[7057,11139],[7063,11083],[7064,11096],[7197,11143],[7198,11143],[7200,11164],[7201,11013],[7203,11164],[7204,11165],[7347,11014],[7349,11132],[7350,11166],[7358,11167],[7363,11168],[7366,11169],[7374,11147],[7377,11147],[7383,11155],[7419,11142],[7434,11142],[7446,11026],[7493,10911],[7494,10911],[7499,11141],[7510,11142],[7513,11142],[7521,11170],[7522,11132],[7523,11147],[7533,11147],[7539,11147],[7553,10823],[7564,11147],[7585,11145],[7625,11145],[7636,11171],[7637,11172],[7685,11173],[7706,11147],[7710,11142],[7711,11070],[7765,10809],[7766,10809],[7767,10809],[7768,10809],[7775,11069],[7785,11147],[7816,11140],[7827,11174],[7828,11175],[7830,11176],[7837,11162],[7840,11132],[7934,11177],[7937,10892],[7950,11149],[7990,11070],[8008,10892],[8024,11084],[8026,11084],[8044,11161],[8057,11145],[8058,11178],[8060,11178],[8062,11178],[8064,11178],[8066,11178],[8078,11147],[8101,11017],[8105,11143],[8662,11142],[8683,11070],[8843,11017],[9055,10892],[9203,10949],[9204,10950],[9205,10950],[9206,10950],[9207,10950],[9208,10950],[9209,10950],[9210,10950],[9211,10950],[9212,10950],[9216,10895],[9220,10895],[9221,10895],[9222,10895],[9223,10895],[9224,10895],[9225,10895],[9226,10895],[9227,10895],[9228,10895],[9229,10895],[9230,10895],[9231,10895],[9232,10895],[9233,10895],[9234,10895],[9235,10895],[9236,10895],[9237,10895],[9238,10895],[9239,10895],[9240,10895],[9241,10895],[9242,10895],[9243,10895],[9244,10895],[9245,10895],[9246,10895],[9247,10895],[9248,10895],[9249,10895],[9250,10895],[9251,11101],[9252,11102],[9270,10992],[9286,10996],[9287,11040],[9288,11041],[9289,11042],[9290,10999],[9291,11088],[9292,10977],[9293,11072],[9346,11179],[9354,10977],[9360,11103],[9361,10977],[9383,10977],[9392,11104],[9394,11104],[9395,11104],[9405,11104],[9424,11033],[9425,11033],[9459,11180],[9471,11033],[9472,11033],[9478,10843],[9482,10804],[9483,10908],[9484,10908],[9485,10908],[9486,10887],[9488,10823],[9492,10804],[9494,10804],[9495,10804],[9497,10804],[9502,10804],[9503,10804],[9504,10906],[9507,10906],[9508,10907],[9509,10911],[9510,10910],[9511,10804],[9512,10823],[9513,10823],[9514,10823],[9519,11123],[9520,10804],[9523,11124],[9524,10804],[9529,11125],[9530,10804],[9535,11126],[9536,10804],[9540,10804],[9541,10851],[9542,10851],[9545,10804],[9551,10804],[9552,10804],[9556,10804],[9557,10804],[9558,10843],[9560,10911],[9564,11127],[9565,11083],[9566,11127],[9567,11127],[9568,11128],[9569,11127],[9571,10804],[9572,10804],[9576,10804],[9577,10804],[9581,10804],[9582,10804],[9586,10804],[9587,10804],[9591,10804],[9592,10804],[9602,10804],[9603,10804],[9605,10844],[9606,10844],[9618,10804],[9621,10804],[9623,10804],[9624,10843],[9628,11128],[9629,11128],[9630,11127],[9631,11128],[9632,11128],[9633,10804],[9634,10804],[9635,10804],[9636,10804],[9638,10910],[9639,10843],[9641,10896],[9645,10804],[9647,10804],[9651,10905],[9657,11129],[9658,10804],[9659,10845],[9660,10823],[9663,10804],[9667,10804],[9668,10804],[9672,10804],[9673,10804],[9677,10804],[9678,10804],[9682,10804],[9683,10804],[9687,10823],[9700,10911],[9702,10844],[9707,10823],[9723,10911],[9724,10911],[9725,10823],[9743,10906],[9744,10906],[9745,10907],[9746,10911],[9747,10910],[9749,10911],[9753,10910],[9754,10911],[9756,10911],[9757,10911],[9758,10906],[9759,10906],[9760,10910],[9765,10910],[9766,10920],[9767,10920],[9768,10920],[9769,10920],[9770,11162],[9771,11162],[9772,11162],[9773,11065],[9774,11065],[9775,11065],[9779,11047],[9831,10951],[9834,11105],[9854,11115],[9855,11115],[9870,11018],[9873,11019],[9910,10969],[9951,11021],[9980,11022],[9991,11020],[10015,10969],[10016,10969],[10017,10969],[10018,10969],[10059,11019],[10063,11021],[10069,11106],[10098,11107],[10123,11116],[10124,11116],[10125,11116],[10126,11013],[10129,11013],[10130,11165],[10131,11181],[10132,11182],[10133,11182],[10134,11182],[10135,11182],[10136,11108],[10166,11096],[10180,11096],[10193,10899],[10194,10899],[10195,10899],[10196,10998],[10197,10998],[10218,10894],[10221,10894],[10222,11117],[10223,11117],[10224,11117],[10225,11117],[10228,11118],[10229,11119],[10230,11119],[10231,11119],[10232,11119],[10233,11119],[10234,11119],[10235,11119],[10236,10894],[10237,10825],[10238,10825],[10249,10982],[10250,11084],[10251,10984],[10270,11161],[10278,11084],[10280,11084],[10283,11161],[10289,11178],[10291,11178],[10293,11178],[10295,11178],[10297,11178],[10303,10993],[10309,11183],[10310,11183],[10314,10892],[10316,10929],[10317,10847],[10320,10808],[10321,11112],[10322,11112],[10323,10847],[10337,10808],[10514,10808],[10629,10808],[10717,10808],[10726,10811],[10727,10811],[10728,10811],[10730,10811],[10734,10811],[10747,10826],[10748,10826],[10755,11046],[10779,10822],[10780,10822]],"b":[[26,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[27,"impl-Add-for-%26ChunkedArray%3CT%3E"],[28,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[29,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[30,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[31,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[34,"impl-Add-for-ChunkedArray%3CT%3E"],[35,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-ChunkedArray%3CStringType%3E"],[39,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[40,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[41,"impl-AggList-for-ChunkedArray%3CListType%3E"],[42,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[43,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[45,"impl-AggList-for-ChunkedArray%3CT%3E"],[48,"impl-ChunkedArray%3CFixedSizeListType%3E"],[49,"impl-ChunkedArray%3CListType%3E"],[50,"impl-ChunkedArray%3CListType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[56,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[57,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[58,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[59,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[60,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[62,"impl-ChunkedArray%3CFixedSizeListType%3E"],[63,"impl-ChunkedArray%3CListType%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[69,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[70,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[77,"impl-ChunkedArray%3CT%3E"],[78,"impl-ChunkedArray%3CBinaryType%3E"],[79,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CListType%3E"],[83,"impl-ChunkedArray%3CFixedSizeListType%3E"],[84,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[85,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[86,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[87,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[88,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[89,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[97,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[98,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[99,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[100,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[101,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[102,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[104,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[114,"impl-ChunkedArray%3CStringType%3E"],[115,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[123,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[124,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[125,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[126,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[127,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[129,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[137,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[172,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[173,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[174,"impl-Div-for-ChunkedArray%3CT%3E"],[175,"impl-Div-for-%26ChunkedArray%3CT%3E"],[182,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[183,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[185,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[186,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[190,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[195,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[199,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[200,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[201,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[203,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[204,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[205,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[207,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[208,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[209,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[210,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[211,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[212,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[213,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[216,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[217,"impl-Debug-for-ChunkedArray%3CT%3E"],[218,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-Debug-for-ChunkedArray%3CListType%3E"],[220,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[221,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[222,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[224,"impl-ChunkedArray%3CFixedSizeListType%3E"],[225,"impl-ChunkedArray%3CListType%3E"],[234,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[235,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[236,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[237,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[238,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[239,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[240,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[241,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[242,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[243,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[244,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[246,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[247,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[248,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[249,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[250,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[252,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[253,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[254,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[255,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[256,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[257,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[258,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[259,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[264,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[265,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[266,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[267,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[270,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[271,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[272,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[273,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[274,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[278,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[279,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[280,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[281,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[282,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[283,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[284,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[285,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[288,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[289,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[292,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[293,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[295,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[296,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[297,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[301,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[309,"impl-ChunkedArray%3CListType%3E"],[310,"impl-ChunkedArray%3CFixedSizeListType%3E"],[312,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[313,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[328,"impl-ChunkedArray%3CFixedSizeListType%3E"],[329,"impl-ChunkedArray%3CListType%3E"],[333,"impl-ChunkedArray%3CListType%3E"],[334,"impl-ChunkedArray%3CFixedSizeListType%3E"],[340,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[341,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[342,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[343,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[344,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[345,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[346,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[351,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[353,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[354,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[355,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[356,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[359,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[360,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[361,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[362,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[365,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[366,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[367,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[369,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[376,"impl-ChunkedArray%3CFixedSizeListType%3E"],[377,"impl-ChunkedArray%3CListType%3E"],[385,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[386,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[387,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[392,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[394,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[395,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[424,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[425,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[426,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[427,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[428,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[429,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[430,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[431,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[432,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[433,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[434,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[435,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[436,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[437,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[438,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkedArray%3CBooleanType%3E"],[443,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[444,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[445,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[446,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[448,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[449,"impl-ChunkedArray%3CBooleanType%3E"],[450,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[452,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[453,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[454,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[455,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[462,"impl-ChunkedArray%3CBooleanType%3E"],[463,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[467,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[468,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[469,"impl-ChunkedArray%3CBooleanType%3E"],[470,"impl-ChunkedArray%3CT%3E"],[471,"impl-Mul-for-ChunkedArray%3CT%3E"],[472,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[473,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[474,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[476,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[477,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[478,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[480,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[481,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[483,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[484,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[485,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[486,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[487,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[488,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[489,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[490,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[491,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[492,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[493,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[494,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[495,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[496,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[497,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[498,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[503,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[504,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[505,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[507,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[508,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[509,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[511,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[512,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[517,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[521,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[522,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[523,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[524,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[525,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[526,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[527,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[528,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[535,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[536,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[537,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[538,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[539,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[540,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[541,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[542,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[543,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[544,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[545,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[548,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[549,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[550,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[551,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[552,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[553,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[554,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[557,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[558,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[560,"impl-ChunkedArray%3CListType%3E"],[561,"impl-ChunkedArray%3CStringType%3E"],[562,"impl-ChunkedArray%3CListType%3E"],[563,"impl-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[567,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[568,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[569,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[570,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[571,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[578,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[579,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[580,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[581,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[582,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[583,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[600,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[601,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[602,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[603,"impl-Rem-for-ChunkedArray%3CT%3E"],[606,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[607,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[608,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[609,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[610,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[611,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[612,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[613,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[618,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[619,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[620,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[621,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[622,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[623,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[624,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[625,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[626,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[627,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[628,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[629,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[630,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[631,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[632,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[638,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[639,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[640,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[641,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[642,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[643,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[644,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[645,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[646,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[648,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[649,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[650,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[651,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[653,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[656,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[657,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[658,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[659,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[660,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[661,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[662,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[663,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[664,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[665,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[667,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[668,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[669,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[670,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[671,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[672,"impl-Sub-for-ChunkedArray%3CT%3E"],[673,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[675,"impl-ChunkedArray%3CBooleanType%3E"],[676,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[677,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[678,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[679,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[681,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[682,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[686,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[687,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[688,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[689,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[690,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[695,"impl-ChunkedArray%3CFixedSizeListType%3E"],[696,"impl-ChunkedArray%3CListType%3E"],[697,"impl-ChunkedArray%3CT%3E"],[698,"impl-ChunkedArray%3CListType%3E"],[703,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[704,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[705,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[706,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[707,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[708,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[710,"impl-ChunkedArray%3CListType%3E"],[711,"impl-ChunkedArray%3CFixedSizeListType%3E"],[724,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[725,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[726,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[727,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[728,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[733,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[734,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[735,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[736,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[737,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[738,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[739,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[740,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[741,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[742,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[743,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[744,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[745,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[746,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[747,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[749,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[750,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[752,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[753,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[754,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[755,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[756,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[757,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[758,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[760,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[761,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[762,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[763,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[764,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[765,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[766,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[767,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[776,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[777,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[778,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[779,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[780,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[781,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[782,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[783,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[784,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[785,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[786,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[810,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[986,"impl-BinViewChunkedBuilder%3Cstr%3E"],[987,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1244,"impl-Flags-for-MetadataProperties"],[1245,"impl-MetadataProperties"],[1246,"impl-MetadataFlags"],[1247,"impl-Flags-for-MetadataFlags"],[1314,"impl-Octal-for-MetadataProperties"],[1315,"impl-UpperHex-for-MetadataProperties"],[1316,"impl-LowerHex-for-MetadataProperties"],[1317,"impl-Debug-for-MetadataProperties"],[1318,"impl-Binary-for-MetadataProperties"],[1319,"impl-Debug-for-MetadataFlags"],[1320,"impl-Binary-for-MetadataFlags"],[1321,"impl-Octal-for-MetadataFlags"],[1322,"impl-LowerHex-for-MetadataFlags"],[1323,"impl-UpperHex-for-MetadataFlags"],[1331,"impl-Flags-for-MetadataProperties"],[1332,"impl-MetadataProperties"],[1333,"impl-Flags-for-MetadataFlags"],[1334,"impl-MetadataFlags"],[1446,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1447,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1480,"impl-ObjectArray%3CT%3E"],[1481,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1495,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1496,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1506,"impl-ObjectArray%3CT%3E"],[1507,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1509,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1510,"impl-ObjectArray%3CT%3E"],[1512,"impl-Array-for-ObjectArray%3CT%3E"],[1513,"impl-ObjectArray%3CT%3E"],[1516,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1517,"impl-ObjectChunkedBuilder%3CT%3E"],[1519,"impl-ObjectChunkedBuilder%3CT%3E"],[1520,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2256,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2257,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2258,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2259,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2260,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2265,"impl-Logical%3CDurationType,+Int64Type%3E"],[2266,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2513,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2514,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2515,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2516,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2517,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2526,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2527,"impl-PartialEq-for-DataType"],[2533,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2534,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2535,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2537,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2538,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2539,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2573,"impl-Display-for-AnyValue%3C\'_%3E"],[2574,"impl-Debug-for-AnyValue%3C\'a%3E"],[2576,"impl-Debug-for-DataType"],[2577,"impl-Display-for-DataType"],[2579,"impl-Debug-for-TimeUnit"],[2580,"impl-Display-for-TimeUnit"],[2585,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2586,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2601,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2603,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2604,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2605,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2606,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2609,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2610,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2611,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2613,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2614,"impl-From%3C%26ArrowField%3E-for-Field"],[2638,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2639,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2662,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2663,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2664,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2665,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2666,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2670,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2671,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2672,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2673,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2674,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2710,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2711,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2712,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2714,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2715,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2716,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2818,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2819,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2820,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2821,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2822,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2872,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2873,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2874,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2876,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2877,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2878,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2892,"impl-PolarsMonthEnd-for-Logical%3CDateType,+Int32Type%3E"],[2893,"impl-PolarsMonthEnd-for-Logical%3CDatetimeType,+Int64Type%3E"],[2894,"impl-PolarsMonthStart-for-Logical%3CDateType,+Int32Type%3E"],[2895,"impl-PolarsMonthStart-for-Logical%3CDatetimeType,+Int64Type%3E"],[2919,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2920,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2921,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2922,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2923,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2924,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2925,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2926,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2932,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2933,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2934,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2936,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2937,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2938,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2942,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2943,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[2964,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[2965,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[2972,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2973,"impl-Logical%3CDurationType,+Int64Type%3E"],[2978,"impl-Logical%3CDateType,+Int32Type%3E"],[2979,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2980,"impl-Logical%3CTimeType,+Int64Type%3E"],[2995,"impl-Logical%3CDurationType,+Int64Type%3E"],[2996,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3044,"impl-Logical%3CTimeType,+Int64Type%3E"],[3045,"impl-Logical%3CDateType,+Int32Type%3E"],[3046,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3052,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3053,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3342,"impl-Display-for-ErrString"],[3343,"impl-Debug-for-ErrString"],[3344,"impl-Debug-for-PolarsError"],[3345,"impl-Display-for-PolarsError"],[3349,"impl-From%3CError%3E-for-PolarsError"],[3350,"impl-From%3CError%3E-for-PolarsError"],[3352,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3353,"impl-From%3CError%3E-for-PolarsError"],[3354,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3355,"impl-From%3CError%3E-for-PolarsError"],[3477,"impl-Display-for-DataFrame"],[3478,"impl-Debug-for-DataFrame"],[3483,"impl-From%3CStructChunked%3E-for-DataFrame"],[3484,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3485,"impl-From%3C%26Schema%3E-for-DataFrame"],[3513,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3514,"impl-Index%3Cusize%3E-for-DataFrame"],[3515,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3516,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3517,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3518,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3519,"impl-Index%3C%26str%3E-for-DataFrame"],[3520,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3610,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3612,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3785,"impl-Debug-for-GroupByMethod"],[3786,"impl-Display-for-GroupByMethod"],[3792,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3793,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3795,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3829,"impl-IntoIterator-for-GroupsIdx"],[3830,"impl-IntoIterator-for-%26GroupsIdx"],[3832,"impl-IntoParallelIterator-for-GroupsIdx"],[3833,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5153,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5154,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5789,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5790,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5791,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5801,"impl-Default-for-Arc%3CCStr%3E"],[5802,"impl-Default-for-Arc%3CT%3E"],[5803,"impl-Default-for-Arc%3Cstr%3E"],[5804,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6275,"impl-PartialEq-for-Expr"],[6276,"impl-Expr"],[6279,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6280,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6296,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6297,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6298,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6303,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6304,"impl-PartialEq-for-StructArray"],[6579,"impl-Debug-for-Duration"],[6580,"impl-Display-for-Duration"],[6602,"impl-Debug-for-JoinType"],[6603,"impl-Display-for-JoinType"],[6606,"impl-Display-for-JoinValidation"],[6607,"impl-Debug-for-JoinValidation"],[6619,"impl-Debug-for-Expr"],[6620,"impl-Display-for-Expr"],[6622,"impl-Debug-for-Operator"],[6623,"impl-Display-for-Operator"],[6625,"impl-Display-for-BooleanFunction"],[6626,"impl-Debug-for-BooleanFunction"],[6627,"impl-Display-for-CategoricalFunction"],[6628,"impl-Debug-for-CategoricalFunction"],[6629,"impl-Display-for-TemporalFunction"],[6630,"impl-Debug-for-TemporalFunction"],[6631,"impl-Debug-for-PowFunction"],[6632,"impl-Display-for-PowFunction"],[6633,"impl-Display-for-StringFunction"],[6634,"impl-Debug-for-StringFunction"],[6635,"impl-Display-for-FunctionExpr"],[6636,"impl-Debug-for-FunctionExpr"],[6650,"impl-Display-for-Arc%3CT,+A%3E"],[6651,"impl-Debug-for-Arc%3CT,+A%3E"],[6652,"impl-Pointer-for-Arc%3CT,+A%3E"],[6700,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6702,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6764,"impl-From%3Cu32%3E-for-Expr"],[6765,"impl-From%3Ci16%3E-for-Expr"],[6766,"impl-From%3Cu16%3E-for-Expr"],[6767,"impl-From%3C%26str%3E-for-Expr"],[6769,"impl-From%3Cu64%3E-for-Expr"],[6770,"impl-From%3Ci32%3E-for-Expr"],[6771,"impl-From%3Ci64%3E-for-Expr"],[6772,"impl-From%3Cf64%3E-for-Expr"],[6773,"impl-From%3Cbool%3E-for-Expr"],[6774,"impl-From%3Cu8%3E-for-Expr"],[6775,"impl-From%3CAggExpr%3E-for-Expr"],[6776,"impl-From%3Ci8%3E-for-Expr"],[6777,"impl-From%3Cf32%3E-for-Expr"],[6780,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6781,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6782,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6783,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6784,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6785,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6786,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6787,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6788,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6789,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6796,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6798,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6799,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6800,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6815,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6816,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6817,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6818,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6819,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6820,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6821,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6822,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6823,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6824,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6825,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6826,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6827,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6828,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6831,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6840,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6841,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6842,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6844,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6845,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6846,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6847,"impl-From%3CArrowSchema%3E-for-Schema"],[6848,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6862,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6863,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6871,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6872,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6884,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6885,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7995,"impl-Array-for-StructArray"],[7996,"impl-StructArray"],[8004,"impl-Array-for-StructArray"],[8005,"impl-StructArray"],[8686,"impl-StructArray"],[8687,"impl-Array-for-StructArray"],[8933,"impl-LazyFileListReader-for-LazyCsvReader"],[8934,"impl-LazyCsvReader"],[8935,"impl-LazyFileListReader-for-LazyJsonLineReader"],[8936,"impl-LazyJsonLineReader"],[8983,"impl-LazyFileListReader-for-LazyCsvReader"],[8984,"impl-LazyCsvReader"],[8985,"impl-LazyJsonLineReader"],[8986,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9023,"impl-Array-for-StructArray"],[9024,"impl-StructArray"],[9411,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9412,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9417,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[9418,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10082,"impl-Debug-for-RollingFunction"],[10083,"impl-Display-for-RollingFunction"],[10111,"impl-Debug-for-RollingFunctionBy"],[10112,"impl-Display-for-RollingFunctionBy"],[10328,"impl-Add-for-Series"],[10329,"impl-Add-for-%26Series"],[10330,"impl-Add%3CT%3E-for-%26Series"],[10331,"impl-Add%3CT%3E-for-Series"],[10346,"impl-SeriesSealed-for-Series"],[10347,"impl-AsSeries-for-Series"],[10391,"impl-Div%3CT%3E-for-Series"],[10392,"impl-Div-for-%26Series"],[10393,"impl-Div%3CT%3E-for-%26Series"],[10394,"impl-Div-for-Series"],[10404,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10405,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10406,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10408,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10409,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10410,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10427,"impl-Debug-for-Series"],[10428,"impl-Display-for-Series"],[10433,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10434,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10435,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10436,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10437,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10444,"impl-FromIterator%3Cu64%3E-for-Series"],[10445,"impl-FromIterator%3C%26i32%3E-for-Series"],[10446,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10447,"impl-FromIterator%3C%26u16%3E-for-Series"],[10448,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10449,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10450,"impl-FromIterator%3C%26i16%3E-for-Series"],[10451,"impl-FromIterator%3C%26str%3E-for-Series"],[10452,"impl-FromIterator%3C%26i64%3E-for-Series"],[10453,"impl-FromIterator%3Cu32%3E-for-Series"],[10454,"impl-FromIterator%3Cf64%3E-for-Series"],[10455,"impl-FromIterator%3C%26u64%3E-for-Series"],[10456,"impl-FromIterator%3CString%3E-for-Series"],[10457,"impl-FromIterator%3C%26u32%3E-for-Series"],[10458,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10459,"impl-FromIterator%3Cu16%3E-for-Series"],[10460,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10461,"impl-FromIterator%3C%26f64%3E-for-Series"],[10462,"impl-FromIterator%3C%26f32%3E-for-Series"],[10463,"impl-FromIterator%3Cf32%3E-for-Series"],[10464,"impl-FromIterator%3C%26bool%3E-for-Series"],[10465,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10466,"impl-FromIterator%3Ci32%3E-for-Series"],[10467,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10468,"impl-FromIterator%3Cbool%3E-for-Series"],[10469,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10470,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10471,"impl-FromIterator%3Ci64%3E-for-Series"],[10472,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10473,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10474,"impl-FromIterator%3Ci8%3E-for-Series"],[10475,"impl-FromIterator%3C%26u8%3E-for-Series"],[10476,"impl-FromIterator%3Cu8%3E-for-Series"],[10477,"impl-FromIterator%3C%26i8%3E-for-Series"],[10478,"impl-FromIterator%3Ci16%3E-for-Series"],[10479,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10480,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10481,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10482,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10483,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10484,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10485,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10486,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10487,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10488,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10499,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10500,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10501,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10503,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10504,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10505,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10542,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10543,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10544,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10546,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10547,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10548,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10557,"impl-Mul-for-%26Series"],[10558,"impl-Mul%3CT%3E-for-Series"],[10559,"impl-Mul%3CT%3E-for-%26Series"],[10560,"impl-Mul-for-Series"],[10564,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10565,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10566,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10567,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10568,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10569,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10570,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10571,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10572,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10573,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10574,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10575,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10576,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10577,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10578,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10579,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10580,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10581,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10582,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10583,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10584,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10585,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10586,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10587,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10588,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10589,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10590,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10591,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10592,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10593,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10594,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10595,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10596,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10597,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10598,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10599,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10600,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10601,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10602,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10603,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10604,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10605,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10606,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10607,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10608,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10609,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10610,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10611,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10612,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10613,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10614,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10620,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10621,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10622,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10624,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10625,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10626,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10634,"impl-Rem%3CT%3E-for-%26Series"],[10635,"impl-Rem-for-%26Series"],[10636,"impl-Rem%3CT%3E-for-Series"],[10662,"impl-Sub-for-Series"],[10663,"impl-Sub%3CT%3E-for-%26Series"],[10664,"impl-Sub%3CT%3E-for-Series"],[10665,"impl-Sub-for-%26Series"],[10694,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10695,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10696,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10697,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAH4OxQ4CDwUPBg8HDwgPCQ8ODxEPFg8XDzwP","e":"OzAAAAEAALIeFgQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoANAAAADgABQBCAAIARgAKAFUACgBhAAUAaAAAAGsABQByABYAigAGAJIACACeAAIAogABAKgADAC3ABMAzAAKANgACgDkAAAA5gABAOoAHQAOARQAJQESADkBFABQAQEAVQEeAHYBAgB9ARAAjwEDAJYBAQCaAQEAnQEGAKkBIQDPAQYA2AEHAOEBMgAYAhMALQICADECBAA3AgUAQQIAAEMCGgBfAgcAawIRAH8CDwCRAhcArAIBALECAAC1AgEAvAIAAMACBwDKAgEAzQIMANsCAADdAicABwMAAAkDIwAvAzQAZgMIAHMDEQCIA1gA7gMSAAwEBwAVBFwAcwQAAHYEFACPBAMAlwQDAJ0ENQDdBAAA4AQAAOUEEgD8BAwACwUHABUFAgAaBQIAHwUNADQFAAA2BQAAOgUBAEAFCwBXBQEAWwUAAF4FAgBlBQMAagUBAHIFCwCEBQMAigUOAJsFBwClBRUAvAUHAMUFAADHBQAAygUCAM8FEADhBQAA5AUAAOYFAwDrBQIA7wUAAPEFCAD7BQAA/QUFAAUGAQAIBgAACgYBAA0GAwASBgMAFwYCABsGAwAhBgAAJAYAACwGAAAxBgAANAYBADkGAQA8BgAAPwYAAEcGAABNBgIAWAYGAGEGDQBxBgUAeQYIAIQGBACLBgAAjQYAAI8GAQCVBgUAngYBAKcGAQCzBgAAtQYBALgGAAC7BgAAvQYAAMEGAADDBgAAyAYMANcGAgDmBgAA6AYHAPEGAgD3BgAA+QYDAP4GAQABBwUADQcVACQHAQAoBwQALgcDADUHBgBJBwMATgcHAFcHBABeBwIAYgcFAGoHAABsBwwAfQcBAIEHAQCHBwEAigcBAI0HAwCSBwAAlAcAAJcHAQCbBwAAnQcBAKAHAACiBwIApgcMALQHAAC2BwEAuQcAALsHAQC+BwAAwAcBAMMHAADFBwEAyAcAAMwHAADQBwEA1AcAANcHAADZBwAA2wcDAOAHAADjBwgA7QcBAPAHBQD3BwEA+wcAAP0HAgACCAAABwgDAAwIAQAPCAAAEQgBABQIAAAWCAEAGQgAABsIAQAeCAAAIAgBACMIAAAlCAAAKAgmAFAIGABqCG4A3AhQAC4JBwA4CZgA0gkHANsJKAAFCgEACAoPABoKAQAqCgAALAoDADIKAgA2CgIATwoBAFIKAABaCgAAXQoAAF8KBgBnCgQAbQoAAG8KBAB1CgEAeAoZAJcKDwCpCioA1QoAAAELCQANCwAADwsBABILBAAYCwEAHQsAAB8LBQAmCwAAKQsCAC4LBAA0CwAANwsQAEoLAABNCxMAYgsAAGULDQB0CwwAggsAAIQLAQCICw8AmQsAAKALAACiCwAApwsQALoLAAC8CwIAwQshAOgLZQBPDC8AgAwCAIQMNQC7DAEAvgwIAMgMAADKDAEAzQwEANMMAQDYDAAA2gwCAN4MAADhDAQA5wwEAO0MEgABDREAFQ0CABkNBwAkDQQAKg0VAEMNAABGDQoAUg0CAFoNEABtDRAAhQ0BAIkNAgCNDQAAjw0AAJQNAwCcDQIAoA0AAK8NAACxDQAAsw0BALoNDADNDQIA4A0BAO0NAQDxDQAA9w0AAAAOAQADDgAABg4BAA0OAAAPDgQAFw4GACAOCQArDgAALg4BADIOBAA+Dg0ATQ4CAFIOCgBeDgEAYQ4DAGYOAwBrDgkAdg4HAH8OAQCCDhgAnA4oAMYOBgDRDgEA1A4BANgOAADaDgMA4A4AAOQOBwD0Dg0AAw8BAAoPAwAPDwEAEw8CABgPAAAaDx8APQ8MAEwPBQBTDwcAXA8jAIIPCwCPDw8AoQ8AAKMPAwCqDwYAtA8OAMUPBQDNDwAA0A8IANoPAQDeDwQA5A8FAOsPAADwDwkA+w8BAP8PBAAFEAEACBAKABQQAAAXEAAAGRAJACQQAAAmEAkAMRAEADoQAAA9EAAARRACAEwQAABPEAEAVRAKAGEQEQB2EAcAfxABAIIQBACLEAQAkxAEAJwQAwChEAAAoxALALEQCgC+EAEAwhAAAMUQAADHEAUAzhADANMQBADZEAMA4BACAOYQAADoEAEA7BAAAO4QBAD1EA8ABhEAAAkRAQAMEQMAEhECABgRFQAvEQkAOxEAAD0RAQBBEQAAQxEBAEcRAABJEQEATREAAE8RBABWEQEAWREBAF0RAABgEQAAYhEDAGcRAgBrEQgAdhEHAIARAACEEQEAiBEAAIoRAACMEQEAjxEBAJIRAQCXEQAAmRENAKoRBQCxEQcAuxECAL8RBgDKEQEAzREAAM8RAQDSEQMA1xEAANkRAwDeEQIA4hEAAOQRBADqEQAA7BEEAPIRBAD4EQEA+xEBAP4RAQABEgEABBIAAAYSAAAJEgAADBICABESAwAWEgcAIBICACcSAAApEgUAMBIEADYSAAA5EgAAOxIEAEESAwBGEgIAShICAE4SDQBdEhMAchISAIYSCACQEgQAmBIBAJwSAACeEgUApRIEAKsSAACtEgIAshIBALcSAQC8EgcAxRIDAM0SBgDVEgkA4hIBAOUSBgDtEgIA8hICAPkSBQAAExIAFRMAABcTAQAbEwAAHRMBACETAAAjEwEAJxMAACkTAwAvEwMANBMCADsTCQBGEwAASRMFAFETAgBVE1sAshMEALsTAAC9EwAAwBMFAMgTAADPEwAA0RMAANQTAADWEwAA2hMFAOQTAADoEwAA7xMAAPMTAAD/EwIAAxQEAAkUAAALFAIADxQBABUUAQAYFAQAHhQBACYUCgAzFPYAKxUAAC0VAQAwFQAAMhUCADkVAQA/FQAAQRUAAEcVAABKFQAATBUBAE8VAABZFUwApxULALQVWQAPFgEAExYBABcWAAAbFgIAIRYKAC8WBAA5FgAAOxYAAEUWAQBJFgAATxYAAFEWAQBWFgEAZRYAAGsWAABwFgIAdhYAAHgWBQCAFikArhb/ALAXAAC1FwEAuBcDAL4XAADAFwMAyBcYAOIXUgA2GA0ASBgBAE0YAABQGAAAVBgDAFkYKwCGGBIAmhgMAKoYqgBZGQAAXRkAAF8ZBABlGQAAaRkAAG8ZAABxGQAAehkAAH0ZAACFGQAAiBkCAI0ZAwCSGQEAlhkBAJkZAACbGQMAoxkAAKYZAQCrGWEADhoAABEaAAAtGgAALxoAAEAaAABKGgAAVRoAAG0aAwByGggAfRoJAI0aAACPGgIAlxoAAK4aAACyGgAAuRoCAL0aBADEGgAAyRoAAMwaBADSGgAA2BoBANwaAgDiGgUA6RoCAO0aAQDxGgEA9BoAAPYaAAD4GgAA/RoAAAYbAAAJGwEADBsCABEbAAATGwAAFxsBABsbBAAkGwEAKBsAADMbAAA1Gz8AeBsCAH8bAACBGwAAgxsEAIobAACMGwAAjxsAAJYbAgCbG30AGxwAACAcAgAkHAEAoRwAAKMcBgCtHAEAsBwFALgcAQC7HAIAvxwBAMIcAADEHAAAxxwBANQcAADWHAAA2RwBANwcAwDiHAIA8xwBAPYcAQD/HAAAAR0BAAQdAAAIHQIADh0BABEdAAAUHQAAGR0CAB4dAQAiHQIAJh0DACwdDgBAHQAARh0BAE0dAABQHQUAWR0AAGEdAgBtHQAAdx0AAH4dAQCCHQAAhh0BAIkdAACMHQAAkR0AAJMdAACVHQAAmh0AAJ4dAACgHQIApx0IALYdCADEHQAAxh0AAModAADQHQAA0h0EANsdAQDeHQEA4R0AAOQdBwDtHQAA7x0CAPMdAAD2HQEABh4AAAkeAQAUHgYAIB4CACgeAQAvHgIAMx4AADweAAA+HgMAQx4FAEseBQBWHgMAWx4AAF8eAgBlHgAAaB4AAHQeAAB3HgEAeh4BAH0eAwCDHgUAih4EAJUeAACXHgAAmx4AAJ4eAACgHgEApR4AAKkeAACrHgAArR4BANAeAADVHgAA3x4DAOQeBQDrHgAA7R4AAPAeAAD2HgEA+x4CAP8eAwAGHwAACB8BAAsfAQAOHwEAER8AABYfAwAdHwAAKB8AACofAAAsHwAAMx8EADwfAAA+HwAAQh8AAEQfAQBJHwAASx8AAFEfCwBeHwAAYB8AAGQfAABqHwAAbR8AAHMfAAB6HwoAhx8CAIwfAgCXHwAAph8AAKgfAACrHwIArx8DALUfAQC4HwAAux8AAL8fWwAdIAsAKiAAADAgBgA4IAAAOiABAD0giADIIAAAzCB5AEkhAABLIQMAViEAAFkhAABdIXgA1yEAAOMhAADqIQQA8CEBAPQhAAD2IQAA+CEAAPwhAAACIgAABCIAAAYieQCHIgMAkCIAAJMiAACWIgAAmCIBAJ0iAACfIgAApyIAALAiAAC2IgAAwSIAAMciAADUIgEA5iIAAOgiAADqIgAA7SIAAPYiAwD7IgQAECMAABgjAAAbIwAAIyMAACgjAAA3IwAAOSMBAEAjAABCIwAARiMUAF8jAQBiI0gArSMAAK8jAACxIwEAtCMBALcjBQC+IzcA+CMFAP8jCQAKJAIAECQAABIkAwAXJAEAGiQFACQkEgA4JAEAOyQCAEAkAABDJAMASCQGAF8kAABtJAIAgyQAAIskCACYJAAAmiQLAKckAgCrJBEAviQBAMEkDwDSJBcA7CQAAO4kAgDzJAwAASUHAAolBAARJQIAFSUFAB0lAAAfJQwAMCUBADQlAQA6JQEAPSUBAEAlAwBFJQAARyUAAEolAQBOJQAAUCUBAFMlAABVJQIAWSUMAGclAABpJQEAbCUAAG4lAQBxJQAAcyUBAHYlAAB4JQEAeyUAAH8lAACDJQEAhyUAAIolAACMJQAAjiUDAJMlAACWJQgAoCUBAKMlBQCqJQEAriUAALAlAgC1JQAAuiUDAL8lAQDCJQAAxCUBAMclAADJJQEAzCUAAM4lAQDRJQAA0yUBANYlAADYJQAA2yURAO4lBgD3JQAA+iUQAAwmCAAWJgEAGSYIACMmAAAlJgEAKyYAAC0mBAA2JgEAPyYCAEUmAABHJgAAUSYAAGAmAwBoJgoAdCYAAHYmCACBJuMAZicBAGknGACDJwEAhicOAJcnEQCqJwAArCcVAMMnAQDGJwAAyCcLANUnAgDcJwAA7ycDAPYnBgAKKAUAEigAABsoAAAdKAEAJCgGACwoAAAyKAoARigEAEwoAABOKAIAUigEAFkoAwBeKAEAYigAAGgoBABxKAIAdSgGAH8oAgCGKAIAiigBAJAoDgCiKAEApSgBAKooAQCuKAIAuygDAMIoBADJKAEAzCguAP4oAAAFKQEACCkAAAopAAAMKQAAEikBABUpAgAbKQMAJikCAC0pAAAvKQEAMykBADkpAAA+KQMARSkTAFopHQB6KQEAfikBAIIpAQCGKQEAiykCAJApAQCTKQAAlikCAJwpAQCgKQAApCkAAKcpAwCwKQAAuykAAL0pAQDAKRAA0ikEAN0pAQDhKQIA5SkAAOcpFgAAKgEABCoOABQqAQAXKgUAHioKACoqAAAsKgAALioEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTTTPTTTFKFFGFPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHMNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNNNNNNNNNNNNNNNNMMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNKKKKKFFFNHHHHHHHNHHEHNNNNNNNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNHNNNNENHHHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast","cast_and_apply_in_place","cast_unchecked","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","sort","sort_with","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","ENABLED","EXTENSIVE_USE","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","LOG","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","extend","extend","extensive_use","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value_opt","merge","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast","cast","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks_physical","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice_par","sort","sort_in_place","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","filter_threaded","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","sort","sort_with","sort_with","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_slice_unchecked_threaded","take_threaded","take_unchecked","take_unchecked_from_slice","take_unchecked_threaded","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add","try_add_owned","try_div","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul","try_mul_owned","try_rem","try_set_metadata","try_sub","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","unstable","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ArrayBox","UnstableSeries","__clone_box","as_mut","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","Arg","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","materialize_dyn_int","new","new","next","next_back","rayon","size_hint","slice_slice","split_ca","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[428,"polars_core::chunked_array::arithmetic"],[456,"polars_core::chunked_array::builder"],[560,"polars_core::chunked_array::builder::list"],[714,"polars_core::chunked_array::collect"],[728,"polars_core::chunked_array::float"],[730,"polars_core::chunked_array::from_iterator_par"],[734,"polars_core::chunked_array::iterator"],[771,"polars_core::chunked_array::iterator::par"],[773,"polars_core::chunked_array::metadata"],[1004,"polars_core::chunked_array::object"],[1079,"polars_core::chunked_array::object::builder"],[1102,"polars_core::chunked_array::object::registry"],[1130,"polars_core::chunked_array::ops"],[1253,"polars_core::chunked_array::ops::arity"],[1288,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1290,"polars_core::chunked_array::ops::gather"],[1293,"polars_core::chunked_array::ops::search_sorted"],[1322,"polars_core::chunked_array::ops::sort"],[1329,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1330,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1337,"polars_core::chunked_array::ops::sort::options"],[1412,"polars_core::chunked_array::temporal"],[1413,"polars_core::chunked_array::temporal::conversion"],[1416,"polars_core::config"],[1420,"polars_core::datatypes"],[2824,"polars_core::datatypes::categorical"],[2964,"polars_core::datatypes::categorical::revmap"],[3016,"polars_core::datatypes::categorical::string_cache"],[3035,"polars_core::datatypes::revmap"],[3041,"polars_core::datatypes::string_cache"],[3045,"polars_core::error"],[3110,"polars_core::error::PolarsError"],[3114,"polars_core::error::constants"],[3117,"polars_core::export"],[3125,"polars_core::fmt"],[3155,"polars_core::frame"],[3417,"polars_core::frame::explode"],[3446,"polars_core::frame::group_by"],[3681,"polars_core::frame::group_by::GroupByMethod"],[3682,"polars_core::frame::group_by::GroupsProxy"],[3684,"polars_core::frame::group_by::aggregations"],[3697,"polars_core::frame::group_by::expr"],[3700,"polars_core::frame::row"],[3794,"polars_core::functions"],[3796,"polars_core::hashing"],[3844,"polars_core::prelude"],[4408,"polars_core::prelude::PolarsError"],[4412,"polars_core::prelude::default_arrays"],[4418,"polars_core::prelude::list"],[4441,"polars_core::prelude::null"],[4471,"polars_core::prelude::revmap"],[4477,"polars_core::prelude::slice"],[4480,"polars_core::prelude::string_cache"],[4484,"polars_core::prelude::utf8"],[4488,"polars_core::random"],[4489,"polars_core::schema"],[4563,"polars_core::series"],[4955,"polars_core::series::arithmetic"],[4980,"polars_core::series::arithmetic::checked"],[4988,"polars_core::series::ops"],[5014,"polars_core::series::unstable"],[5038,"polars_core::utils"],[5147,"polars_core::utils::flatten"],[5152,"dyn_clone::sealed"],[5153,"num_traits"],[5154,"num_traits::cast"],[5155,"polars_error"],[5156,"polars_core::series::arithmetic::borrowed"],[5157,"polars_core::frame::group_by::proxy"],[5158,"core::option"],[5159,"core::iter::traits::iterator"],[5160,"core::ops::function"],[5161,"core::marker"],[5162,"polars_core::datatypes::dtype"],[5163,"alloc::string"],[5164,"polars_core::datatypes::aliases"],[5165,"polars_core::series::arithmetic::borrowed::checked"],[5166,"polars_arrow::array"],[5167,"alloc::vec"],[5168,"core::iter::traits::double_ended"],[5169,"core::fmt"],[5170,"core::iter::traits::collect"],[5171,"core::result"],[5172,"polars_utils::iter::fallible"],[5173,"polars_arrow::bitmap::immutable"],[5174,"rayon::iter"],[5175,"polars_arrow::trusted_len"],[5176,"polars_core::datatypes::any_value"],[5177,"polars_utils::index"],[5178,"polars_core::chunked_array::logical::decimal"],[5179,"core::iter::traits::exact_size"],[5180,"polars_core::series::series_trait"],[5181,"core::slice::iter"],[5182,"core::iter::adapters::map"],[5183,"alloc::sync"],[5184,"core::convert"],[5185,"core::ops::range"],[5186,"polars_core::datatypes::field"],[5187,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5188,"polars_core::chunked_array::ops::rolling_window"],[5189,"ahash::random_state"],[5190,"polars_utils::hashing"],[5191,"ndarray::aliases"],[5192,"either"],[5193,"core::any"],[5194,"polars_core::chunked_array::arithmetic::numeric"],[5195,"polars_core::chunked_array::builder::string"],[5196,"polars_arrow::array::binview"],[5197,"polars_core::chunked_array::builder::boolean"],[5198,"polars_core::chunked_array::builder::null"],[5199,"polars_core::chunked_array::builder::primitive"],[5200,"core::clone"],[5201,"polars_core::chunked_array::builder::list::anonymous"],[5202,"polars_core::chunked_array::builder::list::boolean"],[5203,"polars_core::chunked_array::builder::list::primitive"],[5204,"polars_core::chunked_array::builder::list::binary"],[5205,"polars_core::chunked_array::builder::list::null"],[5206,"alloc::boxed"],[5207,"polars_arrow::array::boolean"],[5208,"polars_core::chunked_array::metadata::env"],[5209,"bitflags::iter"],[5210,"std::fs"],[5211,"std::sync::mutex"],[5212,"polars_arrow::datatypes"],[5213,"polars_arrow::bitmap::utils::iterator"],[5214,"polars_arrow::bitmap::utils::zip_validity"],[5215,"polars_arrow::offset"],[5216,"core::hash"],[5217,"polars_arrow::array::static_array"],[5218,"core::error"],[5219,"polars_arrow::array::primitive"],[5220,"polars_arrow::legacy::array::slice"],[5221,"polars_row::row"],[5222,"chrono::naive::datetime"],[5223,"alloc::borrow"],[5224,"polars_arrow::array::static_array_collect"],[5225,"bytemuck::zeroable"],[5226,"polars_core::chunked_array::logical::categorical"],[5227,"polars_core::chunked_array::logical::categorical::merge"],[5228,"polars_core::chunked_array::logical"],[5229,"polars_core::datatypes::time_unit"],[5230,"polars_arrow::types"],[5231,"polars_arrow::datatypes::physical_type"],[5232,"core::borrow"],[5233,"smartstring::alias"],[5234,"polars_arrow::pushable"],[5235,"core::cmp"],[5236,"polars_core::chunked_array::logical::categorical::builder"],[5237,"polars_core::chunked_array::logical::categorical::revmap"],[5238,"polars_core::chunked_array::logical::categorical::string_cache"],[5239,"polars_error::warning"],[5240,"polars_core::series::from"],[5241,"polars_utils::aliases"],[5242,"polars_arrow::datatypes::schema"],[5243,"polars_core::chunked_array::ndarray"],[5244,"polars_arrow::array::struct_"],[5245,"polars_arrow::record_batch"],[5246,"polars_utils::idx_vec"],[5247,"rayon::iter::plumbing"],[5248,"polars_core::frame::group_by::into_groups"],[5249,"core::iter::adapters::copied"],[5250,"core::iter::adapters::zip"],[5251,"polars_arrow::legacy::kernels::rolling"],[5252,"polars_utils::float"],[5253,"polars_arrow::types::native"],[5254,"polars_core::frame::group_by::aggregations::agg_list"],[5255,"polars_core::frame::row::av_buffer"],[5256,"polars_arrow::array::binary"],[5257,"polars_core::hashing::identity"],[5258,"hashbrown::map"],[5259,"polars_core::hashing::vector_hasher"],[5260,"core::alloc"],[5261,"std::os::fd::owned"],[5262,"std::os::fd::raw"],[5263,"core::mem::maybe_uninit"],[5264,"polars_arrow::legacy::kernels::time"],[5265,"core::default"],[5266,"core::ffi::c_str"],[5267,"polars_arrow::scalar"],[5268,"std::io::error"],[5269,"alloc::collections"],[5270,"regex::error"],[5271,"simdutf8::basic"],[5272,"std::ffi::os_str"],[5273,"alloc::ffi::c_str"],[5274,"std::path"],[5275,"polars_arrow::legacy::array::default_arrays"],[5276,"polars_arrow::buffer::immutable"],[5277,"polars_arrow::array::list"],[5278,"polars_core::named_from"],[5279,"polars_arrow::legacy::array"],[5280,"polars_core::chunked_array::ops::aggregate"],[5281,"polars_core::chunked_array::ops::aggregate::quantile"],[5282,"polars_arrow::legacy::index"],[5283,"core::pin"],[5284,"core::io::borrowed_buf"],[5285,"std::io"],[5286,"polars_core::chunked_array::ops::aggregate::var"],[5287,"alloc::collections::btree::map"],[5288,"polars_arrow::legacy::array::list"],[5289,"polars_arrow::legacy::array::null"],[5290,"polars_arrow::bitmap::mutable"],[5291,"polars_arrow::array::utf8"],[5292,"polars_core::series::iterator"],[5293,"polars_arrow::legacy::utils"],[5294,"polars_arrow::legacy::trusted_len::rev"],[5295,"smartstring::config"],[5296,"smartstring"],[5297,"polars_error::constants"],[5298,"polars_arrow::legacy::prelude"],[5299,"polars_arrow::legacy::array::utf8"],[5300,"polars_core::utils::any_value"],[5301,"polars_core::utils::schema"],[5302,"polars_core::utils::supertype"],[5303,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}1{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ef}{{{f{{l{c}}}}e}{{Af{Ad}}}EfAb}{{{f{{l{c}}}}}EhBn}{{{f{{l{c}}}}}{{f{{El{Ej}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{El{Ej}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}En}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}En}bBnBn}{{{f{{l{c}}}}}{{`{{F`{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{Fbb}{{{f{Bh{l{c}}}}}bBn}1{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Fd{c}}}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}01{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ff}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{Fb}}}Bn}`{{{f{{l{c}}}}{f{BhFh}}}Fjn}{{{f{{l{Al}}}}{f{BhFh}}}Fj}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{c{{l{e}}}Fl{{Bn{}{{Fn{c}}}}}}{cc{}}0{{{f{Bf}}c}{{l{e}}}G`{{Bn{}{{Fn{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{Fn{}}}}Bn}G`}{{{f{Bf}}{El{Ej}}}{{l{c}}}Bn}{{{f{Bf}}{El{Ej}}Df}{{l{c}}}Bn}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{c{{l{e}}}{{G`{}{{B`{An}}}}}n}{c{{l{e}}}{{G`{}{{B`{{Gh{El{An{Gf}}}}}}}}}n}{c{{l{Al}}}{{G`{}{{B`{{An{d}}}}}}}}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}31{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gj{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}El{An{Gf}}}{{l{c}}}n}{{{f{Bf}}Fb}{{l{c}}}n}0{{{f{{l{c}}}}Fb}{{l{c}}}Bn}{{{f{Bf}}Fb{f{Df}}}Dj}{{{f{{l{c}}}}Fb}AnBn}{{{f{{l{c}}}}Fb}{{Af{Gn}}}n}{{{f{{l{c}}}}Fb}Gnn}{{{f{{l{j}}}}Fb}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{H`}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HbBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}{{An{f}}}Bn}0{{{f{{l{{Hd{c}}}}}}Fb}{{An{{f{Hf}}}}}Hh}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}FbdFb}AjEd}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}{{{f{{l{c}}}}e}FfnAb}108{{{f{{l{c}}}}{An{Fb}}}{{l{c}}}Bn}{{}Fb}0{{FbHj{An{Hl}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{ce{}{}}0{{{l{Hn}}{An{Fb}}Fb}{{Af{I`}}}}{{{l{Hn}}{An{Fb}}Fb}I`}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IbId{If{}{{B`{}}}}F`Gl}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FfIh}000{{{f{{l{c}}}}}FfBn}02{{{f{{l{c}}}}}IjBn}{{{f{{l{c}}}}}{{`{{Il{}{{B`{An}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{In}}}}}}}}{{{f{{l{c}}}}}{{Jd{{J`{Ej}}{Jb{{f{Ej}}}{{C`{{An{{f{Gf}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{Fb}}}Bn}{{{f{{l{c}}}}}{{Jf{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}FbBn}{{{f{{l{c}}}}e}{{l{c}}}n{A`Jh}}00{{{f{{l{c}}}}Fb}{{l{c}}}Bn}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}01{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jjn}{{{f{{l{Al}}}}}{{An{Jl}}}}{{{f{{l{c}}}}}{{An{Jl}}}n}{{{f{{l{c}}}}}{{An{Jl}}}Ed}{{{f{{l{c}}}}}JjEd}{{{f{Bh{l{c}}}}{Fd{c}}}bBn}`{{{f{{l{c}}}}}{{An{{f{{Fd{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{Jn{{Fd{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{Jn{{Fd{c}}}}}}}Bn}{{{f{{l{c}}}}}{{Jn{{Fd{c}}}}}Bn};:{{{f{{l{c}}}}}{{An{Gh}}}n}:{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{D`}}}}FbFb}{{l{Al}}}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}{{Af{Fb}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Dd}}}{{K`{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{K`{{Db{Jl}}}}}}{{{f{Bf}}c}{{l{Al}}}{{K`{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{K`{{Db{{El{D`}}}}}}}}{{{f{Bf}}{Kd{Kb}}}{{l{Kf}}}}{{{f{Bf}}c}{{l{Kf}}}{{K`{{Db{Kb}}}}}}{{{f{Bf}}c}{{l{Kh}}}{{K`{{Db{{An{In}}}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{K`{{Db{Hl}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{K`{{Db{{An{Jl}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{K`{{Db{Dh}}}}}}{{{f{Bf}}c}{{l{Kf}}}{{K`{{Db{{An{Kb}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{K`{{Db{Hj}}}}}}{{{f{Bf}}c}{{l{Kj}}}{{K`{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{K`{{Db{{An{Hj}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{K`{{Db{{An{{El{D`}}}}}}}}}}{{{f{Bf}}{Kd{Kl}}}{{l{Kn}}}}{{{f{Bf}}c}{{l{Kn}}}{{K`{{Db{Kl}}}}}}{{{f{Bf}}c}{{l{Kh}}}{{K`{{Db{In}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{K`{{Db{{An{Kl}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{K`{{Db{d}}}}}}{{{f{Bf}}{Kd{Hl}}}{{l{Kj}}}}{{{f{Bf}}{Kd{In}}}{{l{Kh}}}}{{{f{Bf}}}{{l{{Hd{c}}}}}Hh}{{{f{{l{c}}}}FbFb}{{l{c}}}n}{{{f{Bf}}{El{c}}}{{l{{Hd{c}}}}}Hh}{{{f{Bf}}{El{c}}Gf}{{l{{Hd{c}}}}}Hh}{{{f{Bf}}El}{{l{c}}}n}{{{Jn{L`}}{El{Ej}}}{{l{c}}}Bn}{{{Jn{L`}}{El{Ej}}H`H`}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ih}{{{f{{l{c}}}}e}FfnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Ffn}01{{{f{{l{c}}}}}FbBn}``{{{f{{l{j}}}}}{{`{{Lb{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Lb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{c}}}}}Jjn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JlLf}{{Af{{An{Jl}}}}}Ed}{{{f{{l{c}}}}JlLf}{{Af{Jj}}}Ed}{{{f{Bf}}FbJl}{{Af{{l{Al}}}}}}{{{f{Bf}}FbJlJl}{{Af{{l{c}}}}}n}{{{f{Bf}}Fb}{{l{c}}}n}{{{f{Bf}}FbJlJl}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{L`}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lh}{{Af{Ad}}}n}{{{f{{l{c}}}}Fbe}{{Af{{l{c}}}}}Ih{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jldd{An{Hl}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Fbdd{An{Hl}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{G`{}{{B`{H`}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{G`{}{{B`{H`}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Ff}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}H`}bBn}{{{f{Bh{l{c}}}}Ij}bBn}{{{f{{l{c}}}}In}{{l{c}}}n}{{{f{{l{c}}}}InAn}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}InFb}{{l{c}}}Bn}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}D`}{{An{Jl}}}n}{{{f{{l{c}}}}D`}JjEd}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}Ann}{{{f{{l{Al}}}}}{{An{H`}}}}{{{f{{l{c}}}}}Jjn}{{{f{{l{c}}}}{An{Fb}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{K`{{Db{H`}}}}Lj}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Ll{Bl}}}}Bn}{{K`{{Db{H`}}}}Lj}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Ll{Bl}}}}Bn}}`{{{f{{l{c}}}}dLn}{{El{{El{M`}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ih}{{{f{{l{Dd}}}}Fb}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{j}}}}}{{Af{Mb}}}}{{{f{{l{c}}}}}{{Af{Md}}}n}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Mf}{{{f{{l{c}}}}}{{El{An}}}n}{{{f{{l{c}}}}}{{Mh{El{El{An}}}}}n}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}e}gn{}{}}{{{l{c}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gb{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gb{eg}}}}}}}Bn}{c{{Gb{e}}}{}{}}0{{{f{Bf}}g}{{Gb{{l{i}}e}}}Fl{}{{G`{}{{B`{{Gb{ce}}}}}}}{{Bn{}{{Fn{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Mj{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}Fb}{}Bn}{{{f{{l{c}}}}D`}{{An{Jl}}}n}{{{f{{l{c}}}}D`}JjEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fl{{Bn{}{{Fn{c}}}}Bn}}{{{f{{l{c}}}}{El{Ej}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Ml}}}}e}c{}{{Mn{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Ij}{{l{c}}}Bn}{{{l{c}}}en{}}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}2301{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}542301453276453201453210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}e{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}c}e{}{}{}}{{c{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}e{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}g{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}c}g{}{}{}}{{c{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}g{}{}{}}{{{Nf{}{{N`{c}}{Nb{e}}{Nd{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNh}}}b}{{{f{Bh{Nj{c}}}}}b{NlLj}}{{{f{BhNn}}}b}{{{f{BhO`}}}b}{{{f{Bh{Ob{c}}}}}bn}{{{f{Bh{Nj{c}}}}{An{e}}}b{NlLj}{{K`{c}}}}{{{f{BhNh}}{An{c}}}b{}}{{{f{BhNh}}c}b{}}{{{f{Bh{Nj{c}}}}e}b{NlLj}{{K`{c}}}}{{{f{BhNn}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nj{c}}}}}{{Nj{c}}}{NlLj}}{{{f{Nn}}}Nn}{{{f{O`}}}O`}{{{f{{Ob{c}}}}}{{Ob{c}}}{nOd}}{{{f{c}}{f{Bhe}}}b{}{}}000{Fb{{f{c}}}{}}000{Fb{{f{Bhc}}}{}}000{Fbb}000{Nh{{l{c}}}Bn}{{{Nj{{Db{D`}}}}}Eb}{{{Nj{Bf}}}Mf}{OfMf}{OhEb}{NnFf}`{{{Ob{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Oj{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Oj{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}Oj{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Oj{}}{{}Fb}000{ce{}{}}000`{{{f{Bf}}Fb}{{Nj{c}}}{NlLj}}{{{f{Bf}}Fb}Nn}{{{f{Bf}}Fb}O`}{{{f{Bf}}Fb}{{Ob{c}}}n}{{{f{BhNh}}}b}{{{f{BhNn}}}b}{{{f{BhO`}}}b}{{{f{Bh{Ob{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gb{e}}}{}{}}0000000{{{f{c}}}Mj{}}000;;;;````````{{{f{BhOl}}{f{Fl}}}b}{{{f{BhOl}}}b}{{{f{BhOn}}}b}{{{f{BhA@`}}c}b{{Bd{}{{B`{{An{d}}}}}}Gl}}{{{f{Bh{A@b{c}}}}e}bn{{Bd{}{{B`{An}}}}Gl}}{{{f{Bh{A@b{c}}}}e}bn{{Bd{}{{B`{}}}}Gl}}{{{f{BhA@d}}}b}54{{{f{BhA@f}}}b}{{{f{BhA@h}}}b}{{{f{BhA@`}}}b}{{{f{BhA@j}}}b}{{{f{Bh{A@b{c}}}}}bn}{{{f{BhOl}}{An{{f{Fl}}}}}b}{{{f{BhOl}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@d}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@b{c}}}}{An{{f{Db}}}}}bn}{{{f{BhA@d}}{f{Ad}}}{{Af{b}}}}{{{f{BhOl}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@b{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@b{c}}}}{f{Db}}}bn}{{{f{BhA@f}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gl}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}Gl}}{{{f{BhA@f}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}Ol}{{}On}{Fb{{f{c}}}{}}000000{Fb{{f{Bhc}}}{}}000000{Fbb}000000{{{f{A@f}}}d}{{{f{A@h}}}d}{{{f{A@`}}}d}{{{f{{A@b{c}}}}}dn}{{{f{A@d}}}d}{{{f{A@f}}}{{f{L`}}}}{{{f{A@h}}}{{f{L`}}}}{{{f{A@`}}}{{f{L`}}}}{{{f{{A@b{c}}}}}{{f{L`}}}n}{{{f{A@d}}}{{f{L`}}}}{{{f{BhOl}}}Dj}{{{f{BhOn}}}Dj}{{{f{BhA@j}}}Dj}{{{f{BhA@d}}}Dj}{cc{}}000000{{{f{Df}}FbFb{f{Bf}}}{{Af{{A@l{A@d}}}}}}{{}Fb}000000{{{f{BhA@f}}}Ej}{{{f{BhA@h}}}Ej}{{{f{BhA@`}}}Ej}{{{f{Bh{A@b{c}}}}}Ejn}{{{f{BhA@d}}}Ej}{ce{}{}}000000{{{f{Bf}}Fb{An{Df}}}Ol}{{{f{Bf}}Fb{An{Df}}}On}{{{f{Bf}}FbFb}A@f}{{{f{Bf}}FbFb}A@h}{{{f{Bf}}FbFb}A@`}{{{f{Bf}}Fb}A@j}{{{f{Bf}}FbFbDf}{{A@b{c}}}n}{{{f{Bf}}FbFbDfDf}{{A@b{c}}}n}{c{{Gb{e}}}{}{}}0000000000000{{{f{c}}}Mj{}}000000:::::::``{{A@n{f{Bf}}}{{l{c}}}Bn}{{AA`{f{{l{c}}}}}{{l{c}}}Bn}10{{AA`{f{Bf}}Df}{{l{c}}}Bn}0{{A@n{f{Bf}}}{{Gb{{l{c}}e}}}Bn{}}{{AA`{f{{l{c}}}}}{{Gb{{l{c}}e}}}Bn{}}10{{AA`{f{Bf}}Df}{{Gb{{l{c}}e}}}Bn{}}0`{AAbAAb}``{{AAd{f{Bf}}Df}e{}{{AAf{c}}}}{{e{f{Bf}}Df}AAf{}{{Gj{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{Fbb}0{cc{}}0{{}Fb}0{ce{}{}}000{{{f{AAh}}}AAj}{{{f{BhAAj}}}{{An{c}}}{}}{{{f{Bh{AAl{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AAl{c}}}}}{{An{e}}}F`{}}`{{{f{AAj}}}{{Gh{Fb{An{Fb}}}}}}{{{f{{AAl{c}}}}}{{Gh{Fb{An{Fb}}}}}Bd}{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}088```````````````````````{{{f{c}}h}b{}}000{{}En}{{}Hb}{{EnEn}En}{{HbHb}Hb}{{{f{BhEn}}En}b}{{{f{BhHb}}Hb}b}3210{{{f{En}}}Kb}0{{{f{Hb}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{{Fd{c}}}}}{{Fd{c}}}Bn}{{{f{AAn}}}AAn}{{{f{En}}}En}{{{f{Hb}}}Hb}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{BhAB`}}}b}{EnEn}{HbHb}{{{f{En}}En}d}{{{f{Hb}}Hb}d}{{}{{Fd{c}}}Bn}{{}En}{{}Hb}{Fb{{f{c}}}{}}0000{Fb{{f{Bhc}}}{}}0000{{EnEn}En}{{HbHb}Hb}{{}d}{{{Fd{c}}H`}{{Fd{c}}}Bn}{{{Fd{c}}{An{H`}}}{{Fd{c}}}Bn}{Fbb}0000983{{{f{En}}{f{En}}}d}{{{f{Hb}}{f{Hb}}}d}{{{f{BhEn}}c}b{{G`{}{{B`{En}}}}}}{{{f{BhHb}}c}b{{G`{}{{B`{Hb}}}}}}7{{{Fd{c}}d}{{Fd{c}}}Bn}{{{Fd{c}}{An{d}}}{{Fd{c}}}Bn}{{{f{{Fd{c}}}}En}{{Fd{c}}}Bn}{{{f{{Fd{c}}}}En}{{Fd{e}}}BnBn}{{{Fd{c}}Hb}{{Fd{c}}}Bn}{{{Fd{c}}{An{Hb}}}{{Fd{c}}}Bn}{{{f{{Fd{c}}}}{f{BhFh}}}FjBn}{{{f{AAn}}{f{BhFh}}}Fj}{{{f{En}}{f{BhFh}}}Fj}0000{{{f{Hb}}{f{BhFh}}}Fj}0000{cc{}}0000{Kb{{An{En}}}}{D`{{An{Hb}}}}{KbEn}0{D`Hb}010{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}0{cEn{{G`{}{{B`{En}}}}}}{cHb{{G`{}{{B`{Hb}}}}}}{{{f{Bf}}}{{An{En}}}}{{{f{Bf}}}{{An{Hb}}}}{{{f{{Fd{c}}}}}{{An{H`}}}Bn}{{{f{{Fd{c}}}}}dBn}{{{f{Hb}}}d}{{{f{{Fd{c}}}}}HbBn}{{{f{{Fd{c}}}}}{{An{f}}}Bn}0{{{f{Hb}}}Ij}{{}Fb}0000{{{f{BhEn}}En}b}{{{f{BhHb}}Hb}b}{{EnEn}En}{{HbHb}Hb}{{{f{En}}En}d}{{{f{Hb}}Hb}d}{ce{}{}}0000{Enc{}}{Hbc{}}{{{f{En}}}d}>?0>{{{f{{Fd{c}}}}}IjBn}{{{f{{Fd{c}}}}}dBn}0{{{f{En}}}{{ABb{En}}}}{{{f{Hb}}}{{ABb{Hb}}}}{{{f{En}}}{{ABd{En}}}}{{{f{Hb}}}{{ABd{Hb}}}}{{}d}{{}{{f{{ABh{ABf}}}}}}{{{Fd{c}}}{{Fd{c}}}Bn}{{{Fd{c}}An}{{Fd{c}}}Bn}{{{f{{Fd{c}}}}{Fd{c}}}{{ABj{c}}}Bn}21{EnEn}{HbHb}{{{f{BhEn}}En}b}{{{f{BhHb}}Hb}b}{{{f{BhEn}}End}b}{{{f{BhHb}}Hbd}b}{{{f{Bh{Fd{c}}}}{An{H`}}}bBn}{{{f{Bh{Fd{c}}}}d}bBn}{{{f{BhHb}}d}b}{{{f{Bh{Fd{c}}}}Hb}bBn}{{{f{Bh{Fd{c}}}}An}bBn}033{{{f{Bh{Fd{c}}}}Ij}bBn}{{{f{BhHb}}Ij}b}{{{Fd{c}}Ij}{{Fd{c}}}Bn}{{{Fd{c}}{An{Ij}}}{{Fd{c}}}Bn}{{EnEn}En}{{HbHb}Hb}>=10{{{f{c}}}e{}{}}000?>{c{{Gb{e}}}{}{}}000000000{{{f{c}}}Mj{}}000043{ce{}{}}0000{AB`AB`}````{{{f{c}}h}b{}}{{{f{{ABl{c}}}}Fb}{{Gh{{ABl{c}}{ABl{c}}}}}Hh}{e{{ABl{c}}}Hh{{G`{}{{B`{{An{{f{c}}}}}}}}}}{e{{ABl{c}}}Hh{{G`{}{{B`{{f{c}}}}}}}}{{ABne}g{}{{G`{}{{B`{c}}}}}{}}0{{{f{Hf}}}{{f{AC`}}}}{{{f{{ABl{c}}}}}{{f{AC`}}}Hh}{{{f{Bh{ABl{c}}}}}{{f{BhAC`}}}Hh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ABl{c}}}}Fb}dHh}{{{f{{ABl{c}}}}}{{ABl{c}}}{HhOd}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{ABl{c}}}}}{{f{ABn}}}Hh}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{{f{Hf}}}}{f{{f{Hf}}}}}d}{{{f{Hf}}{f{Hf}}}d}{{{f{{ABl{c}}}}{f{BhFh}}}Fj{HhACb}}{cc{}}{{FbABn}{{ABl{c}}}Hh}{{{f{{ABl{c}}}}Fb}{{An{{f{c}}}}}Hh}{{}ABn}{{{f{Gf}}{f{{ABl{c}}}}{f{{ABl{c}}}}}{{ABl{c}}}Hh}{{ABn{f{Gf}}cc}{{ABl{e}}}{}Hh}{{{f{Gf}}{f{{ABl{c}}}}e}{{ABl{c}}}Hh{}}{{{f{Gf}}c{f{{ABl{e}}}}}{{ABl{e}}}{}Hh}{{}Fb}{ce{}{}}{{{f{{ABl{c}}}}}eHh{}}{{{f{{ABl{c}}}}Fb}dHh}{{{f{c}}Fb}d{}}1{{{f{{ABl{c}}}}}{{ACf{egACd}}}Hh{}{}}{{{f{{ABl{c}}}}}{{ACf{{f{c}}{ACh{c}}ACd}}}Hh}{{{f{{ABl{c}}}}}FbHh}0`{{{f{Bh{ABl{c}}}}{An{Gf}}}bHh}{{{f{Bh{ABl{c}}}}FbFb}bHh}{{{f{c}}FbFb}e{}{}}01{{{f{{ABl{c}}}}Fb}{{Gh{{A@l{Fl}}{A@l{Fl}}}}}Hh}0{{{f{Hf}}}{{A@l{Hf}}}}{{{f{{ABl{c}}}}}{{A@l{Fl}}}Hh}{{{f{c}}}e{}{}}{g{{Gb{{ABl{c}}e}}}Hh{}{{G`{}{{B`{{Gb{{An{{f{c}}}}e}}}}}}}}{g{{Gb{{ABl{c}}e}}}Hh{}{{G`{}{{B`{{Gb{{f{c}}e}}}}}}}}{{ABng}{{Gb{ie}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}{}}0{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}{{{f{Hf}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ABl{c}}}}}{{An{{f{Gf}}}}}Hh}{{{f{{ABl{c}}}}Fb}{{f{c}}}Hh}0{{{f{{ABl{c}}}}Fb}eHh{}}{{{f{{ABl{c}}}}}{{f{{Jn{{El{c}}}}}}}Hh}{{{f{{ABl{c}}}}}{{ACh{c}}}Hh}{{{f{{ABl{c}}}}}eHh{}}{ce{}{}}{{{ABl{c}}{An{Gf}}}{{ABl{c}}}Hh}{{{f{{ABl{c}}}}{An{Gf}}}{{A@l{Fl}}}Hh}1`{{{f{Bh{ACj{c}}}}}bHh}0{{{f{Bh{ACj{c}}}}{An{c}}}bHh}{{{f{Bh{ACj{c}}}}c}bHh}{{{f{Bh{ACj{c}}}}{f{AC`}}}bHh}{{{f{Bh{ACj{c}}}}{f{AC`}}}{{Af{b}}}Hh}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{ACj{c}}}Hh}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{ACj{c}}}{{ACl{c}}}Hh}{cc{}}{{}Fb}{ce{}{}}{{{f{Bf}}Fb}{{ACj{c}}}Hh}{{{f{Bh{ACj{c}}}}}AdHh}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}4````{{{f{BhACn}}}b}{{{f{BhACn}}{An{{f{AC`}}}}}b}{{{f{BhACn}}{f{AC`}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{AD`}}{f{BhFh}}}Fj}<{{{f{Bf}}Fb}{{A@l{ACn}}}}{{}ADb}{{}ABn}>={{}d}`{{ADdADbABn}b}{{{f{BhACn}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ADh{}{{ADf{c}}}}}}g}{{ADh{}{{ADf{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{ADj}}{f{Cb}}}ADj}{{{f{ADj}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ADh{}{{ADf{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ADh{}{{ADf{c}}}}}}g}{{ADh{}{{ADf{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{ADl}}Dl}Dn}{{{f{ADl}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{ADn}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AE`}}{f{Df}}}{{Af{Ad}}}}0{{{f{AEb}}}AEb}{{{f{c}}{f{Bhe}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{AEb}}{f{AEb}}}d}{{{f{{AEd{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEf}}}{{Af{Ad}}}}{{{f{AEf}}}{{Af{{Gh{Ad{AEh{In}}}}}}}}`{{{f{AEj}}c}{{Af{AEj}}}{}}{{{f{AEl}}{f{Ff}}}{{Af{{l{c}}}}}Bn}`{{{f{AEb}}{f{BhFh}}}Fj}{cc{}}`{{{f{Bf}}cFb}AEn{}}{{{f{Bf}}Fb}AF`}`{{{f{AFb}}Fb}{{Af{Gn}}}}{{{f{AFb}}Fb}Gn}::{{{f{AEb}}{f{Bhc}}}bAFd}{{}Fb}{ce{}{}}{{{f{AFf}}}{{Af{Ff}}}}{{{f{AFh}}}{{Af{Ff}}}}??{{{f{AFj}}}{{An{c}}}{}}{{{f{AFj}}}{{An{Jl}}}}{{{f{AFl}}}{{An{c}}}{}}2{{{f{AFj}}}{{An{{Gh{cc}}}}}{}}{{{f{ADn}}}{{Af{Fb}}}}{{{f{AFn}}FbFb}{{l{c}}}Bn}{{{f{{AEd{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEf}}}{{Af{{AEh{In}}}}}}{{{f{AFl}}JlLf}{{Af{{An{c}}}}}{}}{{{f{AG`}}}AG`}{{{f{AGb}}{f{Cb}}Lh}{{Af{Ad}}}}{{{f{AGd}}c{An{e}}}{{Af{AGd}}}{{G`{}{{B`{H`}}}}}{}}{{{f{AGd}}ci}{{Af{AGd}}}{{G`{}{{B`{H`}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AGd}}{f{Ff}}{An{c}}}{{Af{AGd}}}{}}{{{f{AGf}}In}{{l{c}}}Bn}{{{f{AGh}}Inc}{{l{e}}}{}Bn}`{{{f{ADl}}d}{{l{c}}}Bn}{{{f{ADl}}Dl}{{l{c}}}Bn}{{{f{AGj}}D`}{{An{Jl}}}}{{{f{AFj}}}{{An{c}}}{}}{{{f{AGl}}{f{c}}}{{Af{AGl}}}Lj}{{{f{AGn}}{f{c}}}AGnLj}{{{f{AH`}}}{{El{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}{{{f{ADn}}}{{Af{ADn}}}}8{ce{}{}}`{{{f{AHb}}{f{Ff}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFl{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AHd{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FlAHf}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFl{{Ch{ff}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFl{{Ch{}{{C`{g}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@l{Fl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@l{Fl}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gb{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gb{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AHh{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gb{{l{m}}i}}}BnBnFlAHj{{Ch{ff}{{C`{{Gb{gi}}}}}}}{{Bn{}{{Fn{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gb{{l{m}}i}}}BnBnFlAHj{{Ch{ff}{{C`{{Gb{gi}}}}}}}{{Bn{}{{Fn{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gb{{l{c}}g}}}BnBnAHj{{Ch{ff}{{C`{{Gb{{A@l{Fl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gb{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gb{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gb{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gb{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gb{{l{k}}g}}}Bn{FlAHf}AHj{{Ch{f}{{C`{{Gb{eg}}}}}}}{{Bn{}{{Fn{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AHl{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAHlBn}{{{f{{l{c}}}}g}{{l{i}}}BnFl{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}{{{l{c}}g}{{l{i}}}BnFl{{Ch{}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FlAHf}{{Ch{f}{{C`{e}}}}}{{Bn{}{{Fn{e}}}}}}0{{{f{{l{c}}}}}Fbn}0{{IjIj}Ij}{{{f{Dn}}H`}{{Af{b}}}}{{{f{{AHn{H`}}}}H`}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAI`d}{{El{H`}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AI`}}}AI`}{{{f{c}}{f{Bhe}}}b{}{}}{{}AI`}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{AI`}}{f{AI`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AI`}}{f{BhFh}}}Fj}{cc{}}{{{f{AI`}}{f{Bhc}}}bAFd}{{}Fb}{ce{}{}}{{{f{{Db{f}}}}cH`e}{{El{H`}}}{{Bd{}{{B`{An}}}}}{{Cb{fFbf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}4`{{Fb{f{Bh{El{d}}}}}b}```{{{f{AIb}}FbFb}AIb}0{{Fb{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AId{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIf}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIh}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AIh}}}}{{{f{Ad}}}{{Af{Ej}}}}{{{f{{Db{Ad}}}}}{{Af{AIf}}}}{{{f{{Db{Ad}}}}}{{Af{AIh}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}Dl}{{}E`}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0``{Fbb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFh}}}Fj}{{{f{E`}}{f{BhFh}}}Fj}{{{f{E`}}}Dl}{cc{}}{{{f{Dl}}}E`}1{{{f{Dl}}{f{Bhc}}}bAFd}{{{f{E`}}{f{Bhc}}}bAFd}{{}Fb}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AIb}}FbFb}AIb}0{{{f{c}}}e{}{}}0{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{G`{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AIjIn}00{{}d}>>0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{I`}}{f{I`}}}c{}}{{FfFf}c{}}{{{f{Ff}}{f{Ff}}}c{}}{{{f{Mf}}{f{Mf}}}c{}}{{MfMf}c{}}{{{f{Mf}}{f{Bf}}}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{{f{Gn}}{f{Gn}}}Gn}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIl}}}{}}000000{{{f{Mf}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ff}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Ff}}{f{Aj}}}Ad}{{{f{Mf}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{ACl{c}}}}{f{Aj}}}AdHh}{{{f{Ff}}}d}{{{f{Ff}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Mf}}c}Mf{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AIn{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AIn{{Db{D`}}}}}}}}}}Cd}}{{{f{{ACl{c}}}}e}{{ACl{c}}}Hh{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AJ`}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AJb}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Ff}}{f{Cb}}}Ff}{{{f{Mf}}{f{Cb}}}Mf}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Ff}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mf}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mf}}c}Mf{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Mf}}c}Mf{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Ff}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Mf}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{ACl{c}}}}g{f{Bh{Db{e}}}}}bHh{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Ff}}c}Ff{{Cb{d}{{C`{d}}}}Cd}}{{{f{Mf}}c}Mf{{Cb{{f{Bf}}}{{C`{{AIn{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AIn{{Db{D`}}}}}}}}Cd}}{{{f{{ACl{c}}}}e}{{ACl{c}}}Hh{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Ff}}Dl}Dn}{{{f{Mf}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AIh}}Dl}Dn}{{{f{Ff}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Mf}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AIh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Ff}}}{{Af{Dn}}}}{{{f{Mf}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{ACl{c}}}}}{{Af{Dn}}}Hh}{eAJd{}{{G`{}{{B`{c}}}}}}0{{ABne}AJf{}{{G`{}{{B`{c}}}}}}0{{{f{Jj}}}Gn}{{{f{Mf}}}Eb}{{{f{Gn}}}Gn}{{{f{Df}}}{{f{Df}}}}{{{f{L`}}}{{f{Df}}}}{{{f{AJh}}}{{f{Df}}}}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}}{{An{{f{{Db{c}}}}}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{Ff}}{f{Ff}}}c{}}{{FfFf}c{}}0101{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@l{Df}}}}{{{f{AKd}}{f{AKd}}c}{{Af{AKd}}}AKf}{{{f{AKh}}{f{Df}}}{{Af{Ad}}}}{{{f{I`}}{f{Df}}}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Ff}}{f{Df}}}{{Af{Ad}}}}{{{f{Mf}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AIh}}{f{Df}}}{{Af{Ad}}}}{{{f{Gn}}{f{Df}}}Gn}{{{f{Df}}Df}Df}65432`{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIl}}}{}}0000{{{f{AJ`}}{f{Ad}}}{{Af{Ad}}}}{{{f{AJb}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AKj{ce}}}}}{{AKj{ce}}}BnBn}{{{f{Jj}}}Jj}{{{f{AKl}}}AKl}{{{f{Gn}}}Gn}{{{f{AKn}}}AKn}{{{f{Df}}}Df}{{{f{L`}}}L`}{{{f{AL`}}}AL`}{{{f{ALb}}}ALb}{{{f{ALd}}}ALd}{{{f{Kf}}}Kf}{{{f{Kj}}}Kj}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{Kn}}}Kn}{{{f{Kh}}}Kh}{{{f{Cj}}}Cj}{{{f{Cl}}}Cl}{{{f{ALj}}}ALj}{{{f{ALl}}}ALl}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{ALn}}}ALn}{{{f{Al}}}Al}{{{f{AM`}}}AM`}{{{f{AMb}}}AMb}{{{f{AMd}}}AMd}{{{f{AMf}}}AMf}{{{f{ABn}}}ABn}{{{f{AMh}}}AMh}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{BhL`}}Df}b}{AMje{}{{AJd{c}}AHf}}0{{AMjABn}e{}{{AJf{c}}AHf}}0{{{f{Df}}}d}00{AMlDf}{{{f{L`}}}{{f{Df}}}}{{}Gn}{{}AKn}{{}Df}{{}ABn}{Fb{{f{c}}}{}}{{{f{{AKj{ce}}}}}{{f{g}}}BnBn{}}1111111111111111111111111111111111{{{f{Bh{AKj{ce}}}}}{{f{Bhg}}}BnBn{}}{Fb{{f{Bhc}}}{}}0000000000000000000000000000000000{{{f{I`}}{f{I`}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIl}}}{}}000000{Fbb}0000000000000000000000000000000000{{{f{AKh}}}{{f{Df}}}}{{{f{I`}}}{{f{Df}}}}{{{f{Jj}}}{{f{Df}}}}{{{f{Gn}}}Df}`{{{f{Gn}}{f{Gn}}}d}{{{f{AKn}}{f{AKn}}}d}{{{f{Df}}{f{ABn}}}d}{{{f{Df}}{f{Df}}}d}{{{f{L`}}{f{L`}}}d}{{{f{AL`}}{f{AL`}}}d}{{{f{ABn}}{f{ABn}}}d}{{{f{AMh}}{f{AMh}}}d}{{{f{Gn}}{f{Gn}}d}d}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}542310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gh{Ad{AEh{In}}}}}}}}{{{f{{AKj{ce}}}}}L`BnBn}{{{f{Ff}}d}{{Af{Ff}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Ff}}}{{Af{Dj}}}}{{{f{Ff}}{f{Ff}}}{{Af{{l{Al}}}}}}{{{f{Mf}}{f{Ff}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Ff}}}{{Af{{l{Cn}}}}}}{{{f{AIh}}{f{Ff}}}{{Af{AIh}}}}{{{f{{ACl{c}}}}{f{Ff}}}{{Af{{l{{Hd{c}}}}}}}Hh}{{AKf{f{AMn}}{f{AMn}}}{{Af{AMn}}}}{{{f{Dj}}{f{BhFh}}}Fj}{{{f{Mf}}{f{BhFh}}}Fj}{{{f{Eb}}{f{BhFh}}}Fj}{{{f{{ACl{c}}}}{f{BhFh}}}FjHh}{{{f{AKl}}{f{BhFh}}}Fj}{{{f{Gn}}{f{BhFh}}}Fj}0{{{f{AKn}}{f{BhFh}}}Fj}{{{f{Df}}{f{BhFh}}}Fj}0{{{f{L`}}{f{BhFh}}}Fj}{{{f{AL`}}{f{BhFh}}}Fj}0{{{f{ABn}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{AMh}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{cGnANb}{{{f{{Db{D`}}}}}Gn}{{{f{Bf}}}Gn}{dGn}{{{An{c}}}Gn{{ANd{Gn}}}}55{{{f{Gn}}}Df}{{{f{ABn}}}Df}7{GnDf}8{{{f{ANf}}}L`}{{{f{Gn}}}L`}:{{{f{AMh}}}AL`};;;;;;;;;;;;;;;;;;;;;{ANhABn}{ANjABn}={{{f{ABn}}d}Df}{cDj{{G`{}{{B`{{An{{A@l{Fl}}}}}}}}}}{eDj{{ANl{Ad}}}{{G`{}{{B`{c}}}}}}{cDj{{G`{}{{B`{{An{Ad}}}}}}}}{cFf{{G`{}{{B`{d}}}}}}{eMf{{K`{Bf}}}{{G`{}{{B`{{An{c}}}}}}}}{eMf{{`{Bf}}}{{G`{}{{B`{c}}}}}}{eEb{{K`{{Db{D`}}}}}{{G`{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}}{{G`{}{{B`{c}}}}}}{e{{ACl{c}}}Hh{{G`{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Mf{{K`{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{K`{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{ACl{c}}}Hh{{Bd{}{{B`{{An{c}}}}}}}}:;98765{eAIh{{K`{{Db{D`}}}}}{{G`{}{{B`{{An{c}}}}}}}}{eAIh{{`{{Db{D`}}}}}{{G`{}{{B`{c}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Mf{{K`{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{K`{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{ACl{c}}}Hh{{Bd{}{{B`{c}}}}}}{{ANnDf}L`}{cDj{{Gj{}{{B`{{An{Ad}}}}}}}}{cFf{{Gj{}{{B`{{An{d}}}}}}}}{cFf{{Gj{}{{B`{d}}}}}}{eMf{{`{Bf}}IbIdAO`}{{Gj{}{{B`{c}}}}}}{eMf{{K`{Bf}}IbId}{{Gj{}{{B`{{An{c}}}}}}}}{eEb{{K`{{Db{D`}}}}IbId}{{Gj{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}IbIdAO`}{{Gj{}{{B`{c}}}}}}{{c{f{Bf}}Df}Dj{{Gj{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Ff}{{{f{Bf}}{f{{Db{c}}}}}Mf{{K`{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{K`{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ACl{c}}}Hh}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Ff}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Mf{{K`{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{K`{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{ACl{c}}}Hh}{cFf{{Gl{}{{B`{{An{d}}}}}}}}{{{El{c}}ABn}{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{El{c}}ABn}{{AHf{}{{AJj{e}}{AJl{c}}{AJn{g}}}}}{AK`{AKb{e}}}Od{{F`{}{{B`{e}}}}GlIbId}}{{FbcABn}{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Bf}}{f{Ad}}Fb}Dj}{{{f{Bf}}dFb}Ff}{{{f{Bf}}{f{Bf}}Fb}Mf}{{{f{Bf}}{f{{Db{D`}}}}Fb}Eb}{{{f{Bf}}{f{{Db{D`}}}}Fb}AIh}{{{f{Bf}}cFb}{{ACl{c}}}Hh}{{FbABn}{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Bf}}Fb}Dj}{{{f{Bf}}Fb}Ff}{{{f{Bf}}Fb}Mf}{{{f{Bf}}Fb}Eb}{{{f{Bf}}Fb}AIh}{{{f{Bf}}Fb}{{ACl{c}}}Hh}{{{f{Bf}}Fb{f{Df}}}Dj}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}Fb}{{An{c}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{I`}}Fb}{{Af{Gn}}}}{{{f{AKh}}Fb}{{Af{Gn}}}}0{{{f{Dj}}Fb}{{Af{Gn}}}}{{{f{Ff}}Fb}{{Af{Gn}}}}{{{f{Mf}}Fb}{{Af{Gn}}}}{{{f{Eb}}Fb}{{Af{Gn}}}}{{{f{AIh}}Fb}{{Af{Gn}}}}{{{f{{ACl{c}}}}Fb}{{Af{Gn}}}Hh}{{{f{I`}}Fb}Gn}{{{f{AKh}}Fb}Gn}0{{{f{Dj}}Fb}Gn}{{{f{Ff}}Fb}Gn}{{{f{Mf}}Fb}Gn}{{{f{Eb}}Fb}Gn}{{{f{AIh}}Fb}Gn}{{{f{{ACl{c}}}}Fb}GnHh}{{{f{Dj}}Fb}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{ACl{c}}}}Fb}{{An{{f{Hf}}}}}Hh}0{{{f{Gn}}}{{An{{f{Bf}}}}}}{{{f{AOb}}Fb}Gn}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}Fb}{{An{c}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Dj}}}Fb}{{{f{Mf}}}Fb}{{{f{AIh}}}Fb}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Ff}}dd}{{Af{Aj}}}}{{{f{Mf}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AIh}}dd}{{Af{Aj}}}}{{{f{{ACl{c}}}}dd}{{Af{Aj}}}Hh}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}542301{{{f{Gn}}{f{Bhc}}}bAFd}{{{f{AKn}}{f{Bhc}}}bAFd}{{{f{Df}}{f{Bhc}}}bAFd}{{{f{L`}}{f{Bhc}}}bAFd}{{{f{AL`}}{f{Bhc}}}bAFd}{{{f{ABn}}{f{Bhc}}}bAFd}{{{f{AMh}}{f{Bhc}}}bAFd}{{{f{Gn}}{f{Bhc}}d}bAFd}{{}Fb}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ABn}}}{{An{{f{ABn}}}}}}{ce{}{}}0000000000000000000000000000000000{{AOd{An{Fb}}Fb}{{Af{I`}}}}{{AOd{An{Fb}}Fb}I`}{{{f{Dj}}}c{}}{{{f{Ff}}}c{}}{{{f{Mf}}}c{}}{{{f{Eb}}}c{}}{{{f{AIh}}}c{}}{{{f{{ACl{c}}}}}eHh{}}{I`Ad}{AOdAd}{{Jj{f{Bf}}}Ad}{Gn{{Af{Gn}}}}{{{f{Df}}}d}00{{{f{Gn}}}d}111010111110101011110111101{{{f{ABn}}}d}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}}{{ACf{cgACd}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Dj}}}{{`{{Bd{}{{B`{In}}}}}}}}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}}{{An{c}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}542310{{{f{AKd}}{f{AKd}}}{{Af{{Gh{AKdAKd}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{AKn}}}{{An{Df}}}}{{{f{Ff}}}{{An{d}}}}{{{f{Ff}}}Jj}{{{f{Mf}}}Jj}{{{f{Eb}}}Jj}{{{f{Ff}}}{{An{Jl}}}}{{{f{AJ`}}}{{An{Hj}}}}{{{f{AJb}}}{{An{Jl}}}}{{{f{AJ`}}}Jj}{{{f{AJb}}}Jj}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}FbFb}Ff}{{{f{I`}}{f{I`}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIl}}}{}}000000{{{f{Mf}}}{{Af{Fb}}}}{{{f{Eb}}}{{Af{Fb}}}}{{{f{L`}}}{{f{ANn}}}}`{{}c{}}00{{{f{Bf}}c}Mf{{K`{{Db{{AIn{Bf}}}}}}}}{{{f{Bf}}c}Mf{{K`{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Mf{{K`{{Db{{An{{AIn{Bf}}}}}}}}}}{{{f{Bf}}c}Mf{{K`{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Eb{{K`{{Db{{AIn{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{K`{{Db{{An{{AIn{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{K`{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{K`{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}e}{{ACl{c}}}Hh{{K`{{Db{{An{c}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ACl{c}}}Hh}{{DfGn}Jj}{{{f{Bf}}Df}L`}{{{f{Bf}}}{{ACl{c}}}Hh}{{{f{Dj}}FbFb}Dj}{{{f{Ff}}FbFb}Ff}{{{f{Mf}}FbFb}Mf}{{{f{Eb}}FbFb}Eb}{{{f{AIh}}FbFb}AIh}{{{f{{ACl{c}}}}FbFb}{{ACl{c}}}Hh}{{{f{Bf}}{El{c}}}{{ACl{c}}}Hh}{{{f{Bf}}{El{c}}Gf}{{ACl{c}}}Hh}{{{f{Ff}}}c{}}{Ffc{}}{{{f{Dj}}{f{Dj}}}Ff}{{{f{Ff}}{f{Ff}}}Ff}{{{f{Mf}}{f{Bf}}}Ff}{{{f{Mf}}{f{Mf}}}Ff}{{{f{Eb}}{f{Eb}}}Ff}{{{f{Eb}}{f{{Db{D`}}}}}Ff}543201{{{f{Dj}}}{{Af{{AEh{In}}}}}}{{{f{Dj}}}{{`{{Lb{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mf}}}{{`{{Lb{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mf}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{Gn}}{f{Gn}}}{{An{AOf}}}}{{{f{AL`}}{f{AL`}}}{{An{AOf}}}}{{{f{I`}}}{{An{Fb}}}}{{{f{{AKj{AM`Hn}}}}}{{An{Fb}}}}{{{f{AJ`}}JlLf}{{Af{{An{Hj}}}}}}{{{f{AJb}}JlLf}{{Af{{An{Jl}}}}}}{{{f{AJ`}}JlLf}{{Af{Jj}}}}{{{f{AJb}}JlLf}{{Af{Jj}}}}{{{f{Bf}}FbJl}{{Af{Ff}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIl}}}{}}000000{{{f{Dj}}}Dj}{{{f{Ff}}}Ff}{{{f{Mf}}}Mf}{{{f{Eb}}}Eb}{{{f{AIh}}}AIh}{{{f{{ACl{c}}}}}{{ACl{c}}}Hh}`{{{f{I`}}}Fb}{{{f{{AKj{AM`Hn}}}}}Fb}{{{f{Ff}}c{An{d}}}{{Af{Ff}}}{{G`{}{{B`{H`}}}}}}{{{f{Mf}}c{An{{f{Bf}}}}}{{Af{Mf}}}{{G`{}{{B`{H`}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{G`{}{{B`{H`}}}}}}{{{f{Ff}}ce}{{Af{Ff}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Mf}}ce}{{Af{Mf}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{G`{}{{B`{H`}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{El{D`}}}}}}}}}}{{{f{Ff}}{f{Ff}}{An{d}}}{{Af{Ff}}}}{{{f{Mf}}{f{Ff}}{An{{f{Bf}}}}}{{Af{Mf}}}}{{{f{Eb}}{f{Ff}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhL`}}ANn}b}{{{f{Dj}}In}Dj}{{{f{Ff}}In}Ff}{{{f{Mf}}In}Mf}{{{f{Eb}}In}Eb}{{{f{AIh}}In}AIh}{{{f{{ACl{c}}}}In}{{ACl{c}}}Hh}{{{f{Dj}}In{An{{f{Ad}}}}}Dj}{{{f{Ff}}In{An{d}}}Ff}{{{f{Mf}}In{An{{f{Bf}}}}}Mf}{{{f{Eb}}In{An{{f{{Db{D`}}}}}}}Eb}{{{f{AIh}}In{An{{f{{Db{D`}}}}}}}AIh}{{{f{{ACl{c}}}}In{An{{Hd{c}}}}}{{l{{Hd{c}}}}}Hh}{{{f{Ff}}d}Ff}{{{f{Mf}}d}Mf}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AIh}}d}AIh}{{{f{Ff}}Dl}{{l{Al}}}}{{{f{Mf}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AIh}}Dl}AIh}{{{f{AJ`}}D`}Jj}{{{f{AJb}}D`}Jj}{{{f{Gn}}{f{Df}}}{{An{Gn}}}}`{{{f{I`}}{f{I`}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gb{AdAIl}}}{}}000000{{{f{Ff}}}{{An{H`}}}}{{{f{Ff}}}Jj}{{{f{Eb}}}Jj}{{{f{Mf}}{f{c}}}Mf{{K`{{Db{H`}}}}Lj}}{{{f{Mf}}{f{Dn}}}Mf}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Eb}}{f{c}}}Eb{{K`{{Db{H`}}}}Lj}}{{{f{Df}}d}ABn}{{{f{L`}}d}ANf}{AL`AMh}{{{f{Df}}{f{Bf}}d}ANf}{AL`{{f{Bf}}}}{{{f{Mf}}Fb}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ABn}}}{{f{ABn}}}}{{{f{Dj}}}{{Af{Mb}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ABn}}}AOh}{{{f{c}}}Dh{}}00{{{f{Eb}}}Mf}{{{f{Gn}}{f{Gn}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gb{AJde}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}}0{{ABng}{{Gb{AJfe}}}{}{}{{G`{}{{B`{{Gb{ce}}}}}}}}0{AMj{{Gb{eg}}}{}{{AJd{c}}AHf}{}}0{{AMjABn}{{Gb{eg}}}{}{{AJf{c}}AHf}{}}0{{{f{Gn}}}{{Af{c}}}Jh}{c{{Gb{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{Gn}}{f{Df}}}{{Af{Gn}}}}{{{f{Df}}d}{{Af{ABn}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Mj{}}0000000000000000000000000000000000{{{f{ABn}}}ABn}{{{f{Ff}}}{{Af{Ff}}}}{{{f{Mf}}}{{Af{Mf}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{ACl{c}}}}}{{Af{{l{{Hd{c}}}}}}}Hh}{{{f{BhJj}}Gn}b}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}Fb}cOd{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Jj}}}{{f{Gn}}}}1{{{f{Df}}Gn}d}{{{f{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}}}gOd{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{AJ`}}D`}Jj}{{{f{AJb}}D`}Jj}{{{f{Ff}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOj}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOl}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AMn}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOn}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{B@`}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{B@b}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{B@d}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{B@f}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AOd}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AJ`}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AJb}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{Mf}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{Eb}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{AIh}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}{{{f{{ACl{c}}}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}Hh}{{{f{Ff}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOj}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOl}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AMn}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOn}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{B@`}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{B@b}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{B@d}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{B@f}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AOd}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AJ`}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AJb}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{Mf}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{Eb}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{AIh}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}{{{f{{ACl{c}}}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}Hh}{ce{}{}}0000000000000000000000000000000000{Fbc{}}0{Fb{{B@h{ce}}}{}{}}{{{f{{Db{Ml}}}}e}c{}{{Mn{{f{Dn}}}{{C`{c}}}}}}{{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}{An{Gf}}}{{AHf{}{{AJj{c}}{AJl{e}}{AJn{g}}}}}Od{AK`{AKb{c}}}{{F`{}{{B`{c}}}}GlIbId}}{{{f{Df}}}Gn}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AKd}}}d}{{AKdd}AKd}{{{f{BhB@j}}{An{{f{Bf}}}}}b}{{{f{BhAKd}}{f{AKd}}}{{Af{b}}}}{{{f{BhB@j}}}b}{{{f{BhB@j}}{f{Bf}}}b}{{{f{AKd}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AKd}}{f{AKd}}c}{{Af{AKd}}}AKf}{{{f{AKd}}{f{Df}}}{{Af{Ad}}}}{{{f{AKd}}}AKd}{{{f{c}}{f{Bhe}}}b{}{}}{{}B@l}{Fb{{f{c}}}{}}000{Fb{{f{Bhc}}}{}}000{{B@jc}AKd{{G`{}{{B`{{An{{f{Bf}}}}}}}}}}{Fbb}000{{{f{AKd}}}{{f{Df}}}}{{{f{AKd}}{f{Mf}}}c{}}{{{f{AKd}}{f{AKd}}}c{}}{{{f{AKd}}{f{Bf}}}c{}}120{{AKf{f{AMn}}{f{AMn}}}{{Af{AMn}}}}{B@jAKd}{B@l{{Jn{B@n}}}}{cc{}}000{{AMn{Jn{B@n}}dBA`}AKd}{{AMnBA`}AKd}{{{f{Mf}}{f{AMl}}BA`}{{Af{AKd}}}}{{{f{Bf}}dFbBA`}AKd}{{{f{AKd}}Fb}{{Af{Gn}}}}{{{f{AKd}}Fb}Gn}{{{f{AKd}}}{{f{{Jn{B@n}}}}}}<;=<;={{}Fb}000{ce{}{}}0000{AKdAd}{{{f{AKd}}}d}0{{{f{AKd}}}BAb}{{{f{AKd}}}Fb}{{{f{AKd}}{f{Mf}}}c{}}{{{f{AKd}}{f{Bf}}}c{}}{{{f{AKd}}{f{AKd}}}c{}}201{{{f{AKd}}{f{AKd}}}{{Af{{Gh{AKdAKd}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{AKd}}}Jj}{{{f{BhB@l}}{f{{Jn{B@n}}}}}{{Af{b}}}}1{{{f{AKd}}}{{Af{Fb}}}}{{{f{AKd}}}{{f{Bf}}}}{{{f{Bf}}FbBA`}B@j}{{{Jn{B@n}}}B@l}{{{f{BhBAb}}}{{An{c}}}{}}9:;9:;<{{{f{AKd}}}{{f{AMn}}}}{{{f{BhB@j}}{f{Bf}}}{{Gh{Kbd}}}}`{{{f{BAb}}}{{Gh{Fb{An{Fb}}}}}}{{{f{AKd}}d}AKd}{{{f{AKd}}Dl}AKd}`{{{f{AKd}}dd}Ej}{{{f{AKd}}{f{AMl}}BAd}AKd}{{{f{AKd}}}{{Af{AKd}}}}{{{f{AKd}}}AKd}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0000000{{{f{c}}}Mj{}}0004{{{f{AKd}}}d}{{{f{AKd}}}{{Af{BAf}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AMlB@n}{{{f{BA`}}}BA`}{{{f{B@n}}}B@n}{{{f{c}}{f{Bhe}}}b{}{}}0{{}BA`}{{}B@n}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{Fbb}0{{{f{BA`}}{f{BA`}}}d}{{{f{B@n}}{f{Bf}}}{{An{Kb}}}}{{{f{BA`}}{f{BhFh}}}Fj}{{{f{B@n}}{f{BhFh}}}Fj}{cc{}}0{{{f{B@n}}Kb}{{f{Bf}}}}{{{f{B@n}}}{{f{AMl}}}}{{{f{B@n}}Kb}{{An{{f{Bf}}}}}}{{}Fb}0{ce{}{}}0{{{f{B@n}}}d}0{{{f{B@n}}}Fb}{{{f{B@n}}{f{B@n}}}d}{{{f{c}}}e{}{}}0{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BAh}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{{}b}{Fbb}{{{f{BhBAh}}}b}2{cc{}}6{{}Fb}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BAj}}}{{f{Bf}}}}<<;;`99{{{f{BAj}}}f}9977`{{{f{BAl}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{BAj}}{f{BhFh}}}{{Gb{bAN`}}}}077{cBAj{{ANd{{AIn{Bf}}}}}}{{}{{Jb{{f{Bf}}BAl}{{C`{b}}}}}}8877{cAIlAHj}````{{{Jb{{f{Bf}}BAl}{{C`{b}}}}}b}{cAIlBAn}{{{f{c}}}Dh{}}{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BB`}}}BB`}{{{f{c}}{f{Bhe}}}b{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BhFh}}BBbFb}Fj}{cc{}}{{}BBd}{{}BB`}{{}{{An{Fb}}}}{{}Dh}{{}d}{{}Fb}{ce{}{}}{{{An{BBd}}}b}{BB`b}{{{An{Fb}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBAf}}{El{Ad}}{f{BBf}}}{{Af{b}}}}{{{f{BAf}}{f{Cb}}}{{El{Ad}}}}0{{{f{BAf}}{f{Ff}}}{{Af{BAf}}}}{{{f{BAf}}{f{{Db{ANn}}}}}{{Af{BAf}}}}0{{{f{BAf}}InFb}BAf}{{BAf{f{Ad}}}c{}}{{{f{BAf}}{f{BAf}}}c{}}{{{f{BAf}}{f{Ad}}}c{}}{{{f{BhBAf}}}{{f{BhBAf}}}}{{{f{BhBAf}}{f{Bf}}e}{{Af{{f{BhBAf}}}}}BBh{{Mn{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBAf}}Fbe}{{Af{{f{BhBAf}}}}}BBh{{Mn{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BAf}}}BAf}{{{f{BBj}}}BBj}{{{f{BBl}}}BBl}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{BAf}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BAf}}e}{{Af{{El{{f{Ad}}}}}}}{{K`{Bf}}}{{G`{}{{B`{c}}}}}}{{}BBl}{{}BAf}{Fb{{f{c}}}{}}0000{Fb{{f{Bhc}}}{}}0000{{{f{BAf}}{f{BAf}}}c{}}{{BAf{f{Ad}}}c{}}{{{f{BAf}}{f{Ad}}}c{}}{Fbb}0000{{{f{BAf}}{f{Bf}}}{{Af{BAf}}}}{{{f{BhBAf}}{f{Bf}}}{{Af{Ad}}}}{{{f{BAf}}{f{{Db{c}}}}}BAf{{K`{Bf}}}}{{{f{BAf}}{f{{BBn{{f{Bf}}}}}}}BAf}{{{f{BAf}}{An{{f{{Db{c}}}}}}}{{Af{BAf}}}{{K`{Bf}}}}{{{f{BAf}}}{{El{Df}}}}<{{{f{BBl}}{f{BBl}}}d}{{{f{BAf}}{f{BAf}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BAf}}}Fb}`{{{f{BAf}}e}{{Af{BAf}}}{{K`{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BAf}}{El{Ad}}}{{Af{BAf}}}}{{{f{BhBAf}}{f{BAf}}}{{Af{b}}}}{{{f{BAf}}}{{El{L`}}}}{{{f{BAf}}AEb}{{Af{BAf}}}}{{{f{BAf}}{f{Ff}}}{{Af{BAf}}}}{{{f{BBj}}{f{BhFh}}}Fj}{{{f{BBl}}{f{BhFh}}}Fj}{{{f{BAf}}{f{BhFh}}}Fj}0{cc{}}0000{{{f{BC`}}}BAf}{{{f{BBf}}}BAf}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cBAf{{G`{}{{B`{Ad}}}}}}{{{f{{Db{BCb}}}}}{{Af{BAf}}}}{{{f{{Db{BCb}}}}{f{BBf}}}{{Af{BAf}}}}{{c{f{BBf}}}{{Af{BAf}}}{{Bd{}{{B`{{f{BCb}}}}}}}}{{{f{BAf}}Fb}{{An{{El{Gn}}}}}}{{{f{BAf}}{f{Bf}}}{{An{Fb}}}}{{{f{BAf}}}{{El{{f{Bf}}}}}}{{{f{BAf}}}{{El{ANn}}}}{{{f{BAf}}}{{f{{Db{Ad}}}}}}{{{f{BhBAf}}}{{f{Bh{El{Ad}}}}}}{{{f{BAf}}Fb}{{Af{BCb}}}}{{{f{BAf}}Fb{f{BhBCb}}}{{Af{b}}}}{{{f{BAf}}Fb{f{BhBCb}}}b}{{{f{BAf}}}{{An{{Af{Df}}}}}}`{{{f{BAf}}e}{{Af{BCd}}}{{K`{Bf}}}{{G`{}{{B`{c}}}}}}0{{{f{BAf}}{El{Ad}}dd}{{Af{BCd}}}}{{{f{BBl}}{f{Bhc}}}bAFd}{{{f{BhBAf}}{An{Ln}}}{{Af{AOn}}}}{{{f{BAf}}{An{Fb}}}BAf}{{{f{BAf}}}Fb}{{{f{BAf}}{f{{Db{Ad}}}}}{{Af{BAf}}}}{{{f{BhBAf}}{f{{Db{Ad}}}}}{{Af{{f{BhBAf}}}}}}{{{f{BhBAf}}{f{{Db{Ad}}}}}{{f{BhBAf}}}}{{{f{BAf}}{BCf{Fb}}}{{f{c}}}{}}{{{f{BAf}}{BCh{Fb}}}{{f{c}}}{}}{{{f{BAf}}BCj}{{f{c}}}{}}{{{f{BAf}}{Kd{Fb}}}{{f{c}}}{}}{{{f{BAf}}{BCl{Fb}}}{{f{c}}}{}}{{{f{BAf}}{f{Bf}}}{{f{c}}}{}}{{{f{BAf}}{BCn{Fb}}}{{f{c}}}{}}{{{f{BAf}}Fb}{{f{c}}}{}}{{}Fb}0000{{{f{BhBAf}}Fbc}{{Af{{f{BhBAf}}}}}BBh}{ce{}{}}000000{{{f{BAf}}}{{Af{Ff}}}}{{{f{BAf}}}d}1{{{f{BAf}}}{{J`{Ad}}}}{{{f{BAf}}d}BD`}{{{f{BAf}}}BDb}{{{f{BAf}}}{{Af{{An{Ad}}}}}}{{{f{BAf}}BBj}{{Af{{An{Ad}}}}}}{{{f{BAf}}ce}{{Af{BAf}}}{{BDd{ANn}}}{{BDd{ANn}}}}{{{f{BAf}}BDf}{{Af{BAf}}}}3{{{f{BAf}}{f{BAf}}}c{}}{{{f{BAf}}{f{Ad}}}c{}}{{BAf{f{Ad}}}c{}}{{{f{BAf}}}Fb}{{{El{c}}}{{Af{BAf}}}BBh}{{{El{Ad}}}BAf}{{{El{Ad}}}{{Af{BAf}}}}{{{f{BhBD`}}}{{An{c}}}{}}{{{f{BhBDb}}}{{An{c}}}{}}{{{f{BAf}}}BAf}{{{f{BAf}}cd}{{Af{{El{BAf}}}}}{{BDd{Dh}}}}0{{BAfe}{{Af{c}}}{}{{Cb{BAf}{{C`{{Af{c}}}}}}}}{{{f{BhBAf}}e}{{Af{c}}}{}{{Cb{{f{BhBAf}}}{{C`{{Af{c}}}}}}}}{{BAfgc}{{Af{e}}}{}{}{{Cb{BAfc}{{C`{{Af{e}}}}}}}}{{{f{BhBAf}}}{{An{Ad}}}}{{{f{BAf}}{f{BAf}}}d}>=?{{{f{BhBAf}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBAf}}}}}}{{{f{BhBAf}}{f{Bf}}c}{{Af{{f{BhBAf}}}}}BBh}{{{f{BhBAf}}Fbc}{{Af{{f{BhBAf}}}}}BBh}19`{{{f{BAf}}{f{Ad}}dd{An{Hl}}}{{Af{BAf}}}}0{{{f{BAf}}Fbdd{An{Hl}}}{{Af{BAf}}}}{{{f{BAf}}}BBf}{{{f{BAf}}{f{BAf}}}{{Af{b}}}}{{{f{BAf}}e}{{Af{BAf}}}{{K`{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BAf}}Fb}{{An{{f{Ad}}}}}}{{{f{BAf}}c}{{Af{BAf}}}{{BDh{Fb}}}}2{{{f{BAf}}c}{{Af{{El{Ad}}}}}{{BDd{ANn}}}}{{{f{BAf}}e{f{BDj}}}{{Af{BAf}}}{{K`{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BAf}}e{f{BBf}}}{{Af{BAf}}}{{K`{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{BhBAf}}{f{{Db{c}}}}}{{Af{b}}}{{K`{Bf}}}}{{{f{BAf}}}{{Gh{FbFb}}}}{{{f{BAf}}In}BAf}{{{f{BAf}}}d}{{{f{BhBAf}}}b}{{{f{BD`}}}{{Gh{Fb{An{Fb}}}}}}{{{f{BDb}}}{{Gh{Fb{An{Fb}}}}}}{{{f{BAf}}InFb}BAf}0{{{f{BAf}}cE`}{{Af{BAf}}}{{BDd{ANn}}}}{{{f{BhBAf}}cE`}{{Af{{f{BhBAf}}}}}{{BDd{ANn}}}}{{{f{BhBAf}}}{{`{{Bd{}{{B`{BAf}}}}}}}}{{BAfFbd}{{El{BAf}}}}{{{f{BAf}}{f{Ad}}}c{}}{{{f{BAf}}{f{BAf}}}c{}}{{BAf{f{Ad}}}c{}}{{{f{BAf}}BBj}{{Af{{An{Ad}}}}}}{{{f{BAf}}{An{Fb}}}BAf}{{{f{BAf}}{f{Dn}}}{{Af{BAf}}}}{{{f{BAf}}{f{Dn}}}BAf}{{{f{BAf}}{f{Dn}}d}BAf}{{{f{BAf}}BDl}{{Af{Mb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BAf}}FbcE`}{{Af{BAf}}}{{BDd{ANn}}}}{{{f{BhBAf}}{An{{f{Bf}}}}{An{{Mh{Dh{El{Dh}}}}}}}{{Af{BAf}}}}{{{f{BhBAf}}{f{Bf}}e}{{Af{{f{BhBAf}}}}}BBh{{Mn{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBAf}}Fbe}{{Af{{f{BhBAf}}}}}BBh{{Mn{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gb{e}}}{}{}}000{BDn{{Af{BAf}}}}{{{Gh{BE`{f{{Db{ANf}}}}}}}{{Af{BAf}}}}2{{c{f{BBf}}}{{Af{BAf}}}{{Bd{}{{B`{{Af{{f{BCb}}}}}}}}}}{{{f{BAf}}{f{Bf}}}{{Af{Fb}}}}44444{{{f{c}}}Mj{}}0000{{{f{BAf}}{An{{f{{Db{Dh}}}}}}BBl{An{{Gh{InFb}}}}}{{Af{BAf}}}}{{{f{BAf}}d{An{{f{{Db{Dh}}}}}}BBl{An{{Gh{InFb}}}}}{{Af{BAf}}}}1{{{f{BAf}}{f{BAf}}}{{Af{BAf}}}}{{{f{BhBAf}}{f{BAf}}}{{Af{{f{BhBAf}}}}}}{ce{}{}}0000{{{f{BAf}}}Fb}{{{f{BhBAf}}c}{{Af{{f{BhBAf}}}}}BBh}{{{f{BhBAf}}c{f{BBf}}}{{Af{{f{BhBAf}}}}}BBh}{{{f{BhBAf}}Ad}{{f{BhBAf}}}}{{{f{BAf}}{f{Bf}}{An{H`}}}{{Af{BAf}}}}{{{f{BhBAf}}{f{Bf}}{An{H`}}}{{f{BhBAf}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BDf}}}BDf}{{{f{c}}{f{Bhe}}}b{}{}}{{}BDf}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BDf}}{f{BDf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDf}}{f{BhFh}}}Fj}{cc{}}{{{f{BDf}}{f{Bhc}}}bAFd}`{{}Fb}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BCd}}}{{Af{BAf}}}}`{{{f{BEb}}}{{f{{Db{BEd}}}}}}{{{f{BCd}}c}{{Af{BAf}}}{{Ch{BAf}{{C`{{Af{BAf}}}}}}IbId}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BEb}}}BEb}{{{f{Aj}}}Aj}{{{f{BCd}}}BCd}{{{f{BEf}}}BEf}{{{f{c}}{f{Bhe}}}b{}{}}000:{{}BEb}{{}Aj}{Fb{{f{c}}}{}}000{{{f{BEh}}}{{f{c}}}{}}1111{Fb{{f{Bhc}}}{}}0000000`{{BEje}{}{}{{BEl{c}}}}{Fbb}0000{{{f{BhBEb}}}b}111{{{f{BEb}}{f{BEb}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEn}}}H`}{{{f{BEb}}}{{f{{Db{H`}}}}}}{{{f{BCd}}}{{Af{BAf}}}}{{{f{BhBEb}}}{{f{Bh{El{H`}}}}}}{{{f{BEb}}{f{BhFh}}}Fj}{{{f{Aj}}{f{BhFh}}}Fj}{{{f{BCd}}{f{BhFh}}}Fj}{{{f{BEf}}{f{BhFh}}}Fj}0{{{f{Bf}}BEf}Dh}{cc{}}000{{{El{{Gh{{El{H`}}{El{BEd}}}}}}}BEb}{{{El{{El{BF`}}}}}BEb}2{{{El{BF`}}}BEb}{BEbAj}444{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cBEb{{G`{}{{B`{BF`}}}}}}{cBEb{{Gj{}{{B`{BF`}}}}}}{{{f{Aj}}Fb}BEn}{{{f{BCd}}}{{f{Aj}}}}{{{f{BhBCd}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BFb}}dd}{{Af{Aj}}}}0{{{f{BCd}}}{{Af{BAf}}}}{{{f{BhAj}}}{{f{BhBEb}}}}{{}Fb}0000000{ce{}{}}0000000{AjBEb}1{{{f{BEb}}}c{}}{BEbc{}}310{{{f{BEn}}}d}{{{f{Aj}}}d}{{{f{BEb}}}d}{{{f{BEb}}}{{BFf{{BFd{{J`{H`}}}}{J`{BEd}}}}}}{{{f{Aj}}}BFh}{{{f{BCd}}}{{El{Ad}}}}{{{f{BCd}}{An{{Gh{InFb}}}}}{{El{Ad}}}}={{{f{BEn}}}Fb}{{{f{Aj}}}Fb}?????{{{El{H`}}{El{BEd}}d}BEb}{{{f{BAf}}{El{Ad}}Aj{An{{El{Dh}}}}}BCd}{{{f{BhBFh}}}{{An{c}}}{}}{{{f{BhBFh}}Fb}{{An{c}}}{}}{{{f{BCd}}c}{{Af{BAf}}}{{Cb{BAf}{{C`{{Af{BAf}}}}}}IbId}}{{{f{c}}}{}{}}{{{f{Aj}}}BEj}{{{f{BCd}}JlLf}{{Af{BAf}}}}{{BCde}BCd{{K`{Bf}}}{{G`{}{{B`{c}}}}}}{{{f{Aj}}InFb}BEh}{{{f{BhBEb}}}b}{{{f{BhAj}}}b}{{{f{BCd}}D`}{{Af{BAf}}}}{{{f{BCd}}}{{Af{BAf}}}}{Aj{{El{H`}}}}0{BCdAj}{{{f{BhBCd}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gb{e}}}{}{}}000000000000000{{{f{c}}}Mj{}}0000000{AjAj}{{{f{Aj}}}{{f{BEb}}}}{{{f{Aj}}}{{f{BFj}}}};{ce{}{}}0000000`````{{{f{BEb}}c}Ad{{Cb{{Gh{H`{f{BEd}}}}}{{C`{An}}}}IbId}}{{{f{BEb}}c}Ad{{Cb{{Gh{H`{f{BEd}}}}}{{C`{}}}}IbId}}{{{f{{Db{{BFl{H`}}}}}}c}Ad{{Cb{{BFl{H`}}}{{C`{An}}}}IbId}}{{{f{{Db{{BFl{H`}}}}}}c}Ad{{Cb{{BFl{H`}}}{{C`{}}}}IbId}}{{{f{{Db{c}}}}eBFn}{{AHn{c}}}{BG`BGb}{{Bd{}{{B`{{Gh{H`H`}}}}}}Gl}}{{{f{{Db{c}}}}{f{Gf}}eBFn}{{AHn{c}}}{BG`BGb}{{Bd{}{{B`{{Gh{H`H`}}}}}}Gl}}{{{f{{l{c}}}}H`H`}{{l{c}}}Bn}{{{f{BFj}}{f{{Db{Ej}}}}}d}{{{f{BGd}}{f{Aj}}}Ad}{{BGfBGf}BGf}0`{{{f{BGh}}{f{BAf}}{f{Aj}}}{{Af{Ad}}}}{{{f{BGh}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBGj}}Gn}{{An{b}}}}{{{f{BhBGl}}{f{Gn}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BGj}}}BGj}{{{f{BGl}}}BGl}{{{f{BCb}}}BCb}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{{Db{c}}}}}Df{{ANl{Df}}}}{{}BCb}{Fb{{f{c}}}{}}00{Fb{{f{Bhc}}}{}}00{Fbb}00{{{f{BCb}}{f{BCb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCb}}{f{BhFh}}}Fj}{cc{}}{{{Gh{{f{Df}}Fb}}}BGj}{{{Gh{{f{Df}}Fb}}}BGl}22{{eFb}BBf{{ANd{Df}}}{{Bd{}{{B`{{El{{Gh{Dhc}}}}}}}}}}{{}Fb}00{ce{}{}}00{BGjAd}{BGlAd}{{{f{Df}}Fb}BGj}{{{f{Df}}Fb}BGl}{{{El{Gn}}}BCb}{{{f{BhBGj}}Fb}Ad}{{{f{BhBGl}}Fb}Ad}{{{f{{Db{BCb}}}}{An{Fb}}}{{Af{BBf}}}}0{{{f{{Db{BCb}}}}{An{Fb}}}{{Af{{El{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gb{e}}}{}{}}00000{{{f{c}}}Mj{}}00<<<{{{f{{Db{BAf}}}}}{{Af{BAf}}}}0`````{{HlHl}Hl}{{{f{{Db{BAf}}}}{An{Ln}}}{{Af{{Gh{{El{AOn}}Ln}}}}}}{{{f{{BGn{In}}}}Ln{f{Bh{El{Hl}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BH`}{Fb{{f{c}}}{}}0{Fb{{f{Bhc}}}{}}0{Fbb}0{{{f{BH`}}}Hl}{{{f{BHb}}{f{BhFh}}}Fj}{cc{}}0{{{f{BHb}}{f{Bhc}}}bAFd}``{{}Fb}0{ce{}{}}0{{{f{Bh{BHd{BHbce}}}}H`Hl{f{BAf}}gi}b{}BHf{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gb{e}}}{}{}}000{{{f{c}}}Mj{}}0{{{f{BHh}}Ln{f{Bh{El{Hl}}}}}{{Af{b}}}}0{{{f{BHh}}Ln{f{Bh{Db{Hl}}}}}{{Af{b}}}}055{{{f{BhBH`}}{f{{Db{D`}}}}}b}{{{f{BhBH`}}Kl}b}{{{f{BhBH`}}In}b}{{{f{BhBH`}}Kb}b}{{{f{BhBH`}}Hl}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{Jn{ce}}}}}{{f{e}}}{}BHj}{{{f{{Jn{c}}}}}BHl{BHnLj}}{{{f{{Jn{ce}}}}}{}LjBHj}{{{f{{Jn{c}}}}}KlBI`}{{{f{{Jn{ce}}}}}{{f{c}}}LjBHj}{{{Jn{{Db{{BIb{c}}}}e}}}{{Jn{{Db{c}}e}}}{}BHj}{{{Jn{{BIb{c}}e}}}{{Jn{ce}}}{}BHj}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AKd}}{f{AKd}}c}{{Af{AKd}}}AKf}{{{f{{Jn{c}}}}}{{An{{f{AHj}}}}}{AHjLj}}`{{{f{BId}}{f{Ad}}}{{Af{Ad}}}}{{{f{BId}}c}{{Af{Ad}}}Ab}{{{f{Ml}}}Ml}{{{f{BIf}}}BIf}{{{f{{Jn{ce}}}}}{{Jn{ce}}}Lj{BHjOd}}{{{f{Lh}}}Lh}{{{f{BDl}}}BDl}{{{f{ANf}}}ANf}{{{f{BC`}}}BC`}{{{f{Lf}}}Lf}{{{f{BIh}}}BIh}{{{f{BIj}}}BIj}{{{f{BIl}}}BIl}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}AOf{BInLj}BHj}{AMje{}{{AJd{c}}AHf}}0{{AMjABn}e{}{{AJf{c}}AHf}}0{{{f{c}}{f{e}}}AOf{}{}}{{AIlBAj}AIl}{AIlAIl}{{{f{Fl}}{f{ABn}}}{{A@l{Fl}}}}{{{f{ANf}}}{{f{ABn}}}}```{{}b}{cbBHj}{{}{{Jn{Bf}}}}{{}{{Jn{c}}}BJ`}{{}{{Jn{BJb}}}}{{}{{Jn{{Db{c}}}}}{}}{{}Lh}{{}BDl}{{}ANf}{{}BC`}{{}Lf}`{Fb{{f{c}}}{}}000{{{f{{Jn{ce}}}}}{{f{c}}}LjBHj}111111111{Fb{{f{Bhc}}}{}}000000000000{{{f{{Jn{c}}}}}{{f{Bf}}}{AHjLj}}`{{{Jn{AC`c}}}{{Gb{{Jn{ec}}{Jn{AC`c}}}}}BHj{AC`IbId}}{{{Jn{AC`c}}}{{Jn{ec}}}BHj{AC`IbId}}{{{f{{Jn{ce}}}}}{{BJd{ce}}}Lj{OdBHj}}{Fbb}000{{{f{Bh{Jn{ce}}}}}bLjBHj}111111111{{{f{Ml}}{f{Ml}}}d}{{{f{{Jn{BJf}}}}{f{BJf}}}d}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BJhLj}BHj}{{{f{{Jn{Fl}}}}{f{Fl}}}d}{{{f{Lh}}{f{Lh}}}d}{{{f{BDl}}{f{BDl}}}d}{{{f{ANf}}{f{ANf}}}d}{{{f{BC`}}{f{BC`}}}d}{{{f{Lf}}{f{Lf}}}d}{{{f{BIl}}{f{BIl}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BIf{{Gh{KbKb}}}}`{{BC`c}BC`{{Cb{Fb{f{ANf}}}{{C`{d}}}}}}{{AKf{f{AMn}}{f{AMn}}}{{Af{AMn}}}}{{{f{Bh{Jn{ABf}}}}}{{Gb{bBJj}}}}{{{f{AIl}}{f{BhFh}}}{{Gb{bAN`}}}}0{{{f{Ml}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{BIf}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{{Jn{ce}}}}{f{BhFh}}}{{Gb{bAN`}}}{BAnLj}BHj}{{{f{{Jn{ce}}}}{f{BhFh}}}{{Gb{bAN`}}}{ACbLj}BHj}{{{f{{Jn{ce}}}}{f{BhFh}}}{{Gb{bAN`}}}LjBHj}{{{f{Lh}}{f{BhFh}}}Fj}{{{f{BDl}}{f{BhFh}}}Fj}{{{f{ANf}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{BC`}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{Lf}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{BIh}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{BIj}}{f{BhFh}}}{{Gb{bAN`}}}}{{{f{BIl}}{f{BhFh}}}{{Gb{bAN`}}}}`{BJlAIl}{BJjAIl}{cc{}}{BJnAIl}{BK`AIl}2{KbMl}3{{{BFl{c}}}{{Jn{{Db{c}}}}}{}}4{{{AIn{c}}}{{Jn{c}}}{BKbLj}}{{{f{BKd}}}{{Jn{BKd}}}}{{{f{Bf}}}{{Jn{Bf}}}}{{{El{ce}}}{{Jn{{Db{c}}e}}}{}{BHjOd}}{Dh{{Jn{Bf}}}}{{{f{{Db{c}}}}}{{Jn{{Db{c}}}}}Od}{c{{Jn{c}}}{}}{BKf{{Jn{BJb}}}}{{{A@l{ce}}}{{Jn{ce}}}LjBHj}{{{f{BKh}}}{{Jn{BKh}}}}{{{f{BJb}}}{{Jn{BJb}}}}{BKj{{Jn{BKd}}}}{{{Jn{Bf}}}{{Jn{{Db{D`}}}}}}{BKl{{Jn{BKh}}}}{BKnc{}}{cc{}}0000{{{El{ANf}}}BC`}1111{{c{An{Gf}}}BL`{}}{{{BLb{In}}{BLb{D`}}{An{Gf}}}BLd}{{{BLb{In}}{BLb{D`}}{An{Gf}}}BLf}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{e{{Jn{{Db{c}}}}}{}{{G`{}{{B`{c}}}}}}{{gFb}{{BLh{In}}}K`{{G`{}{{B`{{An{c}}}}}}}{{G`{}{{B`{{An{e}}}}}}}}0{e{{BLh{In}}}{{G`{}{{B`{{An{d}}}}}}}{{G`{}{{B`{{An{c}}}}}}}}{{gABn}{{BLh{In}}}BGb{{G`{}{{B`{{An{c}}}}}}}{{G`{}{{B`{{An{e}}}}}}}}2{e{{Jn{{Db{c}}}}}Ib{{Gj{}{{B`{c}}}}}}{{}{{Jn{c}}}Lj}{c{{Jn{ec}}}BHjLj}{{{f{Bf}}}{{Gb{BLj}}}}{{{f{Bf}}c}BLl{}}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BLnLj}BHj}{{{f{Bh{Jn{ce}}}}}{{An{{f{Bhc}}}}}LjBHj}{{{f{Bh{Jn{ce}}}}}{{f{Bhc}}}LjBHj}{{{f{BC`}}}{{El{{f{Bf}}}}}}{{{f{Ej}}Fb}Gn}4{{{f{BM`}}}d}{{{f{{Jn{ce}}}}{f{Bhg}}}b{BMbLj}BHjAFd}{{{f{BDl}}{f{Bhc}}}bAFd}{{{f{ANf}}{f{Bhc}}}bAFd}{{{f{Lf}}{f{Bhc}}}bAFd}{{{f{BIl}}{f{Bhc}}}bAFd}{{{f{Ml}}}Kb}{{}b}{cb{OdBHj}}{{{f{BC`}}{f{Bf}}}{{An{Fb}}}}{{{f{{Db{Kb}}}}}{{`{{Bd{}{{B`{Fb}}}}}}}}{{}Fb}000000000000`{{{f{BhBIf}}}{{f{BhHl}}}}`{ce{}{}}000000000000{{{Jn{ce}}}{{An{c}}}{}BHj}{{{Jn{ce}}}{}LjBHj}{{{Jn{ce}}}{{Gh{e}}}LjBHj}{{{Jn{BMd}}}Ad}{{{f{BC`}}}d}{{{f{BIf}}}d}{{{f{Ml}}}d}`{{{f{{Jn{ABf}}}}}d}{{{f{c}}}d{}}1{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BLnLj}BHj}{{{f{BC`}}}Fb}`1{{{f{AKd}}{f{AKd}}}{{Af{{Gh{AKdAKd}}}}}}{{DjDj}{{Af{{Gh{DjDj}}}}}}{{{f{Bh{Jn{ce}}}}}{{f{Bhc}}}Od{BHjOd}}{{{f{BMf}}}Jj}0{{{f{BMh}}}Jj}```11`{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}d{BJhLj}BHj}{{BMjFb}{{An{Fb}}}}{{{f{Bf}}c}BMl{}}{c{{Jn{c}}}{}}{{cABnd}ANf{{ANd{Dh}}}}{e{{Jn{c}}}{}{{Mn{{f{{BJd{c}}}}}{{C`{c}}}}}}{{ce}{{Jn{ce}}}{}BHj}{{}{{Jn{{BIb{c}}}}}{}}{c{{Jn{{BIb{e}}c}}}BHj{}}{Fb{{Jn{{Db{{BIb{c}}}}}}}{}}{{Fbc}{{Jn{{Db{{BIb{e}}}}c}}}BHj{}}3210`{{}Ml}{{}BIf}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}{{An{AOf}}}{BLnLj}BHj}{c{{BMn{{Jn{c}}}}}{}}{{ce}{{BMn{{Jn{ce}}}}}{}BHj}`````{{{f{BMf}}}Jj}0{{{f{{Jn{c}}}}{f{BhBN`}}}b{AHjLj}}{{{f{{Jn{ce}}}}{f{{Jn{ce}}}}}dLjBHj}{{{f{BMh}}JlLf}{{Af{Jj}}}}{{{f{Bh{Jn{ABf}}}}{f{Bh{Db{D`}}}}}{{Gb{FbBJj}}}}{{{f{Bh{Jn{ABf}}}}BNb}{{Gb{bBJj}}}}{{{f{Bh{Jn{ABf}}}}{f{Bh{El{D`}}}}}{{Gb{FbBJj}}}}{{{f{Bh{Jn{ABf}}}}{f{BhDh}}}{{Gb{FbBJj}}}}{{{f{Bh{Jn{ABf}}}}{f{Bh{Db{BNd}}}}}{{Gb{FbBJj}}}}`{{{f{Bh{Jn{ABf}}}}BNf}{{Gb{HlBJj}}}}`{{{f{AIb}}FbFb}AIb}0{{{f{{Jn{c}}}}}{{An{{f{AHj}}}}}{AHjLj}}{{{f{BNh}}D`}Jj}{{KbKb}BIf}`{{{f{{Jn{ce}}}}}FbLjBHj}>>{{{f{Ml}}}{{An{Kb}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AMj{{Gb{eg}}}{}{{AJd{c}}AHf}{}}0{{AMjABn}{{Gb{eg}}}{}{{AJf{c}}AHf}{}}0{c{{Gb{e}}}{}{}}000{{{Jn{{Db{c}}e}}}{{Gb{{Jn{{BFl{c}}e}}}}}{}BHj}1111111111111111111111{{BMjFb}{{Gb{FbAIl}}}}{c{{Gb{{Jn{c}}BNj}}}{}}{{ce}{{Gb{{Jn{ce}}BNj}}}{}BHj}{{}{{Gb{{Jn{{BIb{c}}}}BNj}}}{}}{c{{Gb{{Jn{{BIb{e}}c}}BNj}}}BHj{}}10{c{{Gb{{BMn{{Jn{c}}}}BNj}}}{}}{{ce}{{Gb{{BMn{{Jn{ce}}}}BNj}}}{}BHj}{{{Jn{ce}}}{{Gb{c{Jn{ce}}}}}{}BHj}{{{f{c}}}Mj{}}000000000000{{{Jn{ce}}}cOdBHj}`{{{f{BNh}}D`}Jj}{ce{}{}}000000000000{{{f{{Jn{ce}}}}}FbLjBHj}``{{ANf{BNl{DhDh}}}ANf}{{BC`{BNl{DhDh}}}BC`}{{{f{Bh{Jn{ABf}}}}{f{{Db{D`}}}}}{{Gb{FbBJj}}}}{{{f{Bh{Jn{ABf}}}}{f{{Db{BNn}}}}}{{Gb{FbBJj}}}}```````{{c{An{Gf}}}BL`{}}{{{BLb{In}}{BLb{D`}}{An{Gf}}}BLd}{{{BLb{In}}{BLb{D`}}{An{Gf}}}BLf}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{BO`{An{{f{ABn}}}}}{{Gb{{BLh{In}}AIl}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BO`}}}d}{FbBO`}{{{f{BO`}}}{{f{{Db{In}}}}}}{{{f{BhBO`}}{f{Fl}}}b}{{{f{BhBO`}}}b}{{{f{BhBO`}}{f{{Db{{A@l{Fl}}}}}}}b}1{{{f{BhBO`}}{An{{f{Fl}}}}}b}{BO`{{BOb{In}}}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}:`{{{f{c}}h}b{}}{{{f{BOd}}}{{f{AC`}}}}{{{f{BhBOd}}}{{A@l{Fl}}}}{{{f{BhBOd}}}{{f{BhAC`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BOd}}}BOd}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BOd}}}{{f{ABn}}}}{{}BOd}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BhBOd}}Fb}b}{{{f{BOd}}{f{BhFh}}}{{Gb{bAN`}}}}{cc{}}{{}Fb}{ce{}{}}{{{f{BOd}}}Fb}{FbBOd}{{{f{BhBOd}}}b}70{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}{{{f{BOd}}}{{An{{f{BOf}}}}}}7```````{{{f{AIb}}FbFb}AIb}0`{{}b}0{{}d}``{{eFbFb}{{BOh{In}}}{{K`{Bf}}}{{Bd{}{{B`{c}}}}}}{{eFbFb}{{BGn{In}}}{{K`{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{Hlb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBf}}}BBf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BBf}}{f{Bf}}}d}{{}BBf}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{BBf}}{f{BBf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBf}}{f{BhFh}}}Fj}{{{f{BOj}}}BBf}{{{f{BCb}}}BBf}{BOjBBf}{BC`BBf}{{{f{{Db{Ad}}}}}BBf}{cc{}}{{{f{BC`}}}BBf}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{eBBf{{ANd{L`}}}{{G`{}{{B`{c}}}}}}{{{f{BBf}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BBf}}Fb}{{An{{Gh{{f{ANn}}{f{Df}}}}}}}}{{{f{BhBBf}}Fb}{{An{{Gh{{f{BhANn}}{f{BhDf}}}}}}}}{{{f{BBf}}{f{Bf}}}{{An{L`}}}}{{{f{BBf}}{f{Bf}}}{{An{{Gh{Fb{f{ANn}}{f{Df}}}}}}}}{{{f{BOl}}}{{El{{f{Bf}}}}}}{{{f{BBf}}}{{El{{f{Bf}}}}}}{{{f{BBf}}{f{Bhc}}}bAFd}{{{f{BOl}}{f{Bf}}}{{An{Fb}}}}{{{f{BBf}}{f{Bf}}}{{An{Fb}}}}{{}Fb}{{{f{BhBBf}}FbANnDf}{{Af{{An{Df}}}}}}{ce{}{}}{BBfc{}}{{{f{BBf}}}d}{{{f{BBf}}}{{`{{Bd{}{{B`{{Gh{{f{ANn}}{f{Df}}}}}}}}}}}}{{{f{BBf}}}{{`{{If{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBBf}}}{{`{{If{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BBf}}}{{`{{If{}{{B`{L`}}}}}}}}{{{f{BBf}}}{{`{{If{}{{B`{{f{ANn}}}}}}}}}}{{{f{BBf}}}Fb}{{{f{BhBBf}}BBf}b}{{{f{BhBBf}}{f{BBf}}}b}{{}BBf}{{{f{BBf}}FbANnDf}{{Af{BBf}}}}{{{f{BhBBf}}{f{Bf}}}{{An{Df}}}}{{{f{BhBBf}}{f{Bf}}ANn}{{An{ANn}}}}{{{f{BhBBf}}Fb}b}{{{f{BhBBf}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBBf}}FbDf}{{An{Df}}}}4{{{f{BhBBf}}Fb}{{An{{Gh{ANnDf}}}}}}{{{f{BBf}}d}BC`}{{{f{c}}}e{}{}}{{{f{BhBBf}}{f{BBf}}}{{Af{d}}}}{c{{Gb{e}}}{}{}}{{{f{BBf}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BBf}}Fb}{{Af{{Gh{{f{ANn}}{f{Df}}}}}}}}{{{f{BBf}}{f{Bf}}}{{Af{L`}}}}{{{f{BBf}}{f{Bf}}}{{Af{{Gh{Fb{f{ANn}}{f{Df}}}}}}}}{{{f{BhBBf}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{BOl}}{f{Bf}}}{{Af{Fb}}}}6{{{f{c}}}Mj{}}{ce{}{}}{FbBBf}{{{f{BhBBf}}ANnDf}{{An{Df}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{El{Ej}}{f{ABn}}}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}{f{ABn}}{An{{f{BOn}}}}}{{Af{Ad}}}}{{Adc}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}c{}}{{AdAd}c{}}{{{f{Ad}}c}e{A`Jh}{}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BMd}}Dl}Dn}0{{{f{BMd}}}{{Af{Dn}}}}0`{{{f{Ad}}Fb}{{f{Ej}}}}{{{f{BMd}}}{{f{AC`}}}}{{{f{BhBMd}}}{{f{BhAC`}}}}0{{{f{Ad}}}Dj}{{{f{BhBMd}}}{{f{Bh{l{c}}}}}Bn}{{{f{BMd}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BMd}}}}{{{f{BhBMd}}}{{Af{Fb}}}}0{{{f{BhAd}}}{{Af{Fb}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AIh}}}}}}{{{f{BMd}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Ff}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BMd}}{f{Df}}}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{{f{AKd}}}}}}66{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BMd}}}Eh}{{{f{BMd}}}{{f{{El{Ej}}}}}}{{{f{BhBMd}}}{{f{Bh{El{Ej}}}}}}{{{f{BhAd}}}{{f{Bh{El{Ej}}}}}}{{{f{Ad}}}Ad}{{{f{Ij}}}Ij}1{{{f{BMd}}}{{Jn{BMd}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{I`}}}}}}{{}Ad}{Fb{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}{Fb{{f{Bhc}}}{}}00{{Adc}e{A`Jh}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}{{Af{Jl}}}}{Fbb}00{{{f{BMd}}}Ad}0{{{f{BMd}}}{{f{Df}}}}0{{{f{Ij}}{f{Ij}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}c}{{Af{Ff}}}ANb}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}0{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}eANb{}}55{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}Fb}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}GnFb}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AJ`}}}}}}{{{f{Ad}}}{{Af{{f{AJb}}}}}}{{{f{BMd}}}{{AIn{L`}}}}0{{{f{Ad}}AEb}{{Af{Ad}}}}{{{f{BMd}}{f{Ff}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ff}}d}{{Af{Ad}}}}{{{f{Ij}}{f{BhFh}}}Fj}{{{f{Ad}}{f{BhFh}}}Fj}0{{{f{Ad}}}Dh}{cc{}}0{{{l{c}}}AdBn}1{{{f{Bf}}{f{{Db{Gn}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{Gn}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}Ej}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}}{{Af{Ad}}}}{{{f{Bf}}{El{Ej}}{f{Df}}}Ad}{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{cAd{{G`{}{{B`{In}}}}}}{cAd{{G`{}{{B`{{An{Hj}}}}}}}}{cAd{{G`{}{{B`{{f{In}}}}}}}}{cAd{{G`{}{{B`{{An{Jl}}}}}}}}{cAd{{G`{}{{B`{{f{Bf}}}}}}}}{cAd{{G`{}{{B`{{f{d}}}}}}}}{cAd{{G`{}{{B`{{An{Hl}}}}}}}}{cAd{{G`{}{{B`{d}}}}}}{cAd{{G`{}{{B`{Kb}}}}}}{cAd{{G`{}{{B`{{f{Kl}}}}}}}}{cAd{{G`{}{{B`{{An{In}}}}}}}}{cAd{{G`{}{{B`{Hj}}}}}}{cAd{{G`{}{{B`{Jl}}}}}}{cAd{{G`{}{{B`{Hl}}}}}}{cAd{{G`{}{{B`{{An{Kb}}}}}}}}{cAd{{G`{}{{B`{Kl}}}}}}{cAd{{G`{}{{B`{{f{Hl}}}}}}}}{cAd{{G`{}{{B`{{An{d}}}}}}}}{cAd{{G`{}{{B`{{An{Kl}}}}}}}}{cAd{{G`{}{{B`{{f{Jl}}}}}}}}{cAd{{G`{}{{B`{Dh}}}}}}{cAd{{G`{}{{B`{{f{Kb}}}}}}}}{cAd{{G`{}{{B`{{f{Hj}}}}}}}}{{{f{Bf}}{El{Hl}}}Ad}{{{f{Bf}}{El{In}}}Ad}{{{f{Bf}}{El{Jl}}}Ad}{{{f{Bf}}{El{Hj}}}Ad}{{{f{Bf}}{El{Kl}}}Ad}{{{f{Bf}}{El{Kb}}}Ad}{{{f{Bf}}Fb{f{Df}}}Ad}{{{f{Ad}}FbFb}Ad}{{{f{BMd}}Fb}{{Af{Gn}}}}{{{f{Ad}}}Fb}{{{f{Ad}}}Hb}{{{f{Ad}}}Ad}{{{f{BMd}}Fb}{{An{{f{Hf}}}}}}0{{{f{BMd}}FbFb}{{An{{f{Hf}}}}}}0{{{f{BMd}}Fb}Gn}0{{{f{Ad}}c}{{Af{Ff}}}ANb}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}02{{{f{Ad}}{f{Bf}}}c{}}{{{f{BMd}}}d}{{{f{Ij}}{f{Bhc}}}bAFd}{{{f{Ad}}{An{Fb}}}Ad}{{{f{Ad}}}{{Af{{f{B@b}}}}}}{{{f{Ad}}}{{Af{{f{B@d}}}}}}{{{f{Ad}}}{{Af{{f{B@f}}}}}}{{{f{Ad}}}{{Af{{f{B@`}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}Fb}00{ce{}{}}00{AdBAf}1{BBhAd}{AdAd}=={{{f{Ad}}}{{Af{Ff}}}}000{{{f{BMd}}}Ff}0{{}d}00{{{f{Ad}}}Ij}{{{f{Ad}}}C@`}{{{f{BMd}}}Fb}{{{f{BMd}}Fb}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}{{Af{Ff}}}ANb}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}120{{{f{Ad}}}{{Af{{An{c}}}}}Jh}{{{f{BMd}}}{{Af{Jj}}}}0{{{f{BMd}}}{{An{Jl}}}}0{{{f{Ad}}}Jj}1122322{{{f{Ad}}c}e{A`Jh}{}}{{AdAd}c{}}{{Adc}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}c{}}=={{{f{BMd}}}{{Af{Fb}}}}0{{{f{BMd}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{{AIn{Bf}}}}}}}}}}{{{f{Bf}}{Kd{Kb}}}Ad}{{{f{Bf}}c}Ad{{K`{{Db{d}}}}}}{{{f{Bf}}{Kd{Hl}}}Ad}{{{f{Bf}}c}Ad{{K`{{Db{{An{Jl}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{Kl}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{In}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{Ad}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{K`{{Db{{El{D`}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{Kd{Kl}}}Ad}{{{f{Bf}}c}Ad{{K`{{Db{{An{{AIn{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Dh}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Gn}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{AIn{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{{El{D`}}}}}}}}}}{{{f{Bf}}{Kd{In}}}Ad}{{{f{Bf}}c}Ad{{K`{{Db{Kb}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{AIn{Bf}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Kl}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Jl}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Hl}}}}}}{{{f{Bf}}c}AdBBh}{{{f{Bf}}c}Ad{{K`{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{Kb}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{Hj}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{In}}}}}}{{{f{Bf}}c}Ad{{K`{{Db{{An{Hj}}}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BMd}}FbFb}Ad}{{{f{Bf}}Fb}Ad}{{{f{BhC@`}}}{{An{c}}}{}}{{{f{Ad}}{f{Ad}}}{{Af{Ff}}}}{{{f{Ad}}c}{{Af{Ff}}}ANb}{{{f{Ad}}{f{Bf}}}{{Af{Ff}}}}{{{f{Ad}}c}eANb{}}{{{f{Ad}}{f{Bf}}}c{}}4{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BMd}}}Fb}`{{{f{Ad}}}C@b}{{{f{Ad}}}{{Af{Jj}}}}{{{f{BMd}}JlLf}{{Af{Jj}}}}0{{{f{BMd}}}Ad}{{{f{Ad}}c}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jh}{}}{{{f{BhBMd}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Db{In}}}}}{{Af{Ad}}}}6{IjIj}{{{f{BMd}}{f{Cb}}Lh}{{Af{Ad}}}}0{{{f{Ad}}Jldd{An{Hl}}}{{Af{Ad}}}}{{{f{Ad}}Fbdd{An{Hl}}}{{Af{Ad}}}}{{{f{Ad}}Fb}Ad}{{{f{BhAd}}Ij}b}{{{f{BMd}}In}Ad}{{{f{BhBMd}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hl}}}Ad}{{{f{C@`}}}{{Gh{Fb{An{Fb}}}}}}{{{f{BMd}}InFb}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BMd}}Dl}{{Af{Ad}}}}0{{{f{BMd}}D`}{{An{Jl}}}}0{{{f{BMd}}D`}{{Af{Jj}}}}0{{{f{Ad}}}{{Af{{f{Mf}}}}}}{{{f{Ad}}Fb}{{Af{{AIn{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{{f{Ad}}c}e{A`Jh}{}}{{AdAd}c{}}{{Adc}e{A`Jh}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}}{{Af{c}}}Jh}{{{f{BMd}}}{{Af{Jj}}}}0{{{f{Ad}}}{{Af{Jj}}}}{{{f{Ad}}{An{Fb}}}Ad}{{{f{BMd}}{f{Dn}}}{{Af{Ad}}}}{{{f{BMd}}{f{{Db{H`}}}}}{{Af{Ad}}}}{{{f{BMd}}{f{{Db{H`}}}}}Ad}{{{f{Ad}}{f{{Db{H`}}}}d}Ad}{{{f{Ad}}{f{Dn}}d}{{Af{Ad}}}}{{{f{BMd}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{H`}}}}}Ad}{{{f{Ad}}{f{Dn}}d}Ad}{{{f{Ad}}Fbd}Ej}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AIn{Ad}}}}{{{f{c}}}Dh{}}{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{AdAd}{{Af{Ad}}}}1{c{{Gb{e}}}{}{}}0{{{Gh{{f{Bf}}Ej}}}{{Af{Ad}}}}{{{Gh{{f{ANf}}Ej}}}{{Af{Ad}}}}{{{Gh{{f{Bf}}{El{Ej}}}}}{{Af{Ad}}}}3{{{Gh{{f{ANf}}{El{Ej}}}}}{{Af{Ad}}}}444656{{{f{BhAd}}{Fd{c}}}dBn}76{{{f{c}}}Mj{}}00{{{f{Ad}}}{{Af{{f{AOl}}}}}}{{{f{Ad}}}{{Af{{f{AMn}}}}}}{{{f{Ad}}}{{Af{{f{AOn}}}}}}{{{f{Ad}}}{{Af{{f{AOj}}}}}}{{{f{BMd}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BMd}}}{{Af{{f{{l{c}}}}}}}Bn}`{{{f{BMd}}D`}{{An{Jl}}}}0{{{f{BMd}}D`}{{Af{Jj}}}}0{ce{}{}}00{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jh}}{{{f{Ad}}{f{Ff}}{f{Ad}}}{{Af{Ad}}}}````{{{C@d{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{C@f}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BId}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ef}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BId}}c}{{Af{Ad}}}Ab}{{{f{{l{Ef}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{C@h}}}C@h}{{{f{c}}{f{Bhe}}}b{}{}}{{}C@h}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{{{f{C@h}}{f{C@h}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{C@h}}{f{BhFh}}}Fj}{cc{}}{{{f{C@h}}{f{Bhc}}}bAFd}{{}Fb}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}3``{{{f{c}}h}b{}}{{{f{BhCf}}}{{f{BhAd}}}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{Cf}}}Ad}{Fb{{f{c}}}{}}{Fb{{f{Bhc}}}{}}{Fbb}{cc{}}{{}Fb}{ce{}{}}{{{f{BhAd}}}Cf}{{{f{BhCf}}{f{BhEj}}}b}{{{f{c}}}e{}{}}{c{{Gb{e}}}{}{}}0{{{f{c}}}Mj{}}5{{{f{BhCf}}{f{BhEj}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````````{{{f{c}}h}b{}}8{{{El{BAf}}}{{Af{BAf}}}}{c{{Af{BAf}}}{{G`{}{{B`{BAf}}}}}}{cBAf{{G`{}{{B`{BAf}}}}}}{c{{An{BAf}}}{{G`{}{{B`{BAf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gh{{AIn{{l{c}}}}{AIn{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gh{{AIn{{l{c}}}}{AIn{{l{e}}}}{AIn{{l{g}}}}}}}BnBnBn}{{{f{BhC@j}}}d}{c{{Af{Df}}}{{G`{}{{B`{{f{Gn}}}}}}}}{c{{Af{{Gh{DfFb}}}}}{{G`{}{{B`{{f{Gn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gf}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{{C@l{ec}}}}}{{C@l{ec}}}Od{Od{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gh{{AIn{{l{c}}}}{AIn{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gh{AdAd}}}}{C@je{}{{C@n{c}}}}{C@je{}{{CA`{c}}}}{c{{Af{BAf}}}{{G`{}{{B`{{f{BAf}}}}}}}}{cBAf{{G`{}{{B`{{f{BAf}}}}}}}}{{{f{BhC@j}}{f{c}}}dBJh}{Fb{{f{c}}}{}}{{{f{{CAb{c}}}}}{{f{e}}}{}{}}1{{{f{{AId{c}}}}}{{f{e}}}{}{}}2{Fb{{f{Bhc}}}{}}0{{{f{Bh{AId{c}}}}}{{f{Bhe}}}{}{}}1{Fbb}00{cBBf{{G`{}{{B`{Df}}}}}}{c{{Af{Df}}}{{G`{}{{B`{{f{Df}}}}}}}}{{{f{{CAb{Ad}}}}{f{{CAb{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhC@j}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{Gb{ic}}}{}{}{{Gd{c}{{B`{e}}}}}{}}{c{{AId{{l{e}}}}}{{G`{}{{B`{}}}}}n}{c{{AId{Ff}}}{{G`{}{{B`{d}}}}}}{eCA`{}{{G`{}{{B`{c}}}}}}21{c{{AId{{l{e}}}}}{{Gj{}{{B`{}}}}}n}{c{{AId{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AId{Ff}}}{{Gl{}{{B`{d}}}}}}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{AL`}}{f{AL`}}}AL`}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CAb{Ad}}}}{f{Bhc}}}bAFd}{{}Fb}00{ce{}{}}00{{{AId{c}}}c{}}1{BDd{{El{c}}}{}}{c{{El{Dh}}}{}}{c{{El{{CAf{CAd}}}}}{}}{BBbGn}{c{{AId{c}}}{}}{{eFb}{{C@l{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@l{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{C@l{ec}}}}}An{}{{Bd{}{{B`{c}}}}F`}}`{{{f{{C@l{ec}}}}}{{Gh{Fb{An{Fb}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{{Db{c}}}}InFb}{{f{{Db{c}}}}}{}}{{{f{{l{c}}}}Fb}{{Af{{El{{l{c}}}}}}}Bn}{{{f{BAf}}Fbd}{{El{BAf}}}}{{{f{c}}}e{}{}}{{C@jFb}{{C@l{C@jc}}}{}}{c{{Gb{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Mj{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{El{c}}}}}}}{{Gh{Fb{El{Fb}}}}}{}}{{{f{BAf}}}{{`{{Bd{}{{B`{BAf}}}}}}}}{{{f{{Db{c}}}}}{{AHn{H`}}}{{K`{{Db{Ml}}}}IbId}}{{{f{{Db{e}}}}}{{El{c}}}{IbIdCd}{{K`{{Db{c}}}}}}{{{f{Ad}}}{{El{Ad}}}}","D":"J@j","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5152],[5,"ListType",1420],[5,"ChunkedArray",39],[10,"PolarsNumericType",1420],[10,"Num",5153],[10,"ToPrimitive",5154],[5,"Series",4563],[8,"PolarsResult",3844,5155],[10,"NumOpsDispatchInner",4955,5156],[6,"GroupsProxy",3446,5157],[5,"BooleanType",1420],[6,"Option",5158],[17,"Item"],[8,"ArrayBox",5014],[10,"Iterator",5159],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1420],[10,"PolarsDataType",1420],[17,"Output"],[10,"Fn",5160],[10,"Copy",5161],[5,"UnstableSeries",5014],[10,"FnMut",5160],[5,"Float32Type",1420],[5,"Float64Type",1420],[5,"BinaryType",1420],[1,"u8"],[1,"slice"],[5,"StringType",1420],[6,"DataType",1420,5162],[5,"String",5163],[8,"ListChunked",1420],[5,"SortOptions",1337],[8,"IdxCa",1420,5164],[5,"SortMultipleOptions",1337],[8,"BinaryChunked",1420],[10,"PolarsIntegerType",1420],[10,"NumOpsDispatchCheckedInner",4980,5165],[8,"ChunkLenIter",39],[8,"ArrayRef",3844,5166],[5,"Vec",5167],[5,"MetadataProperties",773],[10,"DoubleEndedIterator",5168],[1,"usize"],[5,"Metadata",773],[8,"BooleanChunked",1420],[5,"Formatter",5169],[8,"Result",5169],[10,"Array",5166],[17,"Array"],[10,"IntoIterator",5170],[6,"Result",5171],[10,"FallibleIterator",5172],[5,"Bitmap",5173],[1,"tuple"],[10,"IntoParallelIterator",5174],[10,"TrustedLen",5175],[6,"AnyValue",1420,5176],[8,"IdxSize",3844,5177],[5,"MetadataFlags",773],[5,"ObjectType",1420],[10,"PolarsObjectSafe",1004],[10,"PolarsObject",1004],[1,"f32"],[1,"u64"],[5,"Int128Type",1420],[8,"DecimalChunked",1420,5178],[10,"Send",5161],[10,"Sync",5161],[10,"ExactSizeIterator",5179],[10,"PolarsFloatType",1420],[6,"IsSorted",4563,5180],[10,"PolarsIterator",734],[1,"i64"],[5,"Iter",5181],[1,"fn"],[5,"Map",5182],[6,"ChunkedArrayLayout",39],[10,"NumCast",5154],[5,"Scalar",1420,5176],[1,"f64"],[5,"Arc",3844,5183],[10,"AsRef",5184],[1,"u32"],[5,"Range",5185],[5,"UInt32Type",1420],[5,"Int64Type",1420],[5,"UInt64Type",1420],[1,"i32"],[5,"Int32Type",1420],[5,"Field",1420,5186],[10,"ParallelIterator",5174],[10,"IndexedParallelIterator",5174],[6,"QuantileInterpolOptions",3844,5187],[5,"RollingOptionsFixedWindow",3844,5188],[10,"Sized",5161],[17,"HasViews"],[5,"RandomState",5189],[5,"BytesHash",5190],[8,"Array2",5191],[8,"ArrayView1",5191],[8,"StringChunked",1420],[6,"Either",5192],[5,"TypeId",5193],[5,"NullableIdxSize",3844,5177],[10,"FnOnce",5160],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",428,5194],[10,"ChunkedBuilder",456],[5,"BinViewChunkedBuilder",456,5195],[10,"ViewType",5196],[5,"BooleanChunkedBuilder",456,5197],[5,"NullChunkedBuilder",456,5198],[5,"PrimitiveChunkedBuilder",456,5199],[10,"Clone",5200],[8,"StringChunkedBuilder",456,5195],[8,"BinaryChunkedBuilder",456,5195],[10,"NewChunkedArray",456],[5,"AnonymousListBuilder",560,5201],[5,"AnonymousOwnedListBuilder",560,5201],[5,"ListBooleanChunkedBuilder",560,5202],[5,"ListPrimitiveChunkedBuilder",560,5203],[10,"ListBuilderTrait",560],[5,"ListStringChunkedBuilder",560,5204],[5,"ListBinaryChunkedBuilder",560,5204],[5,"ListNullChunkedBuilder",560,5205],[5,"Box",5206],[10,"ChunkedCollectInferIterExt",714],[10,"ChunkedCollectIterExt",714],[10,"Canonical",728],[10,"ChunkedCollectParIterExt",730],[10,"FromParIterWithDtype",730],[5,"BooleanArray",5207],[5,"BoolIterNoNull",734],[5,"SomeIterator",734],[5,"MetadataEnv",773,5208],[10,"MetadataCollectable",773],[5,"Iter",5209],[5,"IterNames",5209],[5,"File",5210],[5,"Mutex",5211],[6,"MetadataMerge",773],[5,"ObjectArray",1004],[6,"ArrowDataType",1420,5212],[10,"Any",5193],[10,"Debug",5169],[5,"BitmapIter",5213],[6,"ZipValidity",5214],[8,"ObjectValueIter",1004],[5,"ObjectChunkedBuilder",1079],[8,"ObjectChunked",1420],[10,"AnonymousObjectBuilder",1102],[5,"ObjectRegistry",1102],[8,"ObjectConverter",1102],[8,"BuilderConstructor",1102],[17,"FuncRet"],[10,"ChunkApply",1130],[10,"ChunkApplyKernel",1130],[10,"ChunkSort",1130],[10,"ChunkUnique",1130],[10,"ChunkCast",1130],[6,"FillNullStrategy",1130],[10,"ChunkCompare",1130],[10,"ChunkExplode",1130],[5,"OffsetsBuffer",5215],[10,"ChunkFillNullValue",1130],[10,"ChunkFilter",1130],[10,"ChunkFull",1130],[10,"ChunkFullNull",1130],[10,"ChunkAnyValue",1130],[10,"Hasher",5216],[10,"IsFirstDistinct",1130],[10,"IsLastDistinct",1130],[10,"ChunkAgg",1130],[10,"ChunkQuantile",1130],[10,"ChunkExpandAtIndex",1130],[10,"ChunkReverse",1130],[10,"ChunkRollApply",1130],[10,"ChunkSet",1130],[10,"ChunkShift",1130],[10,"ChunkShiftFill",1130],[10,"ChunkVar",1130],[10,"ChunkTake",1130],[10,"ChunkTakeUnchecked",1130],[10,"ChunkBytes",1130],[10,"ChunkZip",1130],[10,"BinaryFnMut",1253],[10,"StaticArray",1420,5217],[10,"TernaryFnMut",1253],[10,"Error",5218],[10,"UnaryFnMut",1253],[5,"PrimitiveArray",5219],[6,"SearchSortedSide",1293],[10,"SlicedArray",3844,5220],[5,"NoNull",5038],[5,"RowsEncoded",5221],[8,"BinaryOffsetChunked",1420],[5,"NaiveDateTime",5222],[6,"PolarsError",3844,5155],[6,"Cow",5223],[8,"Float32Chunked",1420],[8,"Float64Chunked",1420],[10,"ArrayFromIter",1420,5224],[10,"ArrayFromIterDtype",1420,5224],[10,"AsRefDataType",1420,5162],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5225],[10,"From",5184],[5,"CategoricalChunked",2824,5226],[10,"CategoricalMergeOperation",2824,5227],[10,"LogicalType",1420,5228],[5,"Logical",1420,5228],[5,"OwnedObject",1420,5176],[6,"UnknownKind",1420,5162],[6,"TimeUnit",1420,5229],[5,"UInt8Type",1420],[5,"UInt16Type",1420],[5,"Int8Type",1420],[5,"Int16Type",1420],[5,"DateType",1420],[5,"TimeType",1420],[5,"BinaryOffsetType",1420],[5,"DecimalType",1420],[5,"DatetimeType",1420],[5,"DurationType",1420],[5,"CategoricalType",1420],[6,"ArrowTimeUnit",1420],[10,"ArrayCollectIterExt",3844,5224],[8,"Utf8ViewArray",5196],[8,"UInt32Chunked",1420],[5,"Error",5169],[10,"NumericNative",1420],[10,"Into",5184],[5,"ArrowField",3844],[6,"PrimitiveType",5230],[6,"IntegerType",5231],[10,"Borrow",5232],[8,"String",5233],[10,"NoOption",5234],[10,"GetAnyValue",1420,5176],[8,"Int128Chunked",1420],[6,"Ordering",5235],[6,"PhysicalType",5231],[8,"UInt8Chunked",1420],[8,"UInt16Chunked",1420],[8,"UInt64Chunked",1420],[8,"Int8Chunked",1420],[8,"Int16Chunked",1420],[8,"Int32Chunked",1420],[8,"Int64Chunked",1420],[8,"PlIdHashMap",1420,5164],[5,"CategoricalChunkedBuilder",2824,5236],[5,"GlobalRevMapMerger",2824,5227],[6,"RevMapping",2964,5237],[6,"CategoricalOrdering",2964,5237],[5,"CatIter",2824,5226],[1,"u128"],[5,"DataFrame",3155],[5,"StringCacheHolder",3016,5238],[5,"ErrString",3045,5155],[6,"PolarsWarning",3045,5239],[10,"Display",5169],[6,"FloatFmt",3125],[1,"i128"],[1,"char"],[5,"Schema",4489],[10,"IntoSeries",4563,5240],[6,"NullStrategy",3155],[6,"UniqueKeepStrategy",3155],[8,"PlHashSet",1420,5241],[5,"ArrowSchema",3844,5242],[5,"Row",3700],[5,"GroupBy",3446],[5,"RangeFrom",5185],[5,"RangeInclusive",5185],[5,"RangeFull",5185],[5,"RangeToInclusive",5185],[5,"RangeTo",5185],[5,"RecordBatchIter",3155],[5,"PhysRecordBatchIter",3155],[10,"IntoVec",5038],[5,"MeltArgs",3417],[10,"RangeBounds",5185],[8,"SchemaRef",4489],[6,"IndexOrder",3844,5243],[5,"StructArray",5244],[8,"RecordBatch",5245],[5,"GroupsIdx",3446,5157],[8,"IdxVec",5246],[6,"GroupByMethod",3446],[5,"SlicedGroups",3446,5157],[5,"GroupsProxyParIter",3446,5157],[10,"UnindexedConsumer",5247],[6,"GroupsIndicator",3446,5157],[8,"IdxItem",3446,5157],[10,"IntoGroupsProxy",3446,5248],[5,"Copied",5249],[5,"Zip",5250],[5,"GroupsProxyIter",3446,5157],[8,"GroupsSlice",3446,5157],[1,"array"],[8,"DynArgs",3844,5251],[10,"IsFloat",5252],[10,"NativeType",5253],[10,"AggList",3684,5254],[10,"TakeExtremum",3684],[10,"PhysicalAggExpr",3697],[6,"AnyValueBuffer",3700,5255],[6,"AnyValueBufferTrusted",3700,5255],[5,"BinaryArray",5256],[5,"IdHasher",3796,5257],[5,"IdxHash",3796,5257],[5,"HashMap",5258],[10,"BuildHasher",5216],[10,"VecHash",3796,5259],[10,"Allocator",5260],[5,"BorrowedFd",5261],[10,"AsFd",5261],[10,"AsRawFd",5262],[20,"MaybeUninit",5263],[10,"NumOpsDispatchChecked",3844,5165],[5,"ChunkId",3844,5177],[5,"RollingVarParams",3844,5251],[5,"RollingQuantileParams",3844,5251],[6,"NonExistent",3844,5264],[10,"Ord",5235],[10,"Default",5265],[5,"CStr",5266],[5,"Weak",5183],[10,"Scalar",5267],[10,"PartialEq",5235],[5,"Error",5268],[5,"TryReserveError",5269],[6,"Error",5270],[5,"Utf8Error",5271],[10,"ToOwned",5223],[5,"OsStr",5272],[5,"CString",5273],[5,"Path",5274],[5,"OsString",5272],[5,"PathBuf",5274],[1,"never"],[10,"FromData",4412,5275],[5,"Buffer",5276],[10,"FromDataUtf8",4412,5275],[10,"FromDataBinary",4412,5275],[5,"ListArray",5277],[6,"Ambiguous",3844,5264],[10,"NamedFromOwned",3844,5278],[10,"PartialOrd",5235],[10,"PolarsArray",3844,5279],[10,"Hash",5216],[10,"SeriesTrait",4563,5180],[10,"ChunkAggSeries",3844,5280],[10,"QuantileAggSeries",3844,5281],[10,"IndexToUsize",3844,5282],[10,"NamedFrom",3844,5278],[5,"Pin",5283],[5,"Request",5218],[5,"BorrowedCursor",5284],[5,"IoSliceMut",5285],[6,"SeekFrom",5285],[10,"VarAggSeries",3844,5286],[5,"AllocError",5260],[5,"BTreeMap",5287],[5,"IoSlice",5285],[5,"AnonymousBuilder",4418,5288],[5,"Offsets",5215],[5,"MutableNullArray",4441,5289],[5,"MutableBitmap",5290],[5,"Utf8Array",5291],[8,"ArrowSchemaRef",5242],[10,"IndexOfSchema",4489],[8,"Metadata",5212],[5,"SeriesIter",4563,5292],[8,"SeriesPhysIter",4563,5292],[10,"LhsNumOps",4955,5156],[10,"NumOpsDispatch",4955,5156],[6,"NullBehavior",4988],[10,"CustomIterTools",5038,5293],[5,"TrustMyLength",5038,5175],[10,"FromIteratorReversed",5294],[10,"FromTrustedLenIterator",5038,5293],[5,"Wrap",5038],[5,"LazyCompact",5295],[5,"SmartString",5296],[8,"FillNullLimit",1130],[10,"InitHashMaps",1420],[10,"InitHashMaps2",1420],[5,"TrueT",1420],[15,"IO",3110],[15,"Context",3110],[15,"Count",3681],[15,"Slice",3682],[10,"ListFromIter",3844],[10,"Utf8FromIter",4484],[10,"BinaryFromIter",4484]],"r":[[0,5257],[4,5238],[13,5238],[16,5238],[31,5238],[428,5194],[456,5195],[457,5195],[458,5197],[461,5198],[462,5199],[463,5195],[560,5201],[561,5201],[562,5204],[563,5202],[565,5205],[566,5203],[567,5204],[786,5208],[1322,5220],[1337,5220],[1421,5176],[1423,5224],[1424,5224],[1425,5224],[1426,5212],[1428,5162],[1444,5226],[1447,5226],[1448,5236],[1449,5227],[1450,5237],[1452,5162],[1453,5162],[1454,5162],[1465,5178],[1475,5186],[1476,5186],[1491,5176],[1493,5227],[1497,5164],[1498,5282],[1499,5164],[1500,5164],[1501,5241],[1502,5164],[1538,5228],[1539,5228],[1557,5176],[1561,5241],[1562,5241],[1563,5164],[1564,5241],[1565,5241],[1571,5237],[1572,5176],[1574,5217],[1586,5229],[1587,5162],[1614,5162],[1813,5227],[1828,5228],[1904,5162],[2422,5227],[2423,5227],[2435,5162],[2518,5226],[2556,5226],[2824,5226],[2825,5226],[2826,5236],[2827,5227],[2828,5237],[2830,5227],[2834,5237],[2851,5227],[2916,5227],[2917,5227],[2935,5226],[2939,5226],[2964,5237],[2969,5237],[3016,5238],[3022,5238],[3025,5238],[3033,5238],[3035,5237],[3040,5237],[3041,5238],[3042,5238],[3043,5238],[3044,5238],[3051,5155],[3058,5155],[3059,5155],[3060,5239],[3074,5155],[3082,5155],[3089,5239],[3094,5155],[3095,5155],[3096,5155],[3097,5155],[3098,5155],[3099,5239],[3100,5155],[3114,5297],[3115,5297],[3116,5297],[3117,3796],[3446,5157],[3452,5157],[3453,5157],[3454,5157],[3455,5157],[3456,5157],[3457,5157],[3460,5157],[3462,5248],[3474,5157],[3684,5254],[3702,5255],[3703,5255],[3796,5257],[3797,5257],[3798,5257],[3799,5259],[3802,5259],[3803,5259],[3844,5264],[3845,5183],[3846,5194],[3847,5224],[3848,5166],[3850,5242],[3851,5195],[3852,5197],[3854,5226],[3855,5226],[3856,5236],[3857,5227],[3858,5237],[3859,5280],[3860,5177],[3861,39],[3862,456],[3863,714],[3864,714],[3868,3155],[3870,5251],[3874,5275],[3875,5275],[3876,5275],[3878,5227],[3881,5282],[3882,5177],[3883,5243],[3884,5282],[3885,5240],[3886,5038],[3888,5298],[3889,5298],[3890,5298],[3893,5156],[3895,5204],[3896,5202],[3897,560],[3898,5279],[3899,5203],[3900,5204],[3903,3417],[3905,5278],[3906,5278],[3908,456],[3910,5264],[3914,5177],[3915,5177],[3916,5156],[3917,5165],[3921,5279],[3922,5155],[3923,734],[3924,1004],[3925,5155],[3926,5199],[3927,5281],[3928,5187],[3931,5237],[3932,5188],[3933,5251],[3934,5251],[3939,4563],[3940,5180],[3942,5220],[3944,5238],[3946,5195],[3948,3155],[3949,5286],[3950,5259],[3996,5227],[4031,5279],[4034,0],[4047,5279],[4076,0],[4212,5282],[4255,5279],[4257,5227],[4258,5227],[4284,5279],[4290,5155],[4291,5155],[4292,5155],[4293,5155],[4305,5226],[4307,5279],[4313,5226],[4386,5279],[4412,5275],[4413,5275],[4414,5275],[4418,5288],[4441,5289],[4471,5237],[4476,5237],[4477,5220],[4480,5238],[4481,5238],[4482,5238],[4483,5238],[4484,5299],[4485,5299],[4565,1130],[4568,5240],[4569,5180],[4570,5180],[4574,5292],[4575,5292],[4576,5180],[4955,5156],[4956,5156],[4957,5156],[4963,5156],[4980,5165],[4981,5165],[5039,5293],[5040,5293],[5041,5293],[5044,5175],[5055,5300],[5056,5300],[5086,5301],[5087,5302],[5106,5302],[5108,5303],[5121,5302],[5136,5302],[5146,5303]],"b":[[48,"impl-Add-for-%26ChunkedArray%3CT%3E"],[49,"impl-Add-for-ChunkedArray%3CT%3E"],[50,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat32Type%3E"],[65,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkedArray%3CStringType%3E"],[72,"impl-ChunkedArray%3CT%3E"],[119,"impl-Div-for-%26ChunkedArray%3CT%3E"],[120,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[121,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[122,"impl-Div-for-ChunkedArray%3CT%3E"],[129,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[130,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[138,"impl-Debug-for-ChunkedArray%3CT%3E"],[139,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[150,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[151,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[152,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[154,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[155,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[183,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[216,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[217,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[218,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[219,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[227,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[228,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[229,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[230,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkedArray%3CBooleanType%3E"],[232,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkedArray%3CBooleanType%3E"],[235,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[248,"impl-ChunkedArray%3CT%3E"],[249,"impl-ChunkedArray%3CBooleanType%3E"],[250,"impl-Mul-for-ChunkedArray%3CT%3E"],[251,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[252,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[253,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[257,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[259,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[260,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[261,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[262,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[263,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[264,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[265,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[266,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[268,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[269,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[271,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[272,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[274,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[277,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[278,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[287,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[288,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[289,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[290,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[294,"impl-ChunkedArray%3CListType%3E"],[295,"impl-ChunkedArray%3CStringType%3E"],[296,"impl-ChunkedArray%3CStringType%3E"],[297,"impl-ChunkedArray%3CListType%3E"],[308,"impl-Rem-for-ChunkedArray%3CT%3E"],[309,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[310,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[311,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[335,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[336,"impl-Sub-for-ChunkedArray%3CT%3E"],[337,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[338,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[340,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[341,"impl-ChunkedArray%3CBooleanType%3E"],[344,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[345,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[346,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[347,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkedArray%3CListType%3E"],[354,"impl-ChunkedArray%3CT%3E"],[359,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[360,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[361,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[362,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[363,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[364,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[390,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[391,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[392,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[393,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[394,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[395,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[396,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[397,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[398,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[399,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[508,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[509,"impl-BinViewChunkedBuilder%3Cstr%3E"],[808,"impl-MetadataProperties"],[809,"impl-Flags-for-MetadataProperties"],[810,"impl-MetadataFlags"],[811,"impl-Flags-for-MetadataFlags"],[878,"impl-Binary-for-MetadataProperties"],[879,"impl-Octal-for-MetadataProperties"],[880,"impl-Debug-for-MetadataProperties"],[881,"impl-UpperHex-for-MetadataProperties"],[882,"impl-LowerHex-for-MetadataProperties"],[883,"impl-Octal-for-MetadataFlags"],[884,"impl-Debug-for-MetadataFlags"],[885,"impl-Binary-for-MetadataFlags"],[886,"impl-LowerHex-for-MetadataFlags"],[887,"impl-UpperHex-for-MetadataFlags"],[895,"impl-Flags-for-MetadataProperties"],[896,"impl-MetadataProperties"],[897,"impl-MetadataFlags"],[898,"impl-Flags-for-MetadataFlags"],[1010,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1011,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1044,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1045,"impl-ObjectArray%3CT%3E"],[1059,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1060,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1070,"impl-ObjectArray%3CT%3E"],[1071,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1073,"impl-ObjectArray%3CT%3E"],[1074,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1076,"impl-ObjectArray%3CT%3E"],[1077,"impl-Array-for-ObjectArray%3CT%3E"],[1080,"impl-ObjectChunkedBuilder%3CT%3E"],[1081,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1083,"impl-ObjectChunkedBuilder%3CT%3E"],[1084,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1653,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1654,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1655,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1656,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1657,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1658,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1659,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1660,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1736,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1737,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1738,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1739,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1740,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[1741,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[2032,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2033,"impl-PartialEq-for-DataType"],[2041,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2042,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2043,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2044,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2047,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2048,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2049,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2050,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2088,"impl-Display-for-AnyValue%3C\'_%3E"],[2089,"impl-Debug-for-AnyValue%3C\'a%3E"],[2091,"impl-Display-for-DataType"],[2092,"impl-Debug-for-DataType"],[2094,"impl-Debug-for-TimeUnit"],[2095,"impl-Display-for-TimeUnit"],[2107,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2108,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2109,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2110,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2111,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2114,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2115,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2117,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2119,"impl-From%3C%26Field%3E-for-Field"],[2120,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2144,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2145,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2148,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2149,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2150,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2152,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2153,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2154,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2155,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2161,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2162,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2164,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2165,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2166,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2167,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2168,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2169,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2177,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2178,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2179,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2180,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2181,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2182,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2271,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2272,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2273,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2274,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2277,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2278,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2279,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2280,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2412,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2413,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2414,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2415,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2418,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2419,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2420,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2421,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2456,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2457,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2458,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2459,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2460,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2461,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2462,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2463,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2464,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2465,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2477,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2478,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2481,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2482,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2483,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2484,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2487,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2488,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2489,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2490,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2568,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2569,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2570,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2571,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2870,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2871,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2872,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2873,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2874,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2875,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2890,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2891,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2892,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2893,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2894,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2895,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2910,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2911,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2912,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2913,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2914,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2915,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2926,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2927,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2928,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2929,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2930,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2931,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3084,"impl-Debug-for-ErrString"],[3085,"impl-Display-for-ErrString"],[3176,"impl-Add%3C%26Series%3E-for-DataFrame"],[3177,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3178,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3215,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3216,"impl-Div%3C%26Series%3E-for-DataFrame"],[3217,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3247,"impl-Debug-for-DataFrame"],[3248,"impl-Display-for-DataFrame"],[3254,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3255,"impl-From%3C%26Schema%3E-for-DataFrame"],[3282,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3283,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3284,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3285,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3286,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3287,"impl-Index%3C%26str%3E-for-DataFrame"],[3288,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3289,"impl-Index%3Cusize%3E-for-DataFrame"],[3314,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3315,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3316,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3331,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3332,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3333,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3365,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3366,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3367,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3386,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3387,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3558,"impl-Display-for-GroupByMethod"],[3559,"impl-Debug-for-GroupByMethod"],[3565,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3566,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3568,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3602,"impl-IntoIterator-for-%26GroupsIdx"],[3603,"impl-IntoIterator-for-GroupsIdx"],[3605,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3606,"impl-IntoParallelIterator-for-GroupsIdx"],[3967,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[3968,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4038,"impl-Default-for-Arc%3Cstr%3E"],[4039,"impl-Default-for-Arc%3CT%3E"],[4040,"impl-Default-for-Arc%3CCStr%3E"],[4041,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4095,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4096,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4097,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4130,"impl-Display-for-PolarsError"],[4131,"impl-Debug-for-PolarsError"],[4134,"impl-Display-for-Arc%3CT,+A%3E"],[4135,"impl-Debug-for-Arc%3CT,+A%3E"],[4136,"impl-Pointer-for-Arc%3CT,+A%3E"],[4146,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4147,"impl-From%3CError%3E-for-PolarsError"],[4149,"impl-From%3CError%3E-for-PolarsError"],[4150,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4154,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4156,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4157,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4158,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4159,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4160,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4161,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4162,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4163,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4164,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4165,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4166,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4167,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4168,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4169,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4507,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4508,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4509,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4510,"impl-From%3CArrowSchema%3E-for-Schema"],[4511,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4513,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4581,"impl-Add%3CT%3E-for-Series"],[4582,"impl-Add-for-%26Series"],[4583,"impl-Add-for-Series"],[4584,"impl-Add%3CT%3E-for-%26Series"],[4645,"impl-Div%3CT%3E-for-Series"],[4646,"impl-Div-for-Series"],[4647,"impl-Div-for-%26Series"],[4648,"impl-Div%3CT%3E-for-%26Series"],[4659,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4660,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4661,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4662,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4663,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4664,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4682,"impl-Display-for-Series"],[4683,"impl-Debug-for-Series"],[4695,"impl-FromIterator%3Ci64%3E-for-Series"],[4696,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4697,"impl-FromIterator%3C%26i64%3E-for-Series"],[4698,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4699,"impl-FromIterator%3C%26str%3E-for-Series"],[4700,"impl-FromIterator%3C%26bool%3E-for-Series"],[4701,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4702,"impl-FromIterator%3Cbool%3E-for-Series"],[4703,"impl-FromIterator%3Cu32%3E-for-Series"],[4704,"impl-FromIterator%3C%26i32%3E-for-Series"],[4705,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4706,"impl-FromIterator%3Cf32%3E-for-Series"],[4707,"impl-FromIterator%3Cf64%3E-for-Series"],[4708,"impl-FromIterator%3Cu64%3E-for-Series"],[4709,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4710,"impl-FromIterator%3Ci32%3E-for-Series"],[4711,"impl-FromIterator%3C%26u64%3E-for-Series"],[4712,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4713,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4714,"impl-FromIterator%3C%26f64%3E-for-Series"],[4715,"impl-FromIterator%3CString%3E-for-Series"],[4716,"impl-FromIterator%3C%26u32%3E-for-Series"],[4717,"impl-FromIterator%3C%26f32%3E-for-Series"],[4718,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4719,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4720,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4721,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4722,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4723,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4736,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4737,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4738,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4739,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4740,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4741,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4779,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4780,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4781,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4782,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4783,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4784,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4798,"impl-Mul%3CT%3E-for-%26Series"],[4799,"impl-Mul-for-Series"],[4800,"impl-Mul%3CT%3E-for-Series"],[4801,"impl-Mul-for-%26Series"],[4807,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4808,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4809,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4810,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4811,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4812,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4813,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4814,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4815,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4816,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4817,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4818,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4819,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4820,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4821,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4822,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4823,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4824,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4825,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4826,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4827,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4828,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4829,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4830,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4831,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4832,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4833,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4834,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4835,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4836,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4837,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4838,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4839,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4840,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4841,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4846,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4847,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4848,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4849,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4850,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4851,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4860,"impl-Rem%3CT%3E-for-%26Series"],[4861,"impl-Rem-for-%26Series"],[4862,"impl-Rem%3CT%3E-for-Series"],[4891,"impl-Sub%3CT%3E-for-%26Series"],[4892,"impl-Sub-for-Series"],[4893,"impl-Sub%3CT%3E-for-Series"],[4894,"impl-Sub-for-%26Series"],[4919,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4920,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4921,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4923,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5098,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5099,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5101,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5102,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5104,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5105,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAAJsN4g0fDiIOIw4kDiUOJg4rDi4OMw40DlkO","e":"OzAAAAEAABsP9AEAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBhAAAAYwACAGkAAgBtAAEAcwAMAIIAAwCHAAEAigAFAJIAAQCWAAYAnwADAKUAAwCqAAUAsQABALYABQC+AAIAxAAEAMoAAwDRAAEA1QABANgABgDkAAwA9QADAPsABQACARkAIAEDACUBAAAnAQQALQEBADMBAAA1AQQAOwEAAEABBQBIAQEATAELAF4BAQBkAQAAaAEIAHIBCAB8AQAAfgEEAIUBAACHASMArAEpANoBAgDgASMACgIFABQCAAAWAiYAPwJMAJMCDACnAjcA4gIJAO4CAQDyAgEA9QIpACoDAAAsAwAAMQMSAEgDDABXAwcAYQMCAGYDAgBrAw0AgAMAAIMDAACGAwEAjAMLAKMDAQCnAwAAqgMCALEDAwC2AwEAvgMLANADAwDWAw4A5wMHAPEDFQAIBAcAEQQAABMEAAAVBAAAFwQBABsEEAAtBAAAMAQAADIEAgA2BAIAOgQBAD0ECABHBAAASQQFAFEEAQBUBAAAVgQBAFkEAwBeBAMAYwQCAGcEAwBtBAAAcAQAAHgEAAB9BAAAgAQBAIUEAQCIBAAAiwQAAJUEAACeBAIAowQFAKsEAgCwBAEAswQAALUEAQC7BAEAvgQBAMUEAQDLBAAAzgQAANEEAADTBAAA1QQAANcEAADcBAQA4wQBAOYEBwDvBAIA9QQAAPcEAwD8BAEA/wQFAAsFFQAiBQEAJgUEACwFAwAzBQYAPQUPAE8FDABdBQAAXwUDAG8FCQCFBQ0AlQUCAJkFBQChBQAAowUMALMFAAC1BQAAugUBAL0FAAC/BQIAwwUAAMUFAADIBQAAywUAAM0FAQDQBQAA0gUCANYFDADkBQAA5gUBAOkFAADrBQEA7gUAAPAFAQDzBQAA9QUBAPgFAAD8BQAAAAYBAAQGAAAHBgAACQYAAAsGAwAQBgAAEwYIAB0GAQAgBgUAJwYBACsGAAAtBgAAMgYCADYGAQA5BgAAOwYBAD4GAABABgEAQwYAAEUGAQBIBgAASgYBAE0GAABPBgAAUgY7AJQGBACbBgkApwYEAK0GCAC3BgAAuQZlACAHSABqBwcAcwd2AOsHAQDuB0UAPAgEAEMIAQBGCAAASAgBAEsIAABhCAEAZAgXAIAIJACnCAYAsAgeANUIPwAXCQAAOwkKAEgJAABKCQEATQkBAFAJAABVCQUAXAkAAF8JAgBkCQMAaQkAAGsJHQCKCQkAlQkOAKUJGwDCCQYAygkaAOYJFQD9CQsACgoAAA8KAAARCgAAFgodADYKAgA6ClEAjQosALsKTAAJCwQADwsBABILAgAWCwQAHAsjAEcLAgBLCwkAWQsDAF4LFwB4CwEAewsEAIELDQCQCwUAlwsAAJkLFQCwCwEAtgsCALsLAQC/CwkAygsEANALAQDVCwAA1wsCANsLAQDeCwAA4AsBAOYLBADsCwQA8gsQAAQMCgARDAMAFwwEAB0MJABDDAUASgwJAFcMAABaDAoAZgwFAHEMEACEDBMAnwwBAKMMAgCnDAAAqQwAAK4MAwC3DAIAyAwAAMsMAQDTDAwA5gwBAPMMAgD6DAEABA0CAAwNAAAPDQAAFQ0AAB4NAQAhDQAAJA0EAC8NBAA3DQYAQA0JAEsNAABPDQQAWw0NAGoNAgBvDQoAew0BAH4NAwCDDQMAiA0JAJMNBwCcDQEAnw0YALkNKADjDQYA7g0BAPENAQD2DQMA/A0AAAEOBwARDg0AIA4BACcOAwAsDgEAMA4CADUOAAA3Dh8AWg4MAGkOBQBwDgcAeQ4WAJIOCwCfDg4Arw4BALMOAwC6DgYAxA4OANUOAQDYDhEA7A4EAPQOBQD8DgkABw8CAAwPBwAVDwsAIg8DACcPFgA/DwgASQ8FAFAPFgBqDxAAfA8AAH4PAQCCDxwAoQ8CAKUPEgC5DwYAww8BAMsPIgDxDwMA9g8KAAIQHAAhEBMANhABADkQAABLEAAAURAAAFYQAABZEAAAYBAAAGMQAABoEAEAaxAGAHQQEQCWEAMAmxACAJ8QAQCiEAEAvRACAMMQBADKEAAAzRAHANcQAADZEAEA3hAtABURDAAjEQAAJREMADcRCQBDEQYASxEAAE0RHABrEQAAbRELAHoRAAB8EQEAhREEAIwRBQCTEQ0AohECAKsRAQCuEQEAshEBAMYRAADIEQAAyhEAAM4RAwDUEQQA2hEDAN8RBADmEQMA7xEAAPURAgD9EQUABBIGAA4SAwAWEgIAGhIBAB4SDwAyEgMAOBIBADwSAgBKEgMAUBIAAFQSAQBXEh4AeRIAAIESAQCFEgEAiBIAAI4SAQCREgIAlxIDAKMSAwCsEgEArxIBALcSAAC/EgMAyBIRANsSDwDtEgEA8BIDAPcSAQD9EgIAAhMAAAQTAAAIEwIADxMBABMTAQAaEwAAHBMDAC8TAQAyExAARBMEAFATAQBWEwIAWhMAAFwTGgB6EwIAfxMOAI8TAQCSEwUAmRMKAKUTAACnEwAAqRMEAK8TBAC1EwQAvBMAAL8TAADCEwkAzRMCANITDADhEwUA6hMIAPQTBQD9Ew0ADBQAAA4UAgASFAgAHBQEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMCMMNNNNNNNNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNHNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FileCacheEntry","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","init_entries_from_uri_list","into","to_owned","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_rechunk","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","POLARS_TEMP_DIR_BASE_PATH","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[81,"polars_io::avro"],[147,"polars_io::cloud"],[218,"polars_io::cloud::options"],[397,"polars_io::csv"],[399,"polars_io::csv::read"],[653,"polars_io::csv::read::schema_inference"],[677,"polars_io::csv::write"],[817,"polars_io::file_cache"],[839,"polars_io::ipc"],[1092,"polars_io::json"],[1188,"polars_io::mmap"],[1210,"polars_io::ndjson"],[1212,"polars_io::ndjson::core"],[1296,"polars_io::parquet"],[1299,"polars_io::parquet::metadata"],[1351,"polars_io::parquet::read"],[1487,"polars_io::parquet::write"],[1703,"polars_io::partition"],[1719,"polars_io::pl_async"],[1740,"polars_io::predicates"],[1794,"polars_io::prelude"],[1804,"polars_io::utils"],[1817,"dyn_clone::sealed"],[1818,"polars_io::options"],[1819,"polars_io::shared"],[1820,"alloc::boxed"],[1821,"std::io"],[1822,"core::result"],[1823,"serde::de"],[1824,"std::path"],[1825,"polars_core::frame"],[1826,"polars_error"],[1827,"core::fmt"],[1828,"core::hash"],[1829,"polars_arrow::record_batch"],[1830,"core::option"],[1831,"serde::ser"],[1832,"core::any"],[1833,"polars_io::avro::read"],[1834,"polars_arrow::datatypes::schema"],[1835,"polars_io::avro::write"],[1836,"polars_core::schema"],[1837,"alloc::string"],[1838,"alloc::vec"],[1839,"polars_io::cloud::glob"],[1840,"object_store"],[1841,"alloc::sync"],[1842,"polars_io::cloud::polars_object_store"],[1843,"object_store::path"],[1844,"tokio::io::async_write"],[1845,"core::marker"],[1846,"polars_io::cloud::adaptors"],[1847,"std::io::error"],[1848,"crossterm::command"],[1849,"url"],[1850,"bytes::bytes"],[1851,"core::ops::range"],[1852,"core::ops::function"],[1853,"parquet_format_safe::thrift::varint::decode"],[1854,"object_store::aws::builder"],[1855,"object_store::azure::builder"],[1856,"object_store::gcp::builder"],[1857,"core::convert"],[1858,"core::iter::traits::collect"],[1859,"polars_io::csv::read::reader"],[1860,"polars_io::csv::read::read_impl::batched"],[1861,"polars_io::csv::read::options"],[1862,"std::fs"],[1863,"polars_core::datatypes::dtype"],[1864,"polars_io::csv::write::writer"],[1865,"polars_io::csv::write::options"],[1866,"core::num::nonzero"],[1867,"polars_io::file_cache::entry"],[1868,"polars_io::ipc::ipc_stream"],[1869,"polars_io::ipc::write"],[1870,"futures_io::if_std"],[1871,"polars_io::ipc::ipc_file"],[1872,"polars_io::ipc::ipc_reader_async"],[1873,"polars_arrow::io::ipc::read::file"],[1874,"polars_arrow::array::struct_"],[1875,"polars_arrow::array"],[1876,"polars_arrow::datatypes"],[1877,"polars_arrow::datatypes::field"],[1878,"polars_arrow::array::growable::structure"],[1879,"polars_arrow::array::struct_::mutable"],[1880,"polars_arrow::bitmap::immutable"],[1881,"polars_arrow::scalar"],[1882,"polars_arrow::array::struct_::iterator"],[1883,"polars_arrow::bitmap::utils::iterator"],[1884,"polars_arrow::bitmap::utils::zip_validity"],[1885,"polars_parquet::parquet::metadata::file_metadata"],[1886,"polars_parquet::parquet::metadata::column_order"],[1887,"polars_parquet::parquet::metadata::row_metadata"],[1888,"polars_parquet::arrow::read::statistics"],[1889,"parquet_format_safe::parquet_format"],[1890,"polars_parquet::parquet::metadata::schema_descriptor"],[1891,"polars_parquet::parquet::error"],[1892,"polars_io::parquet::read::reader"],[1893,"polars_io::parquet::read::read_impl"],[1894,"polars_io::parquet::read::options"],[1895,"polars_core::series"],[1896,"polars_io::parquet::write::writer"],[1897,"polars_io::parquet::write::batched_writer"],[1898,"polars_io::parquet::write::options"],[1899,"polars_parquet::arrow::write"],[1900,"polars_parquet::parquet::write"],[1901,"core::iter::traits::iterator"],[1902,"polars_parquet::arrow::write::file"],[1903,"std::sync::mutex"],[1904,"core::future::future"],[1905,"tokio::runtime::task::join"],[1906,"polars_core::datatypes::field"],[1907,"avro_schema::file"],[1908,"polars_io::cloud::object_store_setup"],[1909,"polars_io::csv::read::parser"],[1910,"polars_io::csv::read::utils"],[1911,"polars_io::file_cache::cache"],[1912,"polars_io::file_cache::utils"],[1913,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,0,16,8,5,6,5,6,5,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,47,39,43,47,39,43,39,0,43,43,39,47,39,43,47,39,43,43,47,47,39,43,39,47,39,47,39,43,47,39,43,39,43,43,43,0,43,47,39,43,47,39,43,47,39,43,47,0,39,47,39,47,43,47,39,43,47,39,43,47,39,43,47,39,43,47,47,61,60,61,0,62,61,63,63,0,60,62,60,60,61,62,61,61,0,0,60,60,61,60,60,60,61,60,60,61,61,63,63,0,63,60,60,61,61,61,60,60,61,60,62,62,60,61,60,61,60,61,61,61,60,60,38,61,62,60,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,60,38,61,62,60,38,61,62,38,60,38,63,61,62,60,38,63,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,60,60,38,38,38,61,61,61,62,62,62,60,38,61,62,60,38,63,61,62,60,63,61,62,38,60,38,61,62,60,38,63,61,62,60,38,63,61,62,38,60,38,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,0,0,78,78,0,0,0,0,0,0,76,77,78,0,0,77,76,74,75,76,77,78,68,68,68,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,74,75,76,77,78,74,75,76,77,78,74,75,0,75,74,75,76,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,75,74,75,76,77,78,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,68,74,75,76,77,78,73,72,68,74,75,76,77,77,78,74,74,74,75,76,77,78,74,0,74,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,0,74,74,75,74,74,68,77,77,77,73,72,75,74,74,74,75,74,74,74,74,74,0,74,75,74,75,76,77,78,74,74,74,75,76,77,78,75,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,73,72,68,74,75,76,77,78,74,73,72,68,74,75,76,77,78,74,74,75,75,74,75,75,74,74,74,74,75,74,74,75,74,74,74,75,74,74,74,74,74,74,75,74,74,75,75,0,81,81,81,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,88,0,0,0,88,88,88,0,0,86,87,88,86,84,84,85,86,87,88,84,85,86,87,88,86,87,88,86,87,88,87,87,86,87,88,84,85,86,87,88,84,85,86,87,88,86,87,88,84,85,86,87,88,86,87,88,86,86,86,87,87,87,88,88,88,84,85,87,86,87,88,84,85,86,87,88,86,87,88,84,86,84,86,84,85,86,87,88,84,85,86,87,88,87,86,84,84,87,87,87,87,86,87,88,86,87,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,84,84,84,84,84,84,84,84,84,85,0,0,90,90,90,90,90,90,90,90,90,90,0,90,90,90,90,90,90,90,90,90,0,0,0,0,0,0,0,0,0,0,0,0,99,99,96,97,98,99,91,92,92,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,96,97,98,99,96,97,98,99,98,100,103,104,100,103,104,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,96,98,99,105,100,91,106,103,92,93,104,96,97,98,99,96,98,99,98,98,98,99,99,99,103,104,105,91,106,92,93,105,96,98,99,105,100,91,106,103,92,93,104,96,97,98,99,100,96,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,98,96,105,100,105,91,106,103,92,104,92,105,91,96,98,99,105,91,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,100,91,106,103,92,93,104,96,97,98,99,105,91,106,103,92,104,103,104,105,91,106,92,97,105,91,97,105,91,97,97,93,0,112,0,112,0,0,0,108,112,109,111,110,108,112,109,111,110,108,108,108,108,112,109,111,110,108,112,109,111,110,108,108,112,109,111,110,108,108,108,108,108,109,110,108,112,109,111,110,108,108,110,112,109,111,110,108,112,109,111,110,108,108,109,111,110,108,110,108,112,109,111,110,108,112,109,111,110,108,112,109,111,110,108,112,109,111,110,108,110,110,109,110,110,110,110,111,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,70,70,0,83,83,83,83,0,0,0,0,115,115,115,115,115,120,115,120,115,115,115,115,115,115,120,115,120,115,120,115,115,115,115,120,115,120,115,115,115,120,115,120,120,115,120,115,115,115,115,115,120,120,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,120,115,120,115,115,120,115,115,115,115,115,120,115,120,120,120,120,120,120,120,120,115,115,0,0,0,0,0,0,129,132,129,132,129,129,129,129,129,129,132,129,132,129,0,132,132,129,132,132,129,132,132,129,132,129,132,129,129,129,129,132,132,132,129,129,129,129,129,132,129,129,132,129,132,129,129,132,129,142,0,142,142,0,0,0,0,142,141,142,138,140,139,138,140,141,142,139,138,140,141,142,141,142,141,142,142,139,138,140,141,142,139,138,140,141,142,141,142,139,138,140,141,142,141,142,141,141,141,142,142,142,138,140,139,141,142,139,138,140,141,142,140,138,140,141,142,139,138,140,141,142,139,138,140,141,142,139,139,139,141,0,139,138,139,138,140,141,138,140,139,138,140,141,142,138,138,140,141,142,139,138,140,141,142,139,138,140,141,142,139,138,140,141,142,138,140,141,139,138,140,141,142,138,138,140,138,140,138,140,138,140,138,140,138,0,148,0,148,0,148,148,0,0,0,0,148,0,148,148,0,147,148,149,150,151,152,145,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,147,148,149,150,151,152,147,148,149,150,151,152,147,147,147,148,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,147,148,149,150,151,152,152,146,145,147,148,149,150,151,152,152,146,147,148,149,150,151,152,147,147,147,148,148,148,149,149,149,150,150,150,151,151,151,152,152,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,152,146,147,148,149,150,151,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,152,152,147,152,152,145,152,147,147,148,149,150,151,152,145,147,147,148,149,150,151,152,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,149,150,151,146,145,147,148,149,150,151,152,146,145,147,148,149,150,151,152,145,145,145,145,146,146,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,162,162,162,162,162,162,162,162,0,162,162,164,162,162,162,0,162,162,0,0,0,0,0,0,69,168,167,168,167,167,168,167,168,167,168,167,168,167,168,69,168,167,168,167,168,168,168,168,168,167,168,167,168,167,168,167,168,167,167,168,167,166,168,168,168,168,167,168,167,168,167,168,167,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}`{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{Ef}}{b{Eh}}{b{hc}}}{{Bd{f}}}{EjEl}}{Aff}{{{b{hEn}}}f}11{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hEn}}}{{Fd{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{Ff}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{Fj{Af}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{b{{Fl{{Fj{Af}}}}}}}{{Bd{{Dh{Fh}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fn}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{En}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Eh}{{Bd{En}}}}``{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hc}}i}{{Ah{gF`}}}{}{}{}{{Gb{{b{he}}}{{G`{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEn}}{b{{Fl{Gd}}}}}{{Fd{Af}}}}{{{b{hc}}e}{{Ah{AfF`}}}{}Gf}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gh}}}{{b{Dj}}}}{{{b{Gj}}}{{b{Dj}}}}{{{b{Gl}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Gh}}}Gh}{{{b{Dl}}}Dl}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Gh}}}Aj}{c{{Ah{Dl}}}Aj}{c{{Ah{Gj}}}Aj}{c{{Ah{Gl}}}Aj}{Aff}0000{{{b{Gh}}{b{Gh}}}Al}{{{b{Dl}}{b{Dl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gj}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}}{{Ah{Gnc}}}{}}{{{b{Dj}}}{{Ah{Gj}}}}{{{b{Dj}}}{{Ah{Gl}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{H`{Dj}}}{{Hb{Df}}}{{Hf{}{{Hd{{Ed{ce}}}}}}}}{{{b{Gh}}{b{hc}}}fBj}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gj}}{b{hc}}}fBj}{{{b{Gl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Gh}}c}AhCd}{{{b{Dl}}c}AhCd}{{{b{Gj}}c}AhCd}{{{b{Gl}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Ghc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Gjc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Glc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hh{c}}{Cb{{Eb{Hj}}}}}{{Hh{c}}}Hl}{{{Hh{{Ab{Hl}}}}{Cb{Hn}}}{{Bd{I`}}}}{{{b{h{Hh{c}}}}}{{Bd{Ib}}}Hl}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}Gd{Cb{Gd}}{Cb{{b{Ij}}}}GdAl}{{Bd{Af}}}}`{{}Id}{{}If}{{}Ih}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{c{{Ah{Ij}}}Aj}{c{{Ah{Il}}}Aj}{Aff}0000000```{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{Ij}}{b{Ij}}}Al}{{{b{Il}}{b{Il}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hh{c}}}{{Bd{Bb}}}Hl}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{{{b{Ij}}{b{hBf}}}Bh}{{{b{Il}}{b{hBf}}}Bh}{cc{}}000000{{{b{Dj}}}Ij}1{{{b{Id}}}{{Eb{If}}}}`{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}{{{b{Ij}}{b{hc}}}fBj}{{{b{Il}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{Idc}{{Hh{c}}}Hl}{{{b{{Fl{Gd}}}}}Al}`{{Idc}Id{{In{If}{{G`{If}}}}}}```{c{{Hh{c}}}Hl}<{DfIj}{GdIj}{{{b{hIb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hI`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}{{{b{Ij}}c}AhCd}{{{b{Il}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{Id{Cb{An}}}{{Bd{{Hh{J`}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hId}}{b{Jb}}}f}{ce{}{}}0000000{{IdAf}Id}{{Id{Cb{{Eb{{Dh{Df}}}}}}}Id}{{If{Cb{c}}}If{{Hb{Ij}}}}{{IfAl}If}{{Id{Cb{{Eb{{Dh{Jd}}}}}}}Id}{{IfIh}If}{{IfGd}If}{{IdAl}Id}0{{Id{Cb{Af}}}Id}1500{{If{Cb{Il}}}If}{{IdIf}Id}{{Id{Cb{c}}}Id{{Hb{An}}}}{{Id{Cb{{Eb{{Dh{Af}}}}}}}Id}{{If{Cb{Gd}}}If}66{{Id{Cb{j}}}Id}>{{Id{Cb{Hn}}}Id}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{}Jb}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{Jb}}{b{hBf}}}Bh}{cc{}}{{{b{Jb}}}Af}{{{b{Jb}}}Hn}{{{b{Jf}}Gd{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{Ij}}}}{Cb{Gd}}Gd{Cb{{b{Il}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jf}}{b{Id}}}{{Bd{Jb}}}}1{{{b{c}}}Cf{}}4{{JbHn}Jb}`````````{{{b{c}}d}f{}}00`{{{Jh{c}}{b{Dd}}}{{Bd{{Jj{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jl}}}Jl}{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{c}}{b{he}}}f{}{}}00``{{}Jl}{{}Jn}{{}K`}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jl}}}Aj}{c{{Ah{Jn}}}Aj}{c{{Ah{K`}}}Aj}{Aff}0000{{{b{Jl}}{b{Jl}}}Al}{{{b{Jn}}{b{Jn}}}Al}{{{b{K`}}{b{K`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jj{c}}}}}{{Bd{f}}}Ad}`{{{b{Jl}}{b{hBf}}}Bh}{{{b{Jn}}{b{hBf}}}Bh}{{{b{K`}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jl}}{b{hc}}}fBj}{{{b{Jn}}{b{hc}}}fBj}{{{b{K`}}{b{hc}}}fBj}{{{Jh{c}}Al}{{Jh{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jh{c}}Af}{{Jh{c}}}Ad}{c{{Jh{c}}}Ad}````{{{b{Jl}}c}AhCd}{{{b{Jn}}c}AhCd}{{{b{K`}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jh{c}}Kb}{{Jh{c}}}Ad}{{{Jh{c}}{Cb{Df}}}{{Jh{c}}}Ad}0{{{Jh{c}}{Cb{Af}}}{{Jh{c}}}Ad}{{{Jh{c}}Df}{{Jh{c}}}Ad}0{{{Jh{c}}Gd}{{Jh{c}}}Ad}{{{Jh{c}}K`}{{Jh{c}}}Ad}14{{{b{h{Jj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}``{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Kd}}}Kd}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{}Af}{{c{Cb{{b{Dl}}}}}{{Bd{{Dh{{Eb{Kd}}}}}}}{{H`{{Fl{{Eb{Dj}}}}}}}}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{{{b{Kd}}}{{Bd{J`}}}}0{{{b{c}}}Cf{}}{{{b{Kd}}}{{Eb{Dj}}}}5``````````````{{{b{c}}d}f{}}000{{{b{h{Kf{c}}}}}{{Bd{Cj}}}Bl}{{{Kh{c}}{b{Dd}}}{{Bd{{Kj{c}}}}}Ad}{{{Kh{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KlElKn}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{L`}}}L`}{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Lh}}{Cb{{b{Lj}}}}}{{Bd{Ll}}}}{{{b{Ln}}c}{{Ab{A`}}}Ad}{{{b{M`}}c}{{Ab{A`}}}Ad}{{{b{Lh}}{Cb{{b{Lj}}}}LbAl}{{Bd{Bb}}}}{{}Ln}{{}M`}{{}Lb}{{}Ld}{{}Lf}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{L`}}}Aj}{c{{Ah{Ld}}}Aj}{c{{Ah{Lf}}}Aj}{Aff}00000000000{{{b{L`}}{b{L`}}}Al}{{{b{Ld}}{b{Ld}}}Al}{{{b{Lf}}{b{Lf}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{Ln}}}An}{{{b{M`}}}An}{{{Mb{c}}}{{Bd{Bb}}}Hl}{{{Kf{c}}}{{Bd{Bb}}}Bl}{{{b{h{Md{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kj{c}}}}}{{Bd{f}}}Ad}{{{Mb{c}}{Cb{{Eb{Hj}}}}Al}{{Bd{Bb}}}Hl}{{{b{L`}}{b{hBf}}}Bh}{{{b{Ld}}{b{hBf}}}Bh}{{{b{Lf}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Lh}}}}{{{b{L`}}{b{hc}}}fBj}{{{b{Ld}}{b{hc}}}fBj}{{{b{Lf}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Mb{c}}{Cb{An}}}{{Mb{c}}}Hl}{{{b{Lh}}}{{Bd{Lj}}}}{c{{Mb{c}}}Hl}{c{{Kf{c}}}Bl}{c{{Md{c}}}Ad}{{}Ln}{c{{Kh{c}}}Ad}{{}M`}{c{{Kh{c}}}{KlElKn}}{{{b{h{Mb{c}}}}}{{Bd{Mf}}}Hl}{{{b{h{Kf{c}}}}}{{Bd{Dd}}}Bl}{{{b{L`}}c}AhCd}{{{b{Ld}}c}AhCd}{{{b{Lf}}c}AhCd}{{{Mb{c}}Al}{{Mb{c}}}Hl}{{{Kf{c}}Al}{{Kf{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Mb{c}}{Cb{{Dh{Df}}}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{{Dh{Df}}}}}{{Kf{c}}}Bl}{{{Md{c}}{Cb{Lf}}}{{Md{c}}}{}}{{Ln{Cb{Lf}}}Ln}{{{Kh{c}}{Cb{Lf}}}{{Kh{c}}}Ad}{{M`{Cb{Lf}}}M`}{{LnAn}Ln}{{M`An}M`}{{{Mb{c}}{Cb{Af}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{Af}}}{{Kf{c}}}Bl}{{{Md{c}}Al}{{Md{c}}}{}}{{{Kh{c}}Al}{{Kh{c}}}Ad}{{Lbc}Lb{{Hb{{Cb{{Eb{Hj}}}}}}}}{{{Mb{c}}{Cb{{Dh{Af}}}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{{Dh{Af}}}}}{{Kf{c}}}Bl}{{Lbc}Lb{{Hb{{Cb{{Dh{Df}}}}}}}}{{{Mb{c}}{Cb{j}}}{{Mb{c}}}Hl}{{{Kf{c}}{Cb{j}}}{{Kf{c}}}Bl}{{Lbc}Lb{{Hb{{Cb{j}}}}}}{{Lbc}Lb{{Hb{{Cb{Af}}}}}}{{{b{h{Kj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Mh}}}Mh}{{{b{c}}{b{he}}}f{}{}}{{}Mh}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Mh}}}Aj}{Aff}0000{{{b{Mh}}{b{Mh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Mj{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Ml{c}}}{{Bd{Bb}}}Hl}{{{b{Mh}}{b{hBf}}}Bh}{cc{}}0000{{{b{Mh}}{b{hc}}}fBj}{{{Ml{c}}{Cb{Af}}}{{Ml{c}}}Hl}{{}Af}0000{ce{}{}}0000`{c{{Mj{c}}}Ad}{c{{Mn{c}}}Ad}{c{{Ml{c}}}Hl}{{{b{Mh}}c}AhCd}{{{Ml{c}}Al}{{Ml{c}}}Hl}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Ml{c}}Kb}{{Ml{c}}}Hl}4{{{Mj{c}}N`}{{Mj{c}}}Ad}{{{Ml{c}}N`}{{Ml{c}}}Hl}{{{Ml{c}}{Cb{{Dh{Df}}}}}{{Ml{c}}}Hl}{{{Ml{c}}Hn}{{Ml{c}}}Hl}{{{Ml{c}}{b{Dd}}}{{Ml{c}}}Hl}{{{b{h{Mn{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jf}}}{{b{{Fl{Gd}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{c}}}JfHl}{cc{}}{{}Af}{ce{}{}}{{{b{Hl}}}{{Cb{{b{{Fl{Gd}}}}}}}}{{{b{Hl}}}{{Cb{{b{J`}}}}}}{{{b{Nb}}}{{Bd{J`}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Af}}}{{Bd{Dd}}}Nd}``{{{b{c}}d}f{}}{{{b{Nf}}Af}{{Ed{NfNf}}}}{Nf{{Eb{Nh}}}}{{{b{Nf}}}{{b{Nj}}}}{{{b{hNf}}}{{b{hNj}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nf{{Ab{Nh}}}}{{{b{Nf}}Af}Al}{{{b{Nf}}}Nf}{{{b{c}}{b{he}}}f{}{}}{{{b{Nf}}}{{b{Nl}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nf}}{b{Nf}}}Al}{{{b{Nf}}{b{{b{Nh}}}}}Al}{{{b{Nf}}}{{b{{Fl{Nn}}}}}}{{{O`{c}}}{{Bd{Bb}}}Hl}{{{b{Nf}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{ObNf}1{OdNf}{c{{Bd{{O`{J`}}}}}{{Hb{An}}}}{{{b{Nl}}}{{b{{Fl{Nn}}}}}}{{{O`{c}}{Cb{Af}}}{{O`{c}}}Hl}{{}Af}0{ce{}{}}0{Nf{{Ed{{Dh{Nn}}{Dh{{Ab{Nh}}}}{Cb{Of}}}}}}{{{b{Nf}}}}{{{b{Nf}}}{{On{{Dh{{Ab{Oh}}}}OjOl}}}}{{{b{Nf}}}Af}{{{O`{c}}Al}{{O`{c}}}Hl}{c{{O`{c}}}Hl}{{Nl{Dh{{Ab{Nh}}}}{Cb{Of}}}Nf}{NlNf}{{NlAf}Nf}{{{b{hNf}}{Cb{Of}}}f}{{{b{hNf}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NfAfAf}Nf}0{{{b{Nf}}Af}{{Ed{{Ab{Nh}}{Ab{Nh}}}}}}0{{{b{hNf}}}{{Cb{Of}}}}{{{b{Nf}}}{{Ab{Nh}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000{{Nl{Dh{{Ab{Nh}}}}{Cb{Of}}}{{Ah{NfA@`}}}}{{{b{c}}}Cf{}}0{{{b{Nf}}}{{Cb{{b{Of}}}}}}0{{{b{Nf}}}{{b{{Fl{{Ab{Nh}}}}}}}}{{{b{Nf}}}Oj}{ce{}{}}0{{{O`{c}}{Cb{Kb}}}{{O`{c}}}Hl}{{{O`{c}}Al}{{O`{c}}}Hl}{{{O`{c}}{Cb{Af}}}{{O`{c}}}Hl}0{{{O`{c}}{Cb{e}}}{{O`{c}}}Hl{{Hb{An}}}}2{{{O`{c}}Hn}{{O`{c}}}Hl}{{{O`{c}}{b{Dd}}}{{O`{c}}}Hl}{{{b{Nf}}{Cb{Of}}}{{Ab{Nh}}}}{{Nf{Cb{Of}}}Nf}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@b}}}A@b}{{{b{c}}{b{he}}}f{}{}}{{{b{A@b}}Af}A@d}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Nn}}{b{A@f}}}{{Ah{A@hA@`}}}}`{Aff}0{{{b{A@h}}{b{A@h}}}Al}{{{b{A@h}}{b{hBf}}}{{Ah{fDb}}}}{{{b{A@b}}{b{hBf}}}{{Ah{fDb}}}}{A@jA@h}{cc{}}0{{}Af}0{ce{}{}}0{A@bA@l}{{{b{A@b}}}{{b{{Cb{{Dh{A@n}}}}}}}}``````{{{b{A@b}}}{{b{AA`}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@l{{Ah{A@bAAb}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AAd{c}}Af}{{Bd{AAf}}}Hl}{{AAhAf}{{Bd{AAf}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAj}}}AAj}{{{b{AAl}}}AAl}{{{b{c}}{b{he}}}f{}{}}0{{}AAl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAj}}}Aj}{c{{Ah{AAl}}}Aj}{Aff}0000{{{b{AAj}}{b{AAj}}}Al}{{{b{AAl}}{b{AAl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AAd{c}}}{{Bd{Bb}}}Hl}{AAh{{Bd{Bb}}}}{{{b{AAf}}Af}Al}{{{b{AAj}}{b{hBf}}}Bh}{{{b{AAl}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mf}}{Cb{AAn}}}{{Bd{AAh}}}}{{{b{h{AAd{c}}}}}{{Bd{{b{AAn}}}}}Hl}{{{b{hAAh}}}{{Bd{{b{AAn}}}}}}{{{b{AAj}}{b{hc}}}fBj}{{{b{AAl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAf}}}Al}`0`{{{Cb{{b{{Fl{Af}}}}}}{b{Cj}}{Cb{{b{{Fl{AB`}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AAd{c}}}Hl}{{{b{hAAf}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AAd{c}}}}}{{Bd{Af}}}Hl}{{{b{hAAh}}}{{Bd{Af}}}}`{{{AAd{c}}AAl}{{AAd{c}}}Hl}{{AAhAAl}AAh}{{{b{AAf}}}{{b{Mf}}}}{{{b{h{AAd{c}}}}}{{Bd{Mf}}}Hl}{{{b{hAAh}}}{{Bd{Mf}}}}{{{b{AAj}}c}AhCd}{{{b{AAl}}c}AhCd}{{{AAd{c}}Al}{{AAd{c}}}Hl}0{{AAhAl}AAh}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AAd{c}}{Cb{{Dh{Df}}}}}{{AAd{c}}}Hl}{{{AAd{c}}{Cb{{Dh{AB`}}}}}{{AAd{c}}}Hl}{{AAh{Cb{{Dh{AB`}}}}}AAh}{{{AAd{c}}{Cb{Af}}}{{AAd{c}}}Hl}{{AAh{Cb{Af}}}AAh}{{{AAd{c}}{Cb{{Eb{Hj}}}}}{{AAd{c}}}Hl}{{AAh{Cb{{Eb{Hj}}}}}AAh}{{{AAd{c}}{Cb{{Dh{Af}}}}}{{AAd{c}}}Hl}{{AAh{Cb{{Dh{Af}}}}}AAh}{{{AAd{c}}{Cb{j}}}{{AAd{c}}}Hl}{{AAh{Cb{j}}}AAh}{{{AAd{c}}{Cb{Mf}}}{{AAd{c}}}Hl}````````````````{{{b{c}}d}f{}}00000{{{ABb{c}}{b{Dd}}}{{Bd{{ABd{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABf}}}ABf}{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{c}}{b{he}}}f{}{}}00000``{{}ABf}{{}ABh}{{}AC`}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{ABf}}}Aj}{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{c{{Ah{ABl}}}Aj}{c{{Ah{ABn}}}Aj}{c{{Ah{AC`}}}Aj}`{Aff}00000009{{{b{{ABd{c}}}}{b{Bb}}}{{`{{ACd{}{{Hd{{Bd{{ACb{A@`}}}}}}}}}}}Ad}{{{b{ABf}}{b{ABf}}}Al}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{ABl}}{b{ABl}}}Al}{{{b{ABn}}{b{ABn}}}Al}{{{b{AC`}}{b{AC`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000000{{{b{{ABd{c}}}}}{{Bd{ACf}}}Ad}{{{ABb{c}}{b{hBb}}}{{Bd{ACf}}}Ad}{{{b{ABf}}{b{hBf}}}Bh}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{{{b{ABl}}{b{hBf}}}Bh}{{{b{ABn}}{b{hBf}}}Bh}{{{b{AC`}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000000{{}AC`}{{{b{{ABd{c}}}}}{{b{{ACj{{ACh{c}}}}}}}Ad}{{{b{ABf}}{b{hc}}}fBj}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{{b{ABl}}{b{hc}}}fBj}{{{b{ABn}}{b{hc}}}fBj}{{{b{AC`}}{b{hc}}}fBj}{{}Af}0000000{ce{}{}}0000000{{{b{AC`}}}Al}0```{c{{ABb{c}}}{AdAd}}``{{{b{ABf}}c}AhCd}{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{b{ABl}}c}AhCd}{{{b{ABn}}c}AhCd}{{{b{AC`}}c}AhCd}{{{ABb{c}}Al}{{ABb{c}}}Ad}`{{{b{c}}}e{}{}}00000{c{{Ah{e}}}{}{}}000000000000000{Gd{{Bd{ABj}}}}{ACl{{Bd{ABl}}}}{ACn{{Bd{ABn}}}}{{{b{c}}}Cf{}}0000000????????{{{ABb{c}}ABh}{{ABb{c}}}Ad}{{{ABb{c}}{Cb{Af}}}{{ABb{c}}}Ad}0{{{ABb{c}}AC`}{{ABb{c}}}Ad}{{{b{h{ABd{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{ABd{c}}}}{Dh{{ACb{A@`}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{AD`{c}}{b{Bb}}}{{Bd{f}}}{nKnADb}}{cc{}}{{}Af}{ce{}{}}{{cei}{{AD`{c}}}{nKnADb}{{Hb{An}}}{{H`{Dj}}}{{Hf{}{{Hd{g}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}3{{{AD`{c}}Al}{{AD`{c}}}{nKnADb}}``{{{b{ADd}}c}{}ADf}{{{b{ADd}}c}{}{ADfKn}}>=<;:8{{}{{b{ADd}}}}87{{{b{ADh}}}ACf}{{{b{ADd}}c}ADj{ADfKn}}77{{ACle}{}ADf{{Gb{}{{G`{c}}}}}}7:0````{{{b{hBb}}{Cb{{b{Hj}}}}Al}{{Bd{f}}}}{{{b{Hj}}}{{Cb{{b{ADl}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADn}}}{{b{{Fl{AE`}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{AE`}}}Aj}{c{{Ah{ADn}}}Aj}{Aff}0{{{b{AE`}}}{{b{Jd}}}}{{{b{Hj}}{b{Bb}}}{{Bd{AB`}}}}{{{b{AE`}}{b{hBf}}}Bh}{{{b{ADn}}{b{hBf}}}Bh}{cc{}}0{AB`AE`}{AEbAE`}{{{b{AE`}}}{{Cb{{b{AB`}}}}}}00{{{b{ADn}}{b{Dj}}}{{Bd{{b{AE`}}}}}}{{}Af}0{ce{}{}}0{{AEb{Cb{AB`}}{Cb{AB`}}{Cb{AB`}}}AE`}{{Hn{Dh{AE`}}{Cb{Af}}}ADn}{{{b{AE`}}}{{Cb{Af}}}}{{{b{ADn}}}{{Cb{Af}}}}{{{b{ADn}}}{{b{Hn}}}}{{{b{AE`}}c}AhCd}{{{b{ADn}}c}AhCd}{{{b{ADl}}{b{ADn}}}{{Bd{Al}}}};;{{{b{AE`}}}{{Cb{AB`}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00`````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jf}}}{BlHlAEd}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ACd{}{{Hd{Af}}}}}}{cAl{{H`{Nb}}}}{{{Cb{{b{{Fl{Df}}}}}}{b{Dd}}{Cb{{b{{Fl{AB`}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Nb}}}An}","D":"CKl","p":[[1,"reference"],[5,"Private",1817],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1818],[5,"HiveOptions",0,1818],[10,"WriterFactory",0,1819],[10,"SerWriter",1794,1819],[5,"Box",1820],[10,"Write",1821],[1,"usize"],[6,"Result",1822],[10,"Deserializer",1823],[1,"bool"],[5,"PathBuf",1824],[10,"SerReader",1794,1819],[5,"DataFrame",1825],[8,"PolarsResult",1826],[5,"Formatter",1827],[8,"Result",1827],[10,"Hasher",1828],[10,"Read",1821],[10,"ArrowReader",0,1819],[8,"RecordBatch",1829],[6,"Option",1830],[10,"Serializer",1831],[5,"TypeId",1832],[5,"AvroReader",81,1833],[5,"ArrowSchema",1834],[10,"Seek",1821],[6,"AvroCompression",81],[5,"AvroWriter",81,1835],[5,"Error",1827],[5,"Schema",1836],[5,"String",1837],[5,"Vec",1838],[1,"str"],[5,"CloudOptions",218],[5,"CloudLocation",147,1839],[10,"ObjectStore",1840],[5,"Arc",1841],[1,"tuple"],[5,"PolarsObjectStore",147,1842],[5,"Path",1843],[10,"AsyncWrite",1844],[10,"Unpin",1845],[5,"CloudWriter",147,1846],[5,"Error",1847],[10,"Command",1848],[8,"Result",1847],[5,"Url",1849],[5,"Bytes",1850],[5,"Range",1851],[1,"slice"],[5,"ObjectMeta",1840],[17,"Output"],[10,"FnOnce",1852],[1,"u8"],[10,"VarInt",1853],[6,"AmazonS3ConfigKey",218,1854],[6,"AzureConfigKey",218,1855],[6,"GoogleConfigKey",218,1856],[6,"CloudType",218],[10,"AsRef",1857],[10,"Into",1857],[17,"Item"],[10,"IntoIterator",1858],[5,"CsvReader",399,1859],[10,"PhysicalIoExpr",1740],[10,"MmapBytesReader",1188],[8,"SchemaRef",1836],[5,"OwnedBatchedCsvReader",399,1860],[5,"BatchedCsvReader",399,1860],[5,"CsvReadOptions",399,1861],[5,"CsvParseOptions",399,1861],[6,"CsvEncoding",399,1861],[6,"CommentPrefix",399,1861],[6,"NullValues",399,1861],[10,"Fn",1852],[5,"File",1862],[5,"SchemaInferenceResult",653],[6,"DataType",1863],[6,"ReaderBytes",1188],[5,"CsvWriter",677,1864],[5,"BatchedWriter",677,1864],[5,"CsvWriterOptions",677,1865],[5,"SerializeOptions",677,1865],[6,"QuoteStyle",677,1865],[8,"NonZeroUsize",1866],[5,"FileCacheEntry",817,1867],[5,"IpcStreamReader",839,1868],[5,"IpcWriter",839,1869],[5,"BatchedWriter",839,1869],[10,"AsyncWrite",1870],[10,"Send",1845],[5,"IpcScanOptions",839,1871],[5,"IpcReadOptions",839,1872],[5,"IpcWriterOptions",839,1869],[6,"IpcCompression",839,1869],[5,"IpcReaderAsync",839,1872],[5,"FileMetadata",1873],[1,"i64"],[5,"IpcStreamWriterOption",839,1868],[5,"IpcWriterOption",839,1869],[5,"IpcReader",839,1871],[5,"IpcStreamWriter",839,1868],[8,"ArrowSchemaRef",1834],[5,"JsonWriterOptions",1092],[5,"JsonWriter",1092],[5,"JsonReader",1092],[5,"BatchedWriter",1092],[6,"JsonFormat",1092],[5,"Path",1824],[10,"BufRead",1821],[5,"StructArray",1212,1874],[10,"Array",1875],[10,"Any",1832],[6,"ArrowDataType",1876],[5,"Field",1877],[5,"JsonLineReader",1212],[5,"GrowableStruct",1878],[5,"MutableStructArray",1879],[5,"Bitmap",1880],[10,"Scalar",1881],[5,"StructValueIter",1882],[5,"BitmapIter",1883],[6,"ZipValidity",1884],[6,"PolarsError",1826],[5,"FileMetaData",1299,1885],[6,"ColumnOrder",1886],[5,"RowGroupMetaData",1887],[5,"ParquetStatistics",1299],[5,"MutableStatistics",1888],[5,"FileMetaData",1889],[5,"KeyValue",1889],[5,"SchemaDescriptor",1890],[6,"Error",1891],[5,"ParquetReader",1351,1892],[5,"BatchedParquetReader",1351,1893],[5,"ParquetAsyncReader",1351,1892],[5,"ParquetOptions",1351,1894],[6,"ParallelStrategy",1351,1894],[8,"FileMetaDataRef",1299],[5,"Series",1895],[5,"ParquetWriter",1487,1896],[5,"BatchedWriter",1487,1897],[5,"ParquetWriteOptions",1487,1898],[6,"ParquetCompression",1487,1898],[5,"GzipLevel",1487,1898],[5,"BrotliLevel",1487,1898],[5,"ZstdLevel",1487,1898],[5,"StatisticsOptions",1487,1899],[8,"RowGroupIterColumns",1487,1900],[10,"Iterator",1901],[1,"u64"],[5,"FileWriter",1902],[5,"Mutex",1903],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1703],[10,"Sync",1845],[5,"RuntimeManager",1719],[10,"Future",1904],[10,"GetSize",1719],[5,"JoinHandle",1905],[10,"StatsEvaluator",1740],[5,"BatchStats",1740],[5,"ColumnStats",1740],[5,"Field",1906],[10,"Sized",1845]],"r":[[0,1819],[1,1818],[2,1818],[3,1819],[4,1819],[5,1819],[82,1833],[83,1835],[84,1907],[147,1839],[148,1846],[149,1842],[158,1908],[186,1839],[221,1854],[226,1855],[250,1856],[401,1860],[402,1861],[403,1861],[404,1861],[405,1861],[406,1859],[410,1861],[411,1860],[451,1909],[531,653],[550,1910],[678,1864],[679,1864],[680,1865],[684,1865],[685,1865],[817,1911],[818,1867],[829,1912],[839,1869],[840,1869],[841,1872],[842,1871],[843,1872],[844,1871],[845,1868],[846,1868],[847,1868],[848,1869],[849,1869],[850,1869],[1213,1874],[1299,1885],[1316,1888],[1352,1893],[1355,1894],[1356,1892],[1357,1894],[1358,1892],[1433,1913],[1487,1897],[1489,1898],[1491,1898],[1494,1898],[1495,1898],[1496,1896],[1497,1900],[1499,1899],[1502,1898],[1794,1819],[1795,1819],[1796,0]],"b":[[1234,"impl-PartialEq-for-StructArray"],[1235,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1240,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1242,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1260,"impl-StructArray"],[1261,"impl-Array-for-StructArray"],[1264,"impl-StructArray"],[1265,"impl-Array-for-StructArray"],[1280,"impl-StructArray"],[1281,"impl-Array-for-StructArray"],[1294,"impl-Array-for-StructArray"],[1295,"impl-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADsFqQAAAAEAAwAPABQAAAAWABMAKwACADAAAwA2AAAAOAACADwAAgBBABAAWgAAAFwAFwB3AAMAfgABAIEADQCSAAAAlwAGAKAADgCxAAIAtwADAL0AAgDFAAAAxwAAAMwADgDhAAEA7QAAAPkAAQD8AAAAEQEQACUBMABbAQMAYAEIAG4BHACSAQQAmwEBAJ8BJADFATcA/gEEAAoCAAAMAhEAKAIAACoCAgAxAisAXgIIAGgCBwCAAgAAjgIKAJoCAQCdAgAAnwIGAKcCAACvAhQAxgIhAOoCAgDyAgIA9gIAAPgCBQAEAwIACwMDABADFgAyAwkAPQMBAEADAgBFAwMASgMAAE0DAABQAwAAUgMBAFYDAwBbAyEAfgM+AL4DAwDOAw8A6wMAAO0DBwD3AzgAOgQCAD8EAABCBAEARQQAAEsEIwBwBAAAdgQAAHgEBACEBBgAnwQBAKUEAQCoBAgAsgQAALQEAQC3BAYAvwQBAMIEBQDJBAsA1gQBANkEAADbBAAA3gQCAOQEAADmBAAA7gQCAPIEAAD1BAEA+AQFAP8EAQACBQAABQUBAAkFBgAVBQAAFwUGACEFAwAnBQUALwUBAD0FAgBBBQMARgUBAEkFAABMBQAATgUAAFEFMACHBQkAlgUAAJgFAwCdBQAAnwUBAKIFAQClBQIAqQUSAL4FBQDFBQEAyAUCAMwFAADOBQAA0AUBANMFAADVBQEA2AUAANoFAQDdBQEA4AUiAAUGOwBDBgUAUQYPAGkGAQBsBgEAbwYAAHEGBQB5BigApwYAAKkGBQCwBgAAsgYEALgGAgC8BgQAwgYBAMUGAADHBgUAzwYCANMGAwDYBgcA4gYBAOwGAQD1BgIA+wYKAAcHAAAJBwAADQcEABQHAQAYBwEA"}],\
["polars_lazy",{"t":"CQCCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPGPPPPPGPPPPPPPPPPGPPPPPPPPPPKPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNOONNNOONNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNNNNOMNNMNNCOONOONMNNOONNNNOOMNNOOONNNNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHCCFKNNNNNMNNNNNNNNHKFFPPPPPPPFPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","utils","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","DateOffset","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","strict","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","DateOffset","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","Nanosecond","Negate","Not","NullCount","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","sort_options","sort_options","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","allows_projection_pushdown","anonymous_scan","anti_join","apply","as_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nulls","eager","eager","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","iter_paths","iter_paths","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","null_count","on","optimize","parallel","path","path","path","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_null_values","with_optimizations","with_path","with_path","with_path","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","executors","planner","Dummy","Executor","borrow","borrow_mut","deref","deref_mut","drop","execute","execute","from","init","into","try_from","try_into","type_id","vzip","create_physical_plan","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","projection","right_on","scan_type","schema","selection","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[6,"polars_lazy::dsl"],[1467,"polars_lazy::dsl::AggExpr"],[1474,"polars_lazy::dsl::BooleanFunction"],[1477,"polars_lazy::dsl::Expr"],[1512,"polars_lazy::dsl::FunctionExpr"],[1556,"polars_lazy::dsl::StringFunction"],[1576,"polars_lazy::dsl::TemporalFunction"],[1578,"polars_lazy::dsl::binary"],[1598,"polars_lazy::dsl::cat"],[1599,"polars_lazy::dsl::dt"],[1655,"polars_lazy::dsl::function_expr"],[1862,"polars_lazy::dsl::function_expr::BooleanFunction"],[1865,"polars_lazy::dsl::function_expr::FunctionExpr"],[1909,"polars_lazy::dsl::function_expr::StringFunction"],[1929,"polars_lazy::dsl::function_expr::TemporalFunction"],[1931,"polars_lazy::dsl::function_expr::cat"],[1933,"polars_lazy::dsl::function_expr::pow"],[1937,"polars_lazy::dsl::function_expr::rolling"],[1969,"polars_lazy::dsl::function_expr::rolling_by"],[2000,"polars_lazy::dsl::function_expr::trigonometry"],[2042,"polars_lazy::dsl::functions"],[2117,"polars_lazy::dsl::python_udf"],[2162,"polars_lazy::dsl::string"],[2223,"polars_lazy::dsl::udf"],[2229,"polars_lazy::frame"],[2668,"polars_lazy::frame::pivot"],[2670,"polars_lazy::physical_plan"],[2672,"polars_lazy::physical_plan::executors"],[2688,"polars_lazy::physical_plan::planner"],[2689,"polars_lazy::prelude"],[3281,"polars_lazy::prelude::DslPlan"],[3336,"polars_lazy::prelude::LiteralValue"],[3339,"dyn_clone::sealed"],[3340,"polars_plan::dsl::meta"],[3341,"polars_plan::dsl::expr"],[3342,"polars_error"],[3343,"core::result"],[3344,"polars_plan::dsl::array"],[3345,"polars_plan::dsl::list"],[3346,"core::convert"],[3347,"polars_plan::dsl::expr_dyn_fn"],[3348,"alloc::sync"],[3349,"polars_core::series"],[3350,"core::option"],[3351,"core::ops::function"],[3352,"core::marker"],[3353,"polars_plan::logical_plan::visitor"],[3354,"polars_plan::dsl::function_expr"],[3355,"polars_core::datatypes::dtype"],[3356,"polars_core::chunked_array::ops::sort::options"],[3357,"polars_plan::dsl::function_expr::schema"],[3358,"polars_core::datatypes::field"],[3359,"core::any"],[3360,"alloc::vec"],[3361,"polars_plan::dsl::binary"],[3362,"core::clone"],[3363,"alloc::string"],[3364,"polars_plan::dsl::udf"],[3365,"polars_plan::dsl::cat"],[3366,"polars_plan::dsl::arity"],[3367,"polars_plan::dsl::function_expr::boolean"],[3368,"polars_plan::dsl::function_expr::cat"],[3369,"polars_plan::dsl::function_expr::datetime"],[3370,"polars_plan::dsl::function_expr::pow"],[3371,"polars_plan::dsl::function_expr::strings"],[3372,"polars_plan::dsl::functions::temporal"],[3373,"polars_plan::dsl::options"],[3374,"polars_core::utils"],[3375,"polars_lazy::dsl::eval"],[3376,"polars_time::windows::duration"],[3377,"polars_time::windows::group_by"],[3378,"polars_core::datatypes::time_unit"],[3379,"serde::de"],[3380,"polars_plan::logical_plan"],[3381,"polars_core::series::ops"],[3382,"polars_plan::dsl::dt"],[3383,"polars_lazy::dsl::list"],[3384,"polars_arrow::legacy::kernels::ewm"],[3385,"polars_plan::dsl::struct_"],[3386,"polars_core::chunked_array::ops"],[3387,"core::fmt"],[3388,"polars_plan::logical_plan::apply"],[3389,"polars_plan::dsl::function_expr::binary"],[3390,"polars_plan::dsl::function_expr::struct_"],[3391,"polars_plan::dsl::function_expr::business"],[3392,"polars_plan::dsl::function_expr::range"],[3393,"polars_plan::dsl::function_expr::list"],[3394,"polars_plan::dsl::function_expr::array"],[3395,"polars_plan::logical_plan::options"],[3396,"polars_core::schema"],[3397,"core::hash"],[3398,"polars_ops::series::ops::interpolation::interpolate"],[3399,"polars_ops::series::ops::is_between"],[3400,"polars_plan::dsl::name"],[3401,"polars_plan::logical_plan::lit"],[3402,"polars_plan::dsl::python_udf"],[3403,"polars_utils::idx_vec"],[3404,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3405,"polars_ops::series::ops::rank"],[3406,"polars_time::group_by::dynamic"],[3407,"polars_core::chunked_array::ops::rolling_window"],[3408,"polars_core::datatypes"],[3409,"polars_core::chunked_array"],[3410,"polars_time::chunkedarray::rolling_window"],[3411,"polars_core::chunked_array::ops::search_sorted"],[3412,"serde::ser"],[3413,"polars_core::series::series_trait"],[3414,"polars_plan::dsl::string"],[3415,"polars_ops::chunked_array::list::to_struct"],[3416,"polars_ops::series::ops::business"],[3417,"polars_arrow::legacy::kernels::time"],[3418,"polars_plan::dsl::function_expr::rolling"],[3419,"polars_plan::dsl::function_expr::rolling_by"],[3420,"polars_plan::dsl::function_expr::trigonometry"],[3421,"polars_core::frame"],[3422,"rayon::iter"],[3423,"pyo3::types::any"],[3424,"pyo3::instance"],[3425,"polars_utils::arena"],[3426,"polars_plan::logical_plan::alp"],[3427,"polars_plan::logical_plan::aexpr"],[3428,"polars_lazy::scan::ndjson"],[3429,"polars_plan::logical_plan::anonymous_scan"],[3430,"polars_lazy::scan::anonymous_scan"],[3431,"polars_utils::index"],[3432,"polars_lazy::frame::exitable"],[3433,"polars_utils::aliases"],[3434,"polars_lazy::scan::csv"],[3435,"polars_lazy::scan::ipc"],[3436,"polars_lazy::scan::parquet"],[3437,"polars_plan::frame::opt_state"],[3438,"polars_lazy::scan::file_list_reader"],[3439,"polars_io::cloud::options"],[3440,"polars_ops::frame::join::args"],[3441,"core::iter::traits::collect"],[3442,"polars_core::frame::explode"],[3443,"std::path"],[3444,"polars_io::options"],[3445,"polars_io::csv::write::options"],[3446,"polars_io::ipc::write"],[3447,"polars_io::json"],[3448,"polars_io::parquet::write::options"],[3449,"smartstring::alias"],[3450,"core::num::nonzero"],[3451,"polars_io::csv::read::options"],[3452,"polars_lazy::physical_plan::executors::executor"],[3453,"polars_expr::state::execution_state"],[3454,"alloc::boxed"],[3455,"chrono_tz::timezones"],[3456,"core::cmp"],[3457,"polars_core::frame::group_by::proxy"],[3458,"polars_core::datatypes::any_value"],[3459,"chrono::naive::datetime"],[3460,"polars_plan::dsl::functions::selectors"],[3461,"polars_plan::dsl::functions::horizontal"],[3462,"polars_plan::dsl::functions::arity"],[3463,"polars_plan::dsl"],[3464,"polars_plan::dsl::functions::range"],[3465,"polars_plan::dsl::functions::index"],[3466,"polars_plan::dsl::functions::coerce"],[3467,"polars_plan::dsl::functions::syntactic_sugar"],[3468,"polars_plan::dsl::functions::business"],[3469,"polars_plan::dsl::functions::concat"],[3470,"polars_plan::dsl::functions::correlation"],[3471,"polars_plan::dsl::functions::repeat"],[3472,"polars_lazy::physical_plan::planner::lp"]],"i":[0,0,0,0,0,0,27,5,0,36,5,54,54,40,5,54,54,27,27,27,66,27,0,27,27,27,58,58,56,5,27,0,27,0,27,5,56,27,0,0,57,27,56,0,0,27,27,5,5,56,27,58,58,58,56,27,36,58,27,27,27,27,27,27,56,56,27,56,0,56,56,27,40,27,27,53,5,56,0,58,27,40,40,27,27,27,27,5,0,27,5,65,0,0,0,27,58,58,58,5,0,0,27,27,5,58,36,27,40,27,5,0,0,27,5,27,57,55,0,65,40,40,27,58,58,58,27,56,36,5,27,27,0,54,54,54,54,54,54,54,56,54,54,54,54,54,56,65,0,58,58,5,27,36,5,58,58,66,27,0,0,5,27,27,40,40,27,58,40,40,36,27,36,27,36,0,56,56,56,36,27,40,56,27,40,56,56,56,40,36,53,56,27,0,54,40,40,5,27,0,40,56,64,58,58,27,27,27,40,27,0,27,36,56,27,27,27,27,27,27,5,0,27,58,27,56,27,58,27,64,0,27,27,56,27,27,27,56,5,0,0,27,27,27,27,27,27,5,58,5,5,0,58,58,58,57,58,36,27,0,58,58,58,58,58,58,0,27,0,5,36,27,58,27,0,5,0,56,56,58,58,58,27,56,27,27,56,56,56,56,56,56,56,27,40,56,0,27,27,27,58,0,27,36,56,56,0,5,5,0,0,56,40,56,58,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,4,4,4,4,5,5,5,5,0,9,10,5,0,63,59,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,63,5,34,36,0,0,5,0,5,0,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,5,0,62,44,46,34,47,46,0,5,0,5,5,5,5,5,5,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,69,69,5,0,0,0,0,59,60,61,5,17,17,17,59,60,62,63,64,65,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,36,5,53,40,17,17,17,54,55,56,57,58,27,61,62,63,64,65,66,10,5,5,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,10,5,0,5,0,0,0,5,36,5,5,53,40,17,17,54,55,56,57,58,27,61,62,63,64,65,66,5,5,5,5,53,53,53,40,40,40,54,54,54,55,55,55,56,56,56,57,57,57,58,58,58,61,61,61,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,81,81,5,5,5,5,62,5,5,5,5,5,83,83,83,5,5,5,5,0,10,5,5,17,5,5,34,47,44,87,5,5,53,40,40,17,54,54,55,55,56,56,57,57,58,58,27,27,59,60,61,62,63,64,65,66,46,0,63,62,0,5,48,9,32,10,4,107,83,49,50,51,52,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,53,40,17,17,17,17,17,17,17,17,17,17,17,17,54,55,56,57,58,27,27,27,27,27,59,60,61,62,63,64,64,65,66,46,17,46,0,5,0,10,5,10,5,9,10,5,48,75,15,32,34,87,5,5,4,36,5,5,53,40,54,55,56,57,58,27,61,62,63,64,65,66,10,5,5,59,60,5,0,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,46,0,0,5,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,104,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,83,107,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,107,5,0,5,32,32,17,17,5,17,107,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,59,60,60,0,9,10,5,0,61,59,60,5,59,5,9,10,5,5,46,5,5,60,5,5,5,32,32,17,59,60,46,5,5,0,5,0,5,46,5,50,52,4,5,5,5,5,5,0,5,4,5,107,107,5,0,5,5,0,5,5,5,0,5,5,83,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,63,63,17,5,10,10,5,5,59,60,36,5,53,40,17,17,17,54,55,56,57,58,27,61,62,63,64,65,66,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,62,5,0,5,5,107,107,0,9,10,5,0,17,10,5,5,5,0,49,51,0,59,60,59,10,5,9,107,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,5,32,5,40,54,55,56,57,58,27,9,10,107,5,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,32,32,5,32,34,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,48,9,32,10,4,107,83,49,50,51,52,36,5,53,40,17,54,55,56,57,58,27,59,60,61,62,63,64,65,66,46,60,0,50,52,61,59,59,60,32,83,60,59,60,59,60,59,60,60,59,60,59,60,32,32,59,60,59,59,60,59,5,59,200,201,202,200,201,202,200,203,204,205,206,207,208,208,209,210,206,211,212,213,214,215,211,210,213,207,216,215,217,216,216,217,209,213,214,215,214,215,214,212,210,217,206,208,212,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,255,255,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,27,54,54,54,54,27,27,27,27,27,27,27,58,58,56,27,27,0,27,56,27,0,57,27,56,27,27,56,27,58,58,58,56,27,58,27,27,27,27,27,27,56,56,27,56,56,56,27,27,27,56,58,27,27,27,27,27,27,27,58,58,58,27,27,58,27,27,0,27,27,57,55,27,58,58,58,27,56,27,27,54,54,54,54,54,54,54,56,54,54,54,54,54,56,58,58,27,58,58,27,27,27,27,58,27,27,56,56,56,27,56,27,56,56,56,56,27,54,27,56,58,58,27,27,27,27,0,27,56,27,27,27,27,27,27,27,58,27,56,27,58,27,27,27,56,27,27,27,56,27,27,27,27,27,27,58,58,58,58,57,58,27,0,58,58,58,58,58,58,27,27,58,27,0,56,56,58,58,58,27,56,27,27,56,56,56,56,56,56,56,27,56,27,27,27,58,27,56,56,56,56,58,0,0,0,0,0,203,204,205,218,219,220,221,222,223,224,225,226,227,227,221,222,218,221,222,218,222,218,228,229,223,230,231,232,219,231,233,234,235,236,232,218,237,238,239,240,241,242,233,230,232,243,244,245,246,247,248,249,250,245,246,251,248,249,250,252,253,254,254,251,247,252,253,255,255,0,55,57,57,0,57,129,129,129,129,0,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,0,0,0,0,59,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,60,0,0,0,0,0,59,60,0,0,0,0,0,0,0,0,0,59,60,60,0,59,60,59,60,0,0,0,0,0,0,0,59,60,0,0,0,0,59,60,59,60,59,0,0,0,0,138,110,138,110,138,110,138,138,138,110,138,110,138,138,110,138,138,138,138,138,138,110,138,138,110,110,138,110,138,110,138,138,110,138,110,138,110,110,138,110,138,0,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,124,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,135,146,150,155,156,148,157,158,135,135,146,147,148,135,135,146,148,147,153,135,146,150,155,156,148,157,158,147,153,135,146,150,155,156,148,157,158,135,135,156,157,153,135,135,153,135,146,150,155,156,148,157,158,153,135,146,150,155,156,148,157,158,159,159,156,157,168,158,147,135,135,168,158,168,158,159,159,155,135,135,135,150,156,157,158,147,153,135,146,150,155,156,148,157,158,147,153,135,146,150,155,156,148,157,158,135,135,135,135,147,153,153,135,135,146,150,155,156,148,157,158,135,168,158,135,135,168,158,153,135,153,168,158,135,135,135,147,159,159,155,159,155,148,135,158,147,147,153,135,135,135,146,150,155,156,148,157,158,135,135,159,159,155,157,135,135,135,146,157,147,150,147,153,135,146,150,155,156,148,157,158,135,147,153,135,146,150,155,156,148,157,158,159,159,135,135,147,135,167,135,135,147,135,135,146,148,157,135,135,135,135,135,135,156,135,135,159,155,148,150,156,157,150,147,155,148,155,148,135,147,135,157,159,155,148,159,155,148,0,168,158,135,168,158,135,159,155,148,156,157,135,135,147,135,168,158,159,155,148,150,156,157,148,135,135,135,135,135,135,148,150,135,135,135,135,135,135,135,168,158,135,135,135,135,135,135,150,135,168,158,135,135,135,168,158,147,135,135,146,135,135,135,153,135,146,150,155,156,148,157,158,135,147,153,135,146,150,155,156,148,157,158,147,153,135,146,150,155,156,148,157,158,168,158,147,153,135,146,150,155,156,148,157,158,135,135,135,157,147,135,147,153,135,146,150,155,156,148,157,158,147,148,155,155,135,135,135,135,135,135,155,135,155,155,155,155,155,155,155,148,155,148,155,155,159,155,155,148,148,155,135,159,155,148,159,155,148,135,135,155,155,159,155,148,135,159,135,155,155,148,148,155,148,155,155,135,155,155,135,135,155,155,135,135,0,0,0,0,0,0,188,188,188,188,188,186,188,188,188,188,188,188,188,188,0,0,0,0,164,164,191,192,192,77,164,0,77,192,192,191,77,0,0,192,0,77,77,192,192,192,164,77,77,77,77,164,192,192,192,192,192,0,77,0,0,0,0,164,0,0,182,182,77,191,191,0,0,192,182,182,191,0,0,77,192,0,0,0,77,77,164,192,77,77,77,192,192,192,192,192,192,192,77,0,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,77,72,72,72,149,149,149,149,175,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,77,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,77,163,115,72,166,72,176,178,77,178,72,72,163,115,175,166,182,176,177,114,178,193,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,114,77,77,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,77,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,163,163,163,115,115,115,72,72,72,175,175,175,166,166,166,164,164,164,182,182,182,176,176,176,177,177,177,178,178,178,193,193,193,137,137,137,163,163,115,72,72,149,175,166,164,164,182,182,176,177,191,114,178,192,193,137,193,163,115,72,173,175,166,166,164,182,197,176,177,191,114,178,192,193,137,77,137,192,195,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,166,175,163,175,163,115,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,164,72,72,182,72,166,163,108,72,197,192,175,176,177,178,192,114,72,72,72,173,72,182,72,72,72,166,163,115,173,137,72,72,72,163,115,173,137,195,178,149,149,173,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,77,175,166,193,166,163,178,166,166,77,192,163,115,72,175,166,164,182,176,177,191,114,178,192,193,137,77,72,164,182,137,72,72,72,72,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,192,193,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,166,163,115,72,173,175,166,164,182,197,176,177,191,114,178,192,193,137,77,72,72,166,173,166,256,256,257,258,259,260,261,262,263,264,265,265,266,259,267,259,263,256,264,268,258,269,266,260,270,271,271,257,272,256,271,269,256,262,269,273,263,256,271,264,268,272,261,265,270,267,265,261,271,265,261,261,258,258,262,274,274,274],"f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000{hj}{{hj}{{n{jl}}}}00{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000000{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0`{jF`}{jj}0{{jjj}j}{{jj}j}0{{{b{Fb}}}Fb}{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fj}}}Fj}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Cf}}}Cf}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hf{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHh}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HjjHlAf}j}0{{j{Dj{Hn}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjI`Ib}j}{Gfj}{{jjI`Ib{Bh{Id}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{If}}}}}}{{}Gf}{{}Gh}{{}Gl}{{}Gn}{{}H`}{{}Hb}{jj}{Hl{{b{c}}}{}}00000000000000{{{b{{Bb{c}}}}}b{}}1111111111111111{Hl{{b{C`c}}}{}}000000000000000000000000000000{c{{n{Dh}}}Ih}{c{{n{j}}}Ih}{c{{n{Fj}}}Ih}{c{{n{E`}}}Ih}{c{{n{{Bb{{B`{Ij}}}}}}}Ih}{c{{n{{Bb{{B`{Dd}}}}}}}Ih}{c{{n{{Bb{Bd}}}}}Ih}{c{{n{Fl}}}Ih}{c{{n{Fn}}}Ih}{c{{n{G`}}}Ih}{c{{n{Gb}}}Ih}{c{{n{Gd}}}Ih}{c{{n{Cf}}}Ih}{c{{n{Gj}}}Ih}{c{{n{Gl}}}Ih}{c{{n{Gn}}}Ih}{c{{n{H`}}}Ih}{c{{n{Hb}}}Ih}{c{{n{Hd}}}Ih}{{AdChIl}j}{{jChIl}j}{{jj}}{{jc}j{{Al{j}}}}{Hlf}000000000000000000000000000000{jj}{Adj}1`{jIn}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Ghj}{{jHnAf}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fj}}{b{Fj}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJ`}{{{b{Fl}}{b{Fl}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gj}}{b{Gj}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000{{JbjAf}j}0{{jJd}j}{{jjI`}j}11`{{jc}j{{Hf{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JfCh}j}{{Jf{b{A`}}}j}{{Jf{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJh}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{En}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Eh}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Jn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{j}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Fj}}{b{C`Jj}}}{{n{fJl}}}}{{{b{E`}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{{Bb{c}}}}{b{C`Jj}}}{{n{fJl}}}{}}{{{b{Fl}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Fn}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{G`}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Gb}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Gd}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Cf}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{Gf}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gh}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gj}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gl}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Gn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{H`}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Hb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Hd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{El}}{b{C`Jj}}}{{n{fJl}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{K`j}{Kbj}{Kdj}{Dhj}4{Dlj}{Chj}{Efj}{Afj}{Kfj}{{{b{A`}}}j}{Hhj}{Hnj}{Khj}=={Fl{{Bb{{B`{Dd}}}}}}{Kj{{Bb{{B`{Dd}}}}}}{Gd{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Kn{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{cc{}}{Ld{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}33333{FnCf}4{KjCf}{GdCf}{FlCf}777777{HbH`}888{Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lf}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHlHl}j}{{AbjAf}j}43{F`j}{{{b{If}}{b{Lh}}Lj{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lh}}Lj{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hl}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{Jn}}{b{Lh}}}{{n{{B`{Lh}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLl}{{jDlDlDlDl}j}{{{b{j}}{b{C`c}}}fLl}{{{b{Fj}}{b{C`c}}}fLl}{{{b{E`}}{b{C`c}}}fLl}{{{b{Fl}}{b{C`c}}}fLl}{{{b{Fn}}{b{C`c}}}fLl}{{{b{G`}}{b{C`c}}}fLl}{{{b{Gb}}{b{C`c}}}fLl}{{{b{Gd}}{b{C`c}}}fLl}{{{b{Cf}}{b{C`c}}}fLl}{{{b{Gj}}{b{C`c}}}fLl}{{{b{Gl}}{b{C`c}}}fLl}{{{b{Gn}}{b{C`c}}}fLl}{{{b{H`}}{b{C`c}}}fLl}{{{b{Hb}}{b{C`c}}}fLl}{{{b{Hd}}{b{C`c}}}fLl}{{Adj}j}{{j{Bh{Hl}}}j}{{j{Bh{j}}{Bh{Hl}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hl}000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jLn}j}{{jj}j}{ce{}{}}000000000000000000000000000000{{{b{j}}}}{M`Ad}{AdAd}{h{{n{{`{Mb}}l}}}}{{jccMd}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jfj}{Mfj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMh}{{jHn}j}3;;3;;{{Mfc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mf{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMlAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMf}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gf}{{}Gh}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{Mn{{b{j}}}}}}}f}{{j{b{C`{Mn{j}}}}}f}=={Chj}>`8{{Fdc}j{{Al{j}}}}{{Fhc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{N`{eCl}}}}Hb}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHh}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mf{b{A`}}}j}05`{{j{Dj{Hn}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHl{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNb}j}{{jjNb}j}9{{jNd{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jf{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hd}j}`{Abj}{Adj}{jj}00{{jNf}j}{{jjGj}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nh}j}{{jHlc}j{{Cd{{b{C`{Nl{Nj}}}}}{{Bf{{Bh{Hn}}}}}}BlBnNn}}{{jNh}j}{{jjO`}j}101010{{jNbHnNh}j}{{jjNbHnO`}j}{{jHlAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKb}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOb}j{{Al{j}}}}``{{{b{Dh}}c}nOd}{{{b{j}}c}nOd}{{{b{Fj}}c}nOd}{{{b{E`}}c}nOd}{{{b{{Bb{{B`{Ij}}}}}}c}nOd}{{{b{{Bb{Bd}}}}c}nOd}{{{b{{Bb{{B`{Dd}}}}}}c}nOd}{{{b{Fl}}c}nOd}{{{b{Fn}}c}nOd}{{{b{G`}}c}nOd}{{{b{Gb}}c}nOd}{{{b{Gd}}c}nOd}{{{b{Cf}}c}nOd}{{{b{Gj}}c}nOd}{{{b{Gl}}c}nOd}{{{b{Gn}}c}nOd}{{{b{H`}}c}nOd}{{{b{Hb}}c}nOd}{{{b{Hd}}c}nOd}{{Adc}j{{Al{j}}}}0{{jOf}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHhAf}j}8{{AbHh}j}{{AdHh}j}{{jHh}j}{jOh}`{{jCj}j}`{jJf}{{jj}}{{Mf{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hl}}}j}44{{jjj}j}{{Fbc}Fd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{jjI`Ib}j}```{{AdHl}j}{{{b{j}}{b{Lh}}Lj}{{n{Dbl}}}}<{Mfj}{{{b{c}}}e{}{}}00000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}0000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOj{Bh{{B`{Bj}}}}Hl}j}5{{jjCl}j}{{jcgCn}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Mj{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hh}}}}}{{n{fl}}}}{{{b{c}}}Ol{}}000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEj}j}{{AbHh}j}{{AdHh}j}{{jHh}j}{ce{}{}}000000000000000000000000000000`{cFb{{Al{j}}}}{{Fdc}Ff{{Al{j}}}}{{Fhc}Ff{{Al{j}}}}`{{Gfj}Gf}0{{Ghj}Gh}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jf{Dj{j}}}j}{{Ghjjj}Gh}{{Gfjjj}Gf}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GfId}Gf}{{Gf{Bh{Ej}}}Gf}89{{jc}j{{Al{j}}}}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{Hlf}3{cc{}}87{{}Hl}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}Ol{}}2``{{Inj{Ed{Af}}{Dj{Ef}}On}j}{Inj}<;{{InId}j}1{{InjId}j}{{InEj}j}333<;:393873333333333{{Inj}j}44{{In{Bh{Ej}}jA@`}j}15{{In{b{A`}}}j}65066666662998:6656```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@b}}}A@b}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{c{{n{A@b}}}Ih}{Hlf}{{{b{A@b}}{b{A@b}}}Af}{{{b{A@b}}{b{C`Jj}}}{{n{fJl}}}}0{cc{}}{{{b{A@b}}{b{C`c}}}fLl}{{}Hl}{ce{}{}}{{{b{A@b}}c}nOd}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Ol{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{c{{n{A@d}}}Ih}{Hlf}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jj}}}{{n{fJl}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLl}{{}Hl}{ce{}{}}{{{b{A@d}}c}nOd}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Ol{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{c{{n{A@f}}}Ih}{Hlf}{{{b{A@f}}{b{A@f}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@f}}{b{C`Jj}}}{{n{fJl}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLl}{{}Hl}{ce{}{}}{{{b{A@f}}c}nOd}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}Ol{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@j{{Dj{A@h}}}}}{{AA`{}{{A@l{A@n}}}}}}{cj{{Hf{Ej}}}}{{cAAb}{{A@j{A@n}}}{{Aj{{Ah{A@n}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHh}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjI`Ib}j}0{Gfj}{{jjI`Ib{Bh{Id}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Ghj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHh}j}{{{b{A`}}jNb}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGj}j}0``{{jjHhAf}j}6{{jjI`Ib}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Ml}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAd}}A@h}{{n{A@hl}}}}{{{b{AAd}}}AAd}{{{b{c}}{b{C`e}}}f{}{}}{Hl{{b{c}}}{}}0{Hl{{b{C`c}}}{}}0{c{{n{AAd}}}Ih}{Hlf}0{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAd}}{b{C`Jj}}}{{n{fJl}}}}{cc{}}{{{AAh{AAf}}}AAd}1{{{b{Ml}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hl}0{ce{}{}}0{{{AAh{AAf}}{Bh{Cj}}AfAf}Ml}{{{b{AAd}}c}nOd}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Ml}}{b{C`{Dj{Hh}}}}}{{n{fl}}}}{{{b{c}}}Ol{}}066`{{OhAf}j}{Ohj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OhjAf}j}{{Ohj}j}1{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{Hlf}3{{OhjHl}j}4{{Oh{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}Hl}{ce{}{}}{{Oh{b{A`}}Af}j}{{Oh{Bh{Cj}}{Bh{Hl}}}j}:>>{{OhHlAAj}j}0{{OhjjAf}j}0{{OhjjAfCh}j}{Ohj}{{Ohjj}j}?;;?;??????{{OhCjGlj}j}{{Ohj}j}{{OhGl}j}{{Oh{Bh{Id}}{Bh{Ej}}Glj}j}{{OhHl}j}{{OhjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}Ol{}}?6````````````````````{{{b{c}}d}f{}}00000000{{A@nc}{{A@j{A@h}}}{{Bj{AAl{b{C`{AB`{AAn}}}}{b{C`{AB`{ABb}}}}}{{Bf{{A@j{f}}}}}}}}{{A@nAf}A@n}{{ABdc}A@n{{Aj{{Ah{j}}}}}}{{ABfAf}ABf}{{{b{ABh}}}Af}{{{B`{ABj}}ABl}{{A@j{A@n}}}}{{A@nA@ncc}A@n{{Al{j}}}}{{ABdcABn}A@n{{Bj{A@h}{{Bf{{A@j{A@h}}}}}}BlBn}}{{{b{ABh}}}{{b{Df}}}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{A@nAC`cCn}A@n{{Aj{{Ah{j}}}}}}{A@nA@n}``{{{b{ACb}}}f}{{A@n{ACd{{b{A`}}Cj}}Af}A@n}{{A@nCjAf}A@n}{{{b{ACb}}}ACb}{{{b{A@n}}}A@n}{{{b{ABd}}}ABd}{{{b{ABl}}}ABl}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ABh}}}ABh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{ACn}}}{{Bh{{b{AD`}}}}}}0````{{ABfADb}ABf}{A@n{{A@j{A@h}}}}{A@n{{A@j{ACb}}}}````{{{b{ACn}}{Dj{A@n}}}{{A@j{A@n}}}}0{{{b{ACf}}{Dj{A@n}}}{{A@j{A@n}}}}{A@nA@n}{{A@nA@n{Bh{Ej}}}A@n}{{}A@n}{{}ABl}{{}ACh}{{}ACj}{{}ACl}{Hl{{b{c}}}{}}000000000{Hl{{b{C`c}}}{}}000000000{{{b{A@n}}}{{A@j{Ej}}}}000{Hlf}{{{b{C`ACb}}}f}11{{A@ne}A@n{{Aj{A`}}}{{ADd{}{{A@l{c}}}}}}2222222{{A@n{Bh{{Dj{j}}}}}A@n}``{{{b{A@n}}Af}{{A@j{Ej}}}}{{A@ne}A@n{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACb}}}{{Bh{{A@j{A@h}}}}}}{{A@nHl}{{A@j{A@h}}}}{{{b{ACb}}}{{A@j{A@h}}}}``{{A@nc}A@n{{Al{j}}}}0{{A@nj}A@n}{ABfA@n}{ACn{{A@j{A@n}}}}0{ACf{{A@j{A@n}}}}10{ABh{{A@j{A@n}}}}{A@nA@n}{{{b{ACl}}{b{C`Jj}}}{{n{fJl}}}}{{ABfAf}ABf}{cc{}}00{IjA@n}{ABdA@n}2222222{{A@nA@ncc}A@n{{Al{j}}}}{{{b{A@n}}}ACl}{{{b{ACn}}}Af}0{{{b{ACf}}}Af}`{{A@ne}ABd{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{A@njcADf}ABd{{Aj{{Ah{j}}}}}}1{{ABd{Bh{Hl}}}A@n}`{{ABfADh}ABf}`{{}Hl}0000000008{ce{}{}}000000000{{{b{ACn}}}{{A@j{{Bh{ADj}}}}}}0{{A@nA@nccADl}A@n{{Aj{{Ah{j}}}}}}{A@nABf}{{ABfAf}ABf}{A@nA@n}{ADnA@n}1?{{ABfc}ABf{{Aj{{Ah{j}}}}}}{{A@nAC`}A@n}``{{ABhAf}ABh}`{{A@ncAE`{Bh{{B`{Jn}}}}{Bh{{b{A`}}}}}A@n{{Bj{A@h}{{Bf{{A@j{A@h}}}}}}BlBn}}{{A@nAAdAE`{Bh{ABn}}Af}A@n}666{{A@nAEb}A@n}`{{A@nA@n{b{A`}}}{{A@j{A@n}}}}8{{{b{ACn}}}{{Bh{Hl}}}}{{{b{ACf}}}{{Bh{Hl}}}}{{{b{ABh}}}{{Bh{Hl}}}}````={cACf{{Aj{AEd}}}}{cABh{{Aj{AEd}}}}{{{B`{{Ah{AEf}}}}}ACf}{{{B`{{Ah{AEf}}}}}ABh}?={{A@n{b{C`{AB`{AAn}}}}{b{C`{AB`{ABb}}}}}{{A@j{AAl}}}}`{{{b{ACn}}}{{b{AEd}}}}{{{b{ACf}}}{{b{AEd}}}}{{{b{ABh}}}{{b{AEd}}}}{{{b{ACn}}}{{b{{Ah{AEf}}}}}}{{{b{ACf}}}{{b{{Ah{AEf}}}}}}{{{b{ABh}}}{{b{{Ah{AEf}}}}}}```{A@n{{A@j{{N`{A@hA@h}}}}}}``{{A@njNb}A@n}{{{b{ACn}}}Af}{{{b{ACf}}}Af}{{{b{ABh}}}Af}``{{A@nei}A@n{{Aj{A`}}}{{ADd{}{{A@l{c}}}}}{{Aj{A`}}}{{ADd{}{{A@l{g}}}}}}{A@nA@n}{{ABfc}ABf{{Aj{{Ah{j}}}}}}{{A@njcNf}ABd{{Aj{{Ah{j}}}}}}``{{{b{ACn}}}{{Bh{{b{AEh}}}}}}{{{b{ACf}}}{{Bh{{b{AEh}}}}}}{{{b{ABh}}}{{Bh{{b{AEh}}}}}}```{{{b{ABh}}AEj}{{A@j{A@h}}}}{{LhAElAf}A@n}{{cACh}{{A@j{A@n}}}{{Aj{AEd}}}}{{{B`{{Ah{AEf}}}}ACh}{{A@j{A@n}}}}{{cACj}{{A@j{A@n}}}{{Aj{AEd}}}}{{{B`{{Ah{AEf}}}}ACj}{{A@j{A@n}}}}{{{b{C`A@n}}}{{A@j{ABn}}}}{{{b{ABh}}{Bh{Hl}}}{{A@j{ABn}}}}`{{{b{C`A@n}}{b{C`{AB`{AAn}}}}{b{C`{AB`{ABb}}}}}{{A@j{ABn}}}}{{A@nc}A@n{{Aj{{Ah{j}}}}}}0{{A@nA@ncc}A@n{{Al{j}}}}{{{b{A@n}}{AB`{AAn}}{AB`{ABb}}}f}{{A@nc}A@n{{Al{j}}}}{{A@nce}A@n{{Al{j}}}{{Al{j}}}}``{{A@nAEfAEn}{{A@j{f}}}}{{A@nAEfAF`}{{A@j{f}}}}{{A@nEj{Bh{AD`}}AF`}{{A@j{f}}}}{{A@nAEfAFb}{{A@j{f}}}}{{A@nAEfAFd}{{A@j{f}}}}{{A@nEj{Bh{AD`}}AFd}{{A@j{f}}}}`{{A@nChAC`}A@n}``{{A@ncCn}A@n{{Hf{AFf}}}}{{A@ncCn}A@n{{Aj{{Ah{j}}}}}}{{A@nHh}A@n}``{{ABfc}ABf{{Aj{A`}}}}{A@nA@n}{{A@nAC`}A@n}{{ABd{Bh{Hl}}}A@n}{A@n{{A@j{AFh}}}}0{{{b{A@n}}Af}{{A@j{Ej}}}}{{{b{c}}}e{}{}}00000000{{A@nAC`cCn}A@n{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}Ol{}}000000000{{A@n{Bh{{Dj{Ej}}}}AFj}A@n}0{{A@ne}A@n{{Aj{A`}}}{{ADd{}{{A@l{c}}}}}}`{{ABfAFl}ABf}={ce{}{}}000000000{{ABfA@n}ABf}{{ABh{Bh{AFn}}}ABh}{{ACfAf}ACf}{{ACf{Bh{AD`}}}ACf}{{A@nAf}A@n}{{A@nj}A@n}{{A@nc}A@n{{Aj{{Ah{j}}}}}}022{{ACf{Bh{{b{A`}}}}}ACf}{{A@nc}A@n{{Aj{{Ah{A@n}}}}}}6{{ACf{Bh{ABn}}}ACf}{{ACfAG`}ACf}{{ACfHh}ACf}999{{ABhAf}ABh}{{ACf{Bh{Hl}}}ACf}{{ABh{Bh{Hl}}}ABh}<<{{ACnc}ACn{{Al{{Bh{Hl}}}}}}2{{ACfc}ACf{{Al{{Bh{Hl}}}}}}2{{ABhc}ABh{{Al{{Bh{Hl}}}}}}{{ACf{Bh{AGb}}}ACf}{{A@nACl}A@n}{{ACnAEf}ACn}{{ACfAEf}ACf}{{ABhAEf}ABh}{{ACn{B`{{Ah{AEf}}}}}ACn}{{ACf{B`{{Ah{AEf}}}}}ACf}{{ABh{B`{{Ah{AEf}}}}}ABh}{{A@nAf}A@n}0{{ACf{Bh{Hh}}}ACf}{{ACfAf}ACf}{{ACnAf}ACn}1{{ABhAf}ABh}4{{ACnc}ACn{{Al{{Bh{AEh}}}}}}{{A@n{b{A`}}{Bh{AC`}}}A@n}{{ACfc}ACf{{Al{{Bh{AEh}}}}}}{{ACf{Bh{AEh}}}ACf}{{ABh{Bh{AEh}}}ABh}{{ABhc}ABh{{Al{{Bh{AEh}}}}}}{{ACf{Bh{ABn}}}ACf}{{ABh{Bh{ABn}}}ABh}{{ACfc}{{A@j{ACf}}}{{Bj{Lh}{{Bf{{A@j{Lh}}}}}}}}{{ACfHh}ACf}>{{ACfHl}ACf}0??==?{A@nA@n}{{{b{A@h}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@j{A@h}}}{{Aj{A`}}}{{ADd{}{{A@l{c}}}}}{{Aj{A`}}}{{ADd{}{{A@l{g}}}}}{{Aj{A`}}}{{ADd{}{{A@l{k}}}}}}0````{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{Hl{{b{c}}}{}}{Hl{{b{C`c}}}{}}{Hlf}{{{b{C`AGd}}{b{C`AGf}}}{{A@j{A@h}}}}{{{b{C`AGh}}{b{C`AGf}}}{{A@j{A@h}}}}{cc{}}{{}Hl}{ce{}{}}{c{{n{e}}}{}{}}0{{{b{c}}}Ol{}}2{{AAl{b{C`{AB`{AAn}}}}{b{C`{AB`{ABb}}}}}{{A@j{{AGj{AGd}}}}}}```````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{I`}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{{{b{ABj}}}Af}00{{{b{ABj}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADf}}}ADf}{{{b{Nf}}}Nf}{{{b{I`}}}I`}{{{b{AEn}}}AEn}{{{b{ADl}}}ADl}{{{b{ADh}}}ADh}{{{b{AFl}}}AFl}{{{b{AF`}}}AF`}{{{b{AFb}}}AFb}{{{b{AGn}}}AGn}{{{b{Nd}}}Nd}{{{b{AFd}}}AFd}{{{b{AH`}}}AH`}{{{b{AHb}}}AHb}{{{b{AAb}}}AAb}{{{b{Ij}}}Ij}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{I`}}{b{I`}}}AHd}`{{{b{c}}{b{e}}}AHd{}{}}``{{{b{Ij}}}{{n{{B`{Lh}}l}}}}`{{{b{I`}}}Ch}{{{b{I`}}}Af}{{}ADf}{{}Nf}{{}AEn}{{}ADl}{{}AFl}{{}AF`}{{}AFb}{{}Nd}{{}AFd}{{}AHb}{{}AAb}{{}Ij}{Hl{{b{c}}}{}}00000000000000000{Hl{{b{C`c}}}{}}00000000000000000`{{{b{Ij}}}{{n{Ejl}}}}0{c{{n{ADf}}}Ih}{c{{n{Nf}}}Ih}{c{{n{I`}}}Ih}{c{{n{AEn}}}Ih}{c{{n{ADl}}}Ih}{c{{n{ADh}}}Ih}{c{{n{AFl}}}Ih}{c{{n{AF`}}}Ih}{c{{n{AFb}}}Ih}{c{{n{AGn}}}Ih}{c{{n{Nd}}}Ih}{c{{n{AFd}}}Ih}{c{{n{AH`}}}Ih}{c{{n{AHb}}}Ih}{c{{n{AAb}}}Ih}{c{{n{Ij}}}Ih}`{{{b{Ij}}}{{n{{`{Mb}}l}}}}{Hlf}00000000000000000{{{b{ADf}}{b{ADf}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{I`}}{b{I`}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{ADh}}{b{ADh}}}Af}{{{b{AFl}}{b{AFl}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AGn}}{b{AGn}}}Af}{{{b{Nd}}{b{Nd}}}Af}{{{b{AFd}}{b{AFd}}}Af}{{{b{AH`}}{b{AH`}}}Af}{{{b{AHb}}{b{AHb}}}Af}{{{b{AAb}}{b{AAb}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADf}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Nf}}{b{C`Jj}}}{{n{fJl}}}}{{{b{I`}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{ABj}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AEn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{ADl}}{b{C`Jj}}}{{n{fJl}}}}{{{b{ADh}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{AFl}}{b{C`Jj}}}{{n{fJl}}}}0{{{b{AF`}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AFb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AGn}}{b{C`Jj}}}{{n{fJl}}}}{{{b{Nd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AFd}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AH`}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AHb}}{b{C`Jj}}}{{n{fJl}}}}{{{b{AAb}}{b{C`Jj}}}{{n{fJl}}}}`{cc{}}0000{ADhADl}1111111111111`{{{b{AH`}}}Cj}{{{b{AHf}}{Dj{Bd}}{b{ADf}}}{{n{{N`{Bd{Dj{Bd}}AHh}}l}}}}{{{b{ADf}}{b{C`c}}}fLl}{{{b{Nf}}{b{C`c}}}fLl}{{{b{I`}}{b{C`c}}}fLl}{{{b{AEn}}{b{C`c}}}fLl}{{{b{ADl}}{b{C`c}}}fLl}{{{b{ADh}}{b{C`c}}}fLl}{{{b{AFl}}{b{C`c}}}fLl}{{{b{AF`}}{b{C`c}}}fLl}{{{b{AFb}}{b{C`c}}}fLl}{{{b{AGn}}{b{C`c}}}fLl}{{{b{Nd}}{b{C`c}}}fLl}{{{b{AFd}}{b{C`c}}}fLl}{{{b{AH`}}{b{C`c}}}fLl}{{{b{AHb}}{b{C`c}}}fLl}{{{b{AAb}}{b{C`c}}}fLl}``````{{}Hl}00000000000000000{ce{}{}}00000000000000000{{{b{ADh}}}Af}{{{b{I`}}{Bh{{b{A`}}}}}Af}{{{b{I`}}}Af}{{{b{AFl}}{b{ADh}}}{{n{fl}}}}1``{Mhj}{I`j}{AHjj}{AH`j}````{AH`AH`}`{{{b{I`}}}Ch}7{{I`Ch}I`}`1{{{b{AFl}}}Af}{I`}:{ChI`}{ADhADl}````{{{b{A`}}}I`}`{{{b{I`}}{b{I`}}}{{Bh{AHd}}}}````{{{b{AHf}}{Dj{Bd}}{b{Nf}}}{{n{{N`{Bd{Dj{Bd}}AHh}}l}}}}`{{{b{ABj}}AEj}{{n{A@hl}}}}{{{b{ABj}}{Bh{Hl}}}{{n{{B`{Lh}}l}}}}`{{{b{ADf}}c}nOd}{{{b{Nf}}c}nOd}{{{b{I`}}c}nOd}{{{b{AEn}}c}nOd}{{{b{ADl}}c}nOd}{{{b{ADh}}c}nOd}{{{b{AFl}}c}nOd}{{{b{AF`}}c}nOd}{{{b{AFb}}c}nOd}{{{b{AGn}}c}nOd}{{{b{Nd}}c}nOd}{{{b{AFd}}c}nOd}{{{b{AH`}}c}nOd}{{{b{AHb}}c}nOd}{{{b{AAb}}c}nOd}{{{b{Ij}}c}nOd}`{{{b{ADl}}}Af}````{{{b{ADl}}}{{b{A`}}}}`{Ij{{n{AFhl}}}}{{{b{AH`}}}{{Bh{AHl}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{I`}}Ch{Bh{{b{AGl}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHn}}}}}{{Bj{AHn}{{Bf{Ch}}}}}}{{{b{I`}}Ch{Bh{{b{AGl}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}0000000000000{AHl{{n{AH`l}}}}1111111111111111111111{{{b{c}}}Ol{}}00000000000000000`{ce{}{}}00000000000000000{{{b{I`}}}Ch}{{{b{I`}}}Af}{{ADlADb}ADl}`{{ADl{Bh{Ej}}}ADl}``````````````````````````````````````````````````````````","D":"GEh","p":[[1,"reference"],[5,"Private",3339],[1,"unit"],[5,"MetaNameSpace",6,3340],[6,"Expr",6,3341],[6,"PolarsError",3342],[6,"Result",3343],[1,"str"],[5,"ArrayNameSpace",6,3344],[5,"ListNameSpace",6,3345],[1,"bool"],[1,"slice"],[10,"AsRef",3346],[10,"Into",3346],[10,"FunctionOutputField",6,3347],[5,"Arc",3348],[5,"SpecialEq",6,3347],[5,"Series",3349],[17,"Output"],[6,"Option",3350],[10,"Fn",3351],[10,"Send",3352],[10,"Sync",3352],[0,"mut"],[6,"VisitRecursion",3353],[10,"FnMut",3351],[6,"FunctionExpr",6,3354],[1,"i64"],[6,"DataType",3355],[5,"SortOptions",3356],[5,"SortMultipleOptions",3356],[5,"FieldsMapper",6,3357],[5,"Field",3358],[10,"SeriesUdf",6,3347],[10,"Any",3359],[6,"AggExpr",6,3341],[5,"Vec",3360],[1,"u64"],[5,"BinaryNameSpace",1578,3361],[6,"Operator",6,3341],[10,"Clone",3362],[1,"array"],[1,"i32"],[10,"RenameAliasFn",6,3347],[5,"String",3363],[5,"UserDefinedFunction",6,3364],[10,"SeriesBinaryUdf",6,3347],[5,"CategoricalNameSpace",6,3365],[5,"When",6,3366],[5,"Then",6,3366],[5,"ChainedWhen",6,3366],[5,"ChainedThen",6,3366],[6,"Excluded",6,3341],[6,"BooleanFunction",6,3367],[6,"CategoricalFunction",6,3368],[6,"TemporalFunction",6,3369],[6,"PowFunction",6,3370],[6,"StringFunction",6,3371],[5,"DatetimeArgs",6,3372],[5,"DurationArgs",6,3372],[5,"RollingCovOptions",6,3373],[5,"StrptimeOptions",6,3373],[5,"JoinOptions",6,3373],[6,"WindowType",6,3373],[6,"WindowMapping",6,3373],[6,"NestedType",6,3373],[10,"IntoVec",3374],[1,"u8"],[10,"ExprEvalExtension",6,3375],[1,"usize"],[1,"f64"],[5,"Duration",2689,3376],[6,"ClosedWindow",3377],[6,"TimeUnit",3378],[10,"BinaryUdfOutputField",6,3347],[10,"Deserializer",3379],[6,"DslPlan",2689,3380],[6,"NullBehavior",3381],[5,"DateLikeNameSpace",1599,3382],[10,"Sized",3352],[10,"ListNameSpaceExtension",6,3383],[5,"EWMOptions",3384],[5,"StructNameSpace",6,3385],[6,"FillNullStrategy",3386],[5,"Formatter",3387],[5,"Error",3387],[10,"UdfSchema",6,3388],[1,"i8"],[1,"u32"],[1,"i16"],[1,"f32"],[1,"u16"],[6,"BinaryFunction",3389],[6,"StructFunction",3390],[6,"BusinessFunction",3391],[6,"RangeFunction",3392],[6,"ListFunction",3393],[6,"ArrayFunction",3394],[5,"FunctionOptions",3395],[5,"Schema",3396],[6,"Context",3380],[10,"Hasher",3397],[6,"InterpolationMethod",3398],[10,"IntoListNameSpace",6,3383],[10,"Display",3387],[6,"ClosedInterval",3399],[5,"ExprNameNameSpace",6,3400],[10,"Literal",2689,3401],[10,"FnOnce",3351],[5,"PythonUdfExpression",2117,3402],[5,"UnitVec",3403],[1,"tuple"],[6,"QuantileInterpolOptions",3404],[5,"RankOptions",2689,3405],[5,"RollingGroupOptions",2689,3406],[5,"RollingOptionsFixedWindow",3407],[5,"Float64Type",3408],[5,"ChunkedArray",3409],[10,"Copy",3352],[5,"RollingOptionsDynamicWindow",3410],[6,"SearchSortedSide",3411],[10,"Serializer",3412],[6,"IsSorted",3413],[5,"StringNameSpace",2162,3414],[6,"ListToStructWidthStrategy",3415],[5,"TypeId",3359],[6,"Roll",3416],[6,"NonExistent",3417],[6,"RollingFunction",1937,3418],[6,"RollingFunctionBy",1969,3419],[6,"TrigonometricFunction",2000,3420],[5,"DataFrame",3421],[8,"PolarsResult",3342],[17,"Item"],[5,"LazyFrame",2229],[10,"IntoParallelIterator",3422],[5,"UnionArgs",2689,3395],[5,"PythonFunction",2117,3402],[5,"PyAny",3423],[5,"Py",3424],[1,"char"],[5,"Node",3425],[6,"IR",3426],[5,"Arena",3425],[6,"AExpr",3427],[5,"LazyGroupBy",2229],[5,"JoinBuilder",2229],[5,"LazyJsonLineReader",2229,3428],[10,"AnonymousScan",2689,3429],[5,"ScanArgsAnonymous",2229,3430],[8,"SchemaRef",3396],[8,"IdxSize",3431],[5,"InProcessQuery",2229,3432],[8,"PlHashMap",3433],[5,"LazyCsvReader",2229,3434],[5,"ScanArgsIpc",2229,3435],[5,"ScanArgsParquet",2229,3436],[5,"OptState",2229,3437],[10,"LazyFileListReader",2229,3438],[5,"CloudOptions",3439],[6,"JoinCoalesce",3440],[10,"IntoIterator",3441],[5,"DynamicGroupOptions",2689,3406],[6,"JoinType",2689,3440],[8,"PathIterator",2229,3438],[5,"JoinArgs",2689,3440],[10,"IntoLazy",2229],[8,"AllowedOptimizations",2229,3437],[5,"MeltArgs",3442],[5,"Path",3443],[5,"PathBuf",3443],[5,"RowIndex",3444],[5,"AnonymousScanArgs",2689,3429],[8,"PyObject",3424],[5,"CsvWriterOptions",2689,3445],[5,"IpcWriterOptions",2689,3446],[5,"JsonWriterOptions",2689,3447],[5,"ParquetWriteOptions",2689,3448],[8,"String",3449],[5,"IRPlan",3426],[6,"UniqueKeepStrategy",3421],[6,"JoinValidation",2689,3440],[8,"NonZeroUsize",3450],[6,"CsvEncoding",3451],[6,"NullValues",3451],[10,"Executor",2672,3452],[5,"ExecutionState",3453],[5,"Dummy",2672,3452],[5,"Box",3454],[6,"Tz",3455],[6,"RankMethod",2689,3405],[6,"LiteralValue",2689,3401],[5,"AnonymousScanOptions",2689,3395],[6,"Ordering",3456],[10,"PolarsTemporalGroupby",2689,3406],[6,"GroupsProxy",3457],[5,"Null",2689,3401],[6,"AnyValue",3458],[5,"NaiveDateTime",3459],[15,"Quantile",1467],[15,"Min",1467],[15,"Max",1467],[15,"IsBetween",1862],[15,"Any",1862],[15,"All",1862],[15,"SortBy",1477],[15,"Filter",1477],[15,"Cast",1477],[15,"Sort",1477],[15,"Gather",1477],[15,"RenameAlias",1477],[15,"Ternary",1477],[15,"Function",1477],[15,"Window",1477],[15,"AnonymousFunction",1477],[15,"Slice",1477],[15,"BinaryExpr",1477],[15,"QCut",1865],[15,"Entropy",1865],[15,"Log",1865],[15,"Hist",1865],[15,"Cut",1865],[15,"Correlation",1865],[15,"Round",1865],[15,"RoundSF",1865],[15,"EwmMeanBy",1865],[15,"Clip",1865],[15,"BackwardFill",1865],[15,"ForwardFill",1865],[15,"Random",1865],[15,"GatherEvery",1865],[15,"ValueCounts",1865],[15,"Rank",1865],[15,"EwmMean",1865],[15,"EwmStd",1865],[15,"EwmVar",1865],[15,"Replace",1865],[15,"CumCount",1865],[15,"CumSum",1865],[15,"CumProd",1865],[15,"CumMin",1865],[15,"CumMax",1865],[15,"TopK",1865],[15,"TopKBy",1865],[15,"ConcatHorizontal",1909],[15,"ConcatVertical",1909],[15,"ExtractGroups",1909],[15,"JsonDecode",1909],[15,"PadStart",1909],[15,"PadEnd",1909],[15,"SplitExact",1909],[15,"Contains",1909],[15,"Find",1909],[15,"Replace",1909],[15,"DatetimeFunction",1929],[15,"GroupBy",3281],[15,"Union",3281],[15,"Sort",3281],[15,"Cache",3281],[15,"ExtContext",3281],[15,"DataFrameScan",3281],[15,"IR",3281],[15,"Select",3281],[15,"HStack",3281],[15,"Scan",3281],[15,"MapFunction",3281],[15,"Filter",3281],[15,"Distinct",3281],[15,"Slice",3281],[15,"Sink",3281],[15,"Join",3281],[15,"HConcat",3281],[15,"PythonScan",3281],[15,"Range",3336]],"r":[[8,3341],[22,3344],[31,3347],[33,3367],[38,3368],[39,3365],[43,3366],[44,3366],[68,3372],[78,3372],[88,3341],[92,3341],[93,3375],[94,3400],[100,3357],[101,3400],[111,3354],[112,3347],[118,3347],[132,3383],[148,3373],[159,3345],[160,3383],[175,3340],[193,3373],[199,3341],[210,3370],[221,3347],[230,3373],[239,3347],[240,3347],[251,3347],[259,3371],[266,3373],[268,3385],[274,3369],[276,3366],[296,3388],[301,3364],[306,3366],[309,3373],[310,3373],[347,3460],[351,3461],[358,3461],[361,3462],[365,3463],[367,3464],[382,3465],[384,3465],[390,3466],[391,3467],[393,3463],[395,3366],[460,3468],[467,3467],[469,3463],[524,3461],[525,3460],[526,3460],[527,3469],[528,3469],[529,3469],[538,3470],[540,3461],[544,3461],[549,3464],[550,3372],[551,3464],[552,3464],[687,3463],[689,3460],[690,3460],[691,3372],[774,3463],[812,3461],[815,3469],[879,3463],[921,3460],[954,3464],[955,3464],[1004,3467],[1006,3467],[1016,3463],[1019,3463],[1023,3401],[1033,3462],[1044,3463],[1047,3463],[1054,3467],[1058,3461],[1059,3467],[1062,3461],[1063,3467],[1071,3467],[1075,3461],[1101,3467],[1103,3463],[1115,3470],[1122,3463],[1125,3467],[1129,3461],[1133,3471],[1145,3470],[1146,3470],[1218,3470],[1226,3463],[1231,3467],[1235,3461],[1241,3366],[1244,3464],[1389,3463],[1436,3366],[1578,3361],[1598,3365],[1599,3382],[1672,3367],[1676,3368],[1722,3354],[1781,3370],[1817,3371],[1828,3369],[1857,3354],[1858,3354],[1859,3354],[1860,3354],[1861,3354],[1931,3368],[1935,3370],[1941,3418],[1973,3419],[2015,3420],[2042,3372],[2043,3372],[2044,3460],[2045,3461],[2047,3461],[2048,3462],[2049,3464],[2050,3465],[2051,3465],[2052,3466],[2053,3467],[2054,3467],[2055,3461],[2056,3460],[2058,3460],[2060,3469],[2063,3469],[2064,3469],[2065,3470],[2066,3461],[2067,3461],[2068,3464],[2069,3464],[2070,3372],[2071,3464],[2072,3464],[2075,3460],[2076,3460],[2077,3372],[2078,3461],[2079,3469],[2082,3460],[2083,3464],[2084,3464],[2085,3467],[2086,3467],[2087,3462],[2088,3467],[2089,3467],[2090,3467],[2094,3467],[2099,3467],[2100,3470],[2101,3467],[2102,3461],[2103,3471],[2104,3470],[2105,3470],[2108,3470],[2109,3467],[2110,3464],[2111,3464],[2117,3402],[2118,3402],[2119,3402],[2120,3402],[2162,3414],[2223,3364],[2229,3437],[2230,3432],[2233,3434],[2234,3438],[2237,3428],[2238,3437],[2239,3438],[2240,3430],[2241,3435],[2242,3436],[2672,3452],[2673,3452],[2688,3472],[2689,3429],[2690,3429],[2691,3395],[2699,3445],[2705,3380],[2706,3376],[2708,3406],[2725,3446],[2727,3440],[2728,3440],[2729,3440],[2730,3447],[2732,3401],[2733,3401],[2739,3401],[2740,3401],[2745,3448],[2746,3406],[2749,3405],[2750,3405],[2751,3406],[2767,3395]],"b":[[557,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[558,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[559,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[634,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[635,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[636,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[694,"impl-Expr"],[695,"impl-PartialEq-for-Expr"],[698,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[699,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[785,"impl-Display-for-Expr"],[786,"impl-Debug-for-Expr"],[788,"impl-Display-for-Operator"],[789,"impl-Debug-for-Operator"],[791,"impl-Display-for-BooleanFunction"],[792,"impl-Debug-for-BooleanFunction"],[793,"impl-Debug-for-CategoricalFunction"],[794,"impl-Display-for-CategoricalFunction"],[795,"impl-Display-for-TemporalFunction"],[796,"impl-Debug-for-TemporalFunction"],[797,"impl-Debug-for-PowFunction"],[798,"impl-Display-for-PowFunction"],[799,"impl-Display-for-StringFunction"],[800,"impl-Debug-for-StringFunction"],[801,"impl-Debug-for-FunctionExpr"],[802,"impl-Display-for-FunctionExpr"],[829,"impl-From%3Ci8%3E-for-Expr"],[830,"impl-From%3Cu32%3E-for-Expr"],[831,"impl-From%3Ci16%3E-for-Expr"],[832,"impl-From%3CAggExpr%3E-for-Expr"],[834,"impl-From%3Cu64%3E-for-Expr"],[835,"impl-From%3Ci64%3E-for-Expr"],[836,"impl-From%3Ci32%3E-for-Expr"],[837,"impl-From%3Cbool%3E-for-Expr"],[838,"impl-From%3Cf32%3E-for-Expr"],[839,"impl-From%3C%26str%3E-for-Expr"],[840,"impl-From%3Cu8%3E-for-Expr"],[841,"impl-From%3Cf64%3E-for-Expr"],[842,"impl-From%3Cu16%3E-for-Expr"],[845,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[846,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[847,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[848,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[849,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[850,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[851,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[852,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[854,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[855,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[856,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[862,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[864,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[865,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[866,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[899,"impl-Expr"],[900,"impl-Hash-for-Expr"],[1183,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1184,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1185,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1956,"impl-Display-for-RollingFunction"],[1957,"impl-Debug-for-RollingFunction"],[1987,"impl-Display-for-RollingFunctionBy"],[1988,"impl-Debug-for-RollingFunctionBy"],[2029,"impl-Display-for-TrigonometricFunction"],[2030,"impl-Debug-for-TrigonometricFunction"],[2393,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2394,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2629,"impl-LazyCsvReader"],[2630,"impl-LazyFileListReader-for-LazyCsvReader"],[2631,"impl-LazyJsonLineReader"],[2632,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2651,"impl-LazyFileListReader-for-LazyCsvReader"],[2652,"impl-LazyCsvReader"],[2653,"impl-LazyJsonLineReader"],[2654,"impl-LazyFileListReader-for-LazyJsonLineReader"],[3012,"impl-Display-for-Duration"],[3013,"impl-Debug-for-Duration"],[3017,"impl-Display-for-JoinType"],[3018,"impl-Debug-for-JoinType"],[3019,"impl-Display-for-JoinValidation"],[3020,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAF8J9QAEABIAGAAPACkAAgAuABYARgAIAFAABwBZAAIAXgAAAGAAFwB5ABoAlQACAJkABgChAA4AsQAUAMcAAwDMACIA8gAJAP0ADwAOAQUAFgEXAC8BAwA0AQAANgEhAFkBAABeAQAAYQEBAGUBAABrAQAAbQEAAHgBAAB7AQAAggEBAIUBAQCKAQAAjQE9AM0BAADPAQAA0QEBANYBAADdAS8AEAIAACoCDAA4AlEAjAIAAI4CHgCuAgAAsAIAALYCAAC4AhAAygIpAPwCAAD/AgEABQMAAAsDAAAOAx4ALgMAAD4DAwBDAwgATgMHAFcDAgBfAwAAYQMCAGoDAABuAwAAcAMAAHUDAQB6AwUAgwMAAIUDDgCXAwEAmwMeAN4DAgDiAwAA9gMAAP4DAAALBAAADgQFABcEAAAaBAAAKgQAAC0EAgA1BAIAOQQDAEIEAQBGBAIATAQBAFgEAABaBAEAYQQAAGMEAABrBAEAcQQBAHQEAAB5BAIAkwQFAJoEFAC4BAAAvwQAAMYEAADLBAAAzQQAAM8EAADVBAAA2gQAANwEAADeBAIA5QQYAP8ECAAMBT0ATAUAAE4FIAB7BQAAfQUfAKAFAQClBQAAsgUAALYFAQC7BRMA0gUBANUFAQDYBQEA2wUFAOIFSAAsBgMAMQYCADYGAgA7BgMAQwYBAEwGAgBSBgAAVAYAAGEGAABwBgMAeAYuAagHAQCrBxoAxwcBAMoHJQDxBwEA9AcGAP8HAAANCAAAGggBACEIAQAsCAIAMAgDADkIAwBBCB0AYAgAAGIIAgBnCAsAdAgDAHsIAgCBCAAAhggCAIsIAQCrCAMAtwgDAL4IAADACA0A0QgBANUIFQDsCAEA8QgRAAUJAQALCQAAEgkAABUJGAAyCQMANwkGAFIJAQBVCQAAWgkBAGUJAgBtCQAAbwkKAIsJAQCQCQEAkwkAAJUJAACaCQEAoAkDAKUJAwCrCQEArgkEALsJAwDICQQAzgkAANIJAgDWCQAA2AkAAOMJAADwCQEA8wkdABMKCQAgCgEAIwoJAC4KAAAwCgAAOAoBAEcKAABJCgAATQoBAFAKAQBcCgAAXwoAAG0KBABzCgYAewoAAH0KCgCLCgAAjgoCAJIKAwCYCgAAmwoAAJ8KAgCmCgAAqAoGALIKAgC2CgAAuQoIAMMKAgDICgAAygoAANAKEwDnCkoANguLAMMLEwDcCwAA6gsAAOwLEQD/CwAAAgwRACYMAQApDAAAKwwAAC4MAwA1DAUAPAwBAEAMAABCDAIARgwBAEoMAgBQDBUAZwykAA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[233,"polars_ops::prelude"],[235,"polars_ops::series"],[286,"polars_ops::chunked_array::binary"],[287,"polars_core::datatypes"],[288,"polars_ops::chunked_array::binary::namespace"],[289,"polars_ops::chunked_array::scatter"],[290,"polars_utils::index"],[291,"polars_core::series"],[292,"polars_error"],[293,"core::marker"],[294,"core::option"],[295,"core::iter::traits::collect"],[296,"polars_ops::chunked_array::list::namespace"],[297,"polars_core::datatypes::aliases"],[298,"polars_core::chunked_array::ops::sort::options"],[299,"polars_core::frame"],[300,"dyn_clone::sealed"],[301,"polars_ops::frame::join::hash_join"],[302,"polars_ops::frame::join::args"],[303,"alloc::string"],[304,"polars_ops::frame::join::cross_join"],[305,"core::fmt"],[306,"core::convert"],[307,"core::hash"],[308,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[309,"polars_arrow::array::primitive"],[310,"core::result"],[311,"core::any"],[312,"polars_ops::series::ops::arg_min_max"],[313,"polars_ops::series::ops"],[314,"polars_core::chunked_array::ops::search_sorted"],[315,"polars_ops::series::ops::various"],[316,"polars_ops::frame::join::general"],[317,"polars_ops::series::ops::clip"],[318,"polars_ops::series::ops::horizontal"],[319,"polars_ops::series::ops::index"],[320,"polars_ops::series::ops::negate"],[321,"polars_ops::series::ops::not"],[322,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}{{{d{Db}}}Bh}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEl}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDd}{{Af{Ch}}}}0","D":"Ef","p":[[10,"AsBinary",4,286],[1,"reference"],[8,"BinaryChunked",287],[10,"BinaryNameSpaceImpl",4,288],[1,"u8"],[1,"slice"],[8,"BooleanChunked",287],[10,"ChunkedSet",4,289],[8,"IdxSize",290],[5,"Series",291],[8,"PolarsResult",292],[10,"Copy",293],[17,"Item"],[6,"Option",294],[10,"IntoIterator",295],[10,"AsList",23],[8,"ListChunked",287],[10,"ListNameSpaceImpl",23,296],[1,"str"],[1,"bool"],[8,"StringChunked",287],[8,"IdxCa",297],[1,"i64"],[1,"usize"],[5,"SortOptions",298],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",299],[5,"Private",300],[1,"unit"],[10,"JoinDispatch",78,301],[8,"LeftJoinIds",78,302],[5,"JoinArgs",78,302],[5,"String",303],[0,"mut"],[6,"JoinCoalesce",78,302],[6,"JoinType",78,302],[6,"JoinValidation",78,302],[10,"CrossJoin",78,304],[1,"tuple"],[8,"ChunkJoinOptIds",78,302],[5,"Formatter",305],[8,"Result",305],[10,"DataFrameJoinOps",78],[10,"AsRef",306],[10,"Hasher",307],[10,"SeriesJoin",78,308],[8,"InnerJoinIds",78,302],[5,"PrimitiveArray",309],[6,"Result",310],[5,"TypeId",311],[10,"ArgAgg",235,312],[10,"SeriesSealed",235,313],[6,"SearchSortedSide",235,314],[10,"SeriesMethods",235,315],[5,"Error",305]],"r":[[4,286],[5,288],[6,289],[24,296],[78,302],[79,302],[82,304],[86,302],[87,302],[88,302],[89,301],[91,302],[92,302],[95,302],[100,308],[105,316],[108,316],[113,316],[141,301],[233,78],[234,74],[236,312],[239,314],[240,315],[241,313],[248,317],[249,317],[250,317],[253,318],[254,319],[270,319],[273,318],[274,318],[275,318],[276,320],[277,321],[278,322],[279,318]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Display-for-JoinValidation"],[175,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPMAEQAAAAgACwABAA8AAwAVAA8AKQA3AGUABQBtABkAiQAoALcADADJAAEAzAAAAM4AHgDuAAUA9gACAPwADgAMAQEAEgEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::logical_plan::options"],[122,"polars_plan::logical_plan"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKKKPFCHHMMOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsMonthEnd","PolarsMonthStart","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","month_end","month_start","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[26,"polars_time::chunkedarray"],[28,"polars_time::chunkedarray::string"],[60,"polars_time::chunkedarray::string::infer"],[85,"polars_time::prelude"],[283,"polars_time::series"],[304,"chrono::naive::datetime"],[305,"polars_time::windows::duration"],[306,"polars_time::windows::group_by"],[307,"polars_core::datatypes::time_unit"],[308,"polars_arrow::legacy::time_zone"],[309,"core::option"],[310,"polars_core::chunked_array::logical::datetime"],[311,"polars_error"],[312,"polars_time::month_end"],[313,"polars_time::month_start"],[314,"polars_time::round"],[315,"polars_core::datatypes"],[316,"chrono::naive::time"],[317,"polars_core::chunked_array::logical::time"],[318,"polars_time::truncate"],[319,"polars_time::upsample"],[320,"polars_core::frame"],[321,"alloc::string"],[322,"polars_core::utils"],[323,"dyn_clone::sealed"],[324,"polars_time::chunkedarray::string::patterns"],[325,"core::fmt"],[326,"core::hash"],[327,"core::result"],[328,"core::any"],[329,"core::clone"],[330,"polars_time::windows::bounds"],[331,"polars_time::windows::window"],[332,"core::cmp"],[333,"polars_core::datatypes::dtype"],[334,"polars_core::frame::group_by::proxy"],[335,"alloc::vec"],[336,"core::ops::function"],[337,"polars_core::series"],[338,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,0,0,5,0,0,0,0,12,13,46,4,0,14,0,0,18,19,19,0,0,0,27,27,27,27,27,0,0,27,25,27,27,27,27,27,27,27,27,27,27,27,27,27,27,0,27,27,27,27,27,27,27,0,41,0,0,34,34,34,34,34,34,34,34,34,0,34,34,34,34,37,34,34,34,41,34,34,5,0,0,0,44,45,0,45,0,5,44,45,5,5,44,45,0,45,0,45,45,45,0,45,43,4,5,44,45,46,4,4,4,49,43,4,5,44,45,46,49,43,4,5,44,45,46,43,4,5,44,45,46,43,4,5,44,45,46,4,4,4,4,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,0,0,4,5,44,45,4,4,4,5,5,5,44,44,44,45,45,45,43,4,4,5,44,45,49,43,4,5,44,45,46,46,46,46,46,0,0,4,5,44,45,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,4,4,4,4,4,4,4,4,4,4,46,49,46,4,4,4,46,46,46,43,4,5,44,45,46,4,4,4,46,4,46,4,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,49,43,4,5,44,45,46,45,4,4,0,0,57,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59],"f":"`````````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}{{{d{Ah}}{A`{{d{n}}}}}{{Ad{Ah}}}}{{{d{Aj}}{A`{{d{n}}}}}{{Ad{Aj}}}}```{{{d{Al}}{d{An}}{A`{{d{n}}}}}{{Ad{Al}}}}`{{{d{b}}B`B`hj}{{Ad{Bb}}}}{{{d{Bd}}{A`{{d{n}}}}{d{An}}}{{Ad{Bd}}}}{{{d{Bf}}c{d{b}}h}{{Ad{Bh}}}{{Bl{Bj}}}}0``````````{{{d{c}}Bn}C`{}}{{{d{Cb}}}{{d{An}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{Cf}}}Cf}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}{{{d{Cf}}{d{Cf}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cf}}{d{CdCj}}}Cl}{cc{}}{{{d{Cf}}{d{Cdc}}}C`Cn}`{{}Ch}{ce{}{}}{{{d{Cf}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{D`{e}}}{}{}}0{{{d{c}}}Db{}}````{{{d{c}}Bn}C`{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Cdc}}}{{d{Cde}}}{}{}}{{{d{{Dd{c}}}}}{{Dd{c}}}{DfDh}}{{{d{c}}{d{Cde}}}C`{}{}}{Ch{{d{c}}}{}}{Ch{{d{Cdc}}}{}}{ChC`}?{{{d{b}}}{{A`{Cf}}}}>=`{{{d{Cd{Dd{c}}}}{d{b}}}A`Dh}{{{d{CdDj}}{d{{Dn{Dl}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Eb{}{{E`{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00;;;;;;;:::::::{{{d{Ef}}}Ef}{{{d{h}}}h}{{{d{j}}}j}{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{{d{El}}}El}>>>>>>{{{d{h}}{d{h}}}En}{{{d{c}}{d{e}}}En{}{}}{{{d{h}}}Ed}{{{d{h}}}Af}{{}Ej}{Ch{{d{c}}}{}}000000{Ch{{d{Cdc}}}{}}000000{ChC`}000000{{h{d{F`}}{d{b}}}{{Ad{C`}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{C`}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Eh}}{d{Eh}}}Af}{{{d{Ej}}{d{Ej}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Ef}}{d{CdCj}}}Cl}{{{d{h}}{d{CdCj}}}Cl}0{{{d{j}}{d{CdCj}}}Cl}{{{d{Eh}}{d{CdCj}}}Cl}{{{d{Ej}}{d{CdCj}}}Cl}{cc{}}000000{{{d{El}}Edj{A`{{d{n}}}}}{{Ad{Ef}}}}00{{{d{El}}Efjl{A`{{d{n}}}}Ej}{{Ad{Fb}}}}{{hh{d{{Dn{Ed}}}}jl{A`{n}}}{{Ad{Fd}}}}{{El{d{{Dn{Ed}}}}jl{d{{A`{Ff}}}}AfAfEj}{{Fj{Fd{Fh{Ed}}{Fh{Ed}}}}}}{{{d{h}}{d{Cdc}}}C`Cn}{{{d{j}}{d{Cdc}}}C`Cn}{{{d{Eh}}{d{Cdc}}}C`Cn}{{{d{Ej}}{d{Cdc}}}C`Cn}{{}Ch}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}Ed}1{{hEd}h}1{hc{}}3{Edh}{{hhh}El}{{{d{CdFb}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{En}}}}{{{d{El}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bj{}}{{{d{h}}Ed{A`{{d{n}}}}ceg}{{Ad{Ed}}}{{Fn{Ed}{{Fl{Ed}}}}}{{Fn{Ed}{{Fl{f}}}}}{{Fn{f}{{Fl{Ed}}}}}}{{{d{h}}Ed{A`{{d{n}}}}}{{Ad{Ed}}}}40404{c{{D`{e}}}{}{}}0000000000000{{{d{c}}}Db{}}000000{{{d{Ej}}}{{A`{G`}}}}?{{{d{h}}}Af}``{{{d{Gb}}}{{d{Gd}}}}{{{d{Gf}}}{{Ad{Gh}}}}{{{d{Gf}}}{{Ad{Gj}}}}0{{{d{Gf}}}{{Ad{Gl}}}}22112{{{d{Gf}}}{{Ad{Gn}}}}322{{{d{Gf}}{d{b}}}{{Ad{Gd}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",304],[5,"Duration",85,305],[6,"ClosedWindow",85,306],[6,"TimeUnit",307],[6,"Tz",308],[6,"Option",309],[8,"DatetimeChunked",310],[8,"PolarsResult",311],[1,"bool"],[10,"PolarsMonthEnd",0,312],[10,"PolarsMonthStart",0,313],[10,"PolarsRound",0,314],[8,"StringChunked",315],[5,"NaiveTime",316],[8,"TimeChunked",317],[10,"PolarsTruncate",0,318],[10,"PolarsUpsample",0,319],[5,"DataFrame",320],[5,"String",321],[10,"IntoVec",322],[5,"Private",323],[1,"unit"],[10,"AsString",28],[0,"mut"],[6,"Pattern",28,324],[1,"usize"],[5,"Formatter",325],[8,"Result",325],[10,"Hasher",326],[6,"Result",327],[5,"TypeId",328],[5,"DatetimeInfer",60],[10,"Clone",329],[10,"PolarsNumericType",315],[10,"StrpTimeParser",60],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",60],[1,"i64"],[5,"Bounds",85,330],[6,"Label",85,306],[6,"StartBy",85,306],[5,"Window",85,331],[6,"Ordering",332],[6,"DataType",333],[5,"BoundsIter",85,331],[8,"GroupsSlice",334],[8,"TimeZone",333],[5,"Vec",335],[1,"tuple"],[17,"Output"],[10,"Fn",336],[1,"u32"],[10,"AsSeries",283],[5,"Series",337],[10,"TemporalMethods",283],[8,"Int32Chunked",315],[8,"Int8Chunked",315],[8,"BooleanChunked",315],[8,"Int16Chunked",315]],"r":[[1,306],[2,305],[5,312],[6,313],[7,314],[8,318],[9,319],[11,331],[13,338],[14,338],[22,338],[26,28],[34,324],[86,330],[87,331],[88,306],[91,305],[93,306],[101,306],[103,283],[107,331],[170,305],[171,305],[205,306],[206,306]],"b":[[189,"impl-Debug-for-Duration"],[190,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAFwAAAAsADwAHABgAAAAbABcANAACADgAEABKAAEATQATAGIACQBtAFUAygAAAMwAAQDQAAoA4gABAOYAAgDqAAAA7QACAPEAAQD2AAgAAAEAAAIBAAAEARoAIwEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[41,"polars_utils::abs_diff"],[45,"polars_utils::aliases"],[61,"polars_utils::arena"],[121,"polars_utils::atomic"],[141,"polars_utils::binary_search"],[143,"polars_utils::cache"],[179,"polars_utils::cell"],[199,"polars_utils::clmul"],[203,"polars_utils::contention_pool"],[218,"polars_utils::cpuid"],[220,"polars_utils::float"],[226,"polars_utils::floor_divmod"],[228,"polars_utils::functions"],[232,"polars_utils::hashing"],[264,"polars_utils::idx_vec"],[308,"polars_utils::index"],[370,"polars_utils::io"],[372,"polars_utils::iter"],[385,"polars_utils::mem"],[386,"polars_utils::min_max"],[393,"polars_utils::nulls"],[398,"polars_utils::ord"],[400,"polars_utils::partitioned"],[419,"polars_utils::slice"],[433,"polars_utils::sort"],[435,"polars_utils::sync"],[458,"polars_utils::sys"],[472,"polars_utils::total_ord"],[522,"polars_utils::unwrap"],[524,"polars_utils::vec"],[537,"num_traits"],[538,"core::cmp"],[539,"core::marker"],[540,"core::fmt"],[541,"core::clone"],[542,"core::option"],[543,"core::hash"],[544,"core::default"],[545,"core::ops::function"],[546,"core::result"],[547,"core::any"],[548,"core::borrow"],[549,"alloc::sync"],[550,"alloc::vec"],[551,"core::convert"],[552,"core::ops::range"],[553,"core::iter::traits::collect"],[554,"polars_utils::iter::fallible"],[555,"core::slice::iter"],[556,"polars_error"],[557,"std::fs"],[558,"std::path"],[559,"polars_utils::iter::enumerate_idx"],[560,"core::error"],[561,"core::iter::traits::iterator"],[562,"hashbrown::map"],[563,"core::mem::maybe_uninit"],[564,"core::slice::index"],[565,"num_traits::cast"],[566,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,113,0,0,0,0,0,113,10,11,114,115,113,10,11,114,115,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,0,46,0,0,0,0,0,0,52,52,52,52,52,52,53,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,52,52,52,52,52,0,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,0,0,0,66,0,0,0,0,64,65,64,65,0,64,65,64,65,64,65,64,65,64,65,64,64,64,64,65,64,65,64,64,65,66,66,64,64,65,64,65,64,65,68,65,64,64,68,64,65,69,65,70,64,64,65,64,65,64,65,64,65,0,0,0,0,0,78,0,78,73,73,73,73,74,59,78,0,0,80,80,80,80,80,80,67,67,0,67,67,0,0,0,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,0,0,0,0,0,86,88,88,90,0,91,91,92,92,0,0,0,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,0,0,97,97,97,97,97,97,97,97,97,97,97,97,105,0,0,0,0,105,0,100,100,0,0,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,105,100,105,93,101,93,93,102,102,93,93,101,100,100,100,100,0,106,0,0,0,108,0,0,108,108,109,110,111,110,112],"f":"```````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}D`}{Ab{{Al{c}}}{}}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{Edc{}}{cc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}?{{{Al{{Eh{c}}}}}cCb}=<{Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb};;:{{}Bf}0`00{{{Al{Ej}}}Bf}10`{{ElEl}{{En{ElEl}}}}{{{F`{c}}e}{{F`{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fb{c}}}Bb{{Fd{{Db{c}}}}}}{{AbAb{Ff{Ab}}}{{Ff{Ab}}}}{{{F`{c}}g}{{Ch{{F`{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``>={{{Al{Fh}}}Fh}{{{Al{c}}{Al{Ahe}}}B`{}{}}>={{{Al{Fj}}}Ef}{{{Al{Fh}}}Ef}>{{{Al{Fh}}{Al{Fh}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fh}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fh}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fh}}}Bf}{{{Bn{{Al{{Db{Fl}}}}}}Ef}Fh}2{{{Al{c}}}e{}{}}{{{Al{Fh}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fhc{}}``{{{Al{Ah{Fn{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{Fn{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Fn{c}}}}}Ab{}}{{{Al{{Fn{c}}}}}{{Fn{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Fn{c}}}{}}{{{Al{{Fn{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Fn{c}}}}}B`{}}{AbB`}{{{Al{{Fn{c}}}}{Al{{Fn{c}}}}}BfG`}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{Fn{c}}}}e}B`{}{{Gd{}{{Gb{c}}}}}}{{{Al{{Fn{c}}}}{Al{AhBh}}}Bjl}{{{Fb{c}}}{{Fn{c}}}{}}{cc{}}{{{Al{{Db{c}}}}}{{Fn{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gf{c}{{Gb{e}}}}}{}}{e{{Fn{c}}}{}{{Gd{}{{Gb{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{Fn{c}}}}}Bf{}}{{{Al{{Fn{c}}}}}{{Gh{c}}}{}}{{{Al{Ah{Fn{c}}}}}{{Gj{c}}}{}}{{{Al{{Fn{c}}}}}Ab{}}{{}{{Fn{c}}}{}}{{{Al{Ah{Fn{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Fn{c}}}}c}B`{}}0{{{Al{Ah{Fn{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{Fn{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gl}}}}Gl}{{Gn{B`}}}}{{{Al{H`}}}H`}{{{Al{Hb}}}Hb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{H`}}{Al{H`}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hb{{En{GlGl}}}}{{{Al{H`}}{Al{AhBh}}}Bj}{{{Al{Hb}}{Al{AhBh}}}Bj}{cc{}}{GlH`}1{{{Al{{Hd{}{{Gb{c}}}}}}Ab}cHf}0{{{Al{H`}}}Gl}{{}Ab}0`{{{Al{AhHb}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hh}}}Bf}{{{Al{Hb}}}Bf}{{{Al{H`}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hh}}}Ab}{{}H`}{{}Hb}{{{Al{Hj}}}Ab}{{GlGl}Hb}{{HlEf}Gl}{{{Al{H`}}}{{Bn{Gl}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{Gn{Hn}}}{{Fd{I`}}}}0``````{Ib{{`{IbGl}}}}0{Ib{{`{IbCn}}}}0{g{{Ch{Idc}}}If{}{{Gf{c}{{Gb{e}}}}}}{{{Al{AhGf}}}{{Ch{B`c}}}If}{{{Il{}{{Ih{c}}{Ij{e}}}}}e{}{{In{}{{Gb{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{J`J`}J`}000{{{Al{J`}}{Al{J`}}}Bf}0```{{{Al{{Hf{}{{Jb{c}}}}}}}Bf{}}{{{Hf{}{{Jb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEj}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jd{ceg}}}}}{{Al{{Db{{Jf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}}{{Al{Ah{Fb{{Jf{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fb{{Jf{ceg}}}}}{{Jd{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ef}{{Jh{ceg}}}{}{}{}}{{{Al{{Jd{ceg}}}}Ef}{{En{{Jh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ef}{{En{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jd{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jl}}}{{Al{{Db{{Jn{c}}}}}}}{}}{{{Al{K`}}e}Al{}{{Kb{{Db{c}}}}}}{{{Al{AhK`}}e}{{Al{Ah}}}{}{{Kb{{Db{c}}}}}}{{{Al{Kd}}}Bf}{{{Al{{Db{Fl}}}}}Ef}{{{Al{Kf}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kh}}{Ff{Ab}}}Kh}0{{e{Al{Ah{Fb{Fl}}}}Ab}{{Al{Ah{Db{g}}}}}{Kjj}{{Gd{}{{Gb{c}}}}}{Klj}}{{{Al{Kn}}{Al{{Db{{En{GlGl}}}}}}{Al{Ah{Fb{Gl}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{L`{c}}}}}{{L`{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{L`{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{L`{c}}}}{Al{AhBh}}}Bjl}{{}{{L`{c}}}{}}{cc{}}1{{{Al{{L`{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{L`{c}}}}}Bf{}}55{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Lb}}}Ef}:87443```````21{LdLd}{LfLf}{{{Al{{Lh{c}}}}}{{Lh{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BdKj}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lh{c}}}}}EfFj}{AbB`}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfLj}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}BfKj}0{{{Al{{Lh{c}}}}{Al{Ahe}}}B`LlC`}{{}Ab}{ce{}{}}{{{Al{{Lh{c}}}}}BfHf}447{{{Al{{Lh{c}}}}{Al{{Lh{c}}}}}{{Bn{Bd}}}Kj}2{{{Al{c}}}e{}{}}{{{Al{{Mb{}{{Ln{c}}{M`{e}}}}}}}c{}{}}{{{Al{Kj}}{Al{Kj}}}Bd}{{{Al{Lj}}{Al{Lj}}}Bf}{{{Al{Kj}}{Al{Kj}}}Bf}0{{{Al{Ll}}{Al{Ahc}}}B`C`}{{{Al{{Db{Ll}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lh{c}}}eHf{}}`{Mdc{}}``````{{{Al{{Mh{}{{Mf{c}}}}}}g}{{Fb{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mh{}{{Mf{c}}}}g}{{Fb{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMj}}Abc}B`j}{Ml{{En{AbAb}}}}{{{Al{AhMn}}c}B`{}}{{{Al{Ml}}}{{En{AbAb}}}}{{AbLf}N`}","D":"Id","p":[[17,"Abs"],[10,"AbsDiff",41],[10,"Num",537],[10,"PartialOrd",538],[10,"Copy",539],[10,"Debug",540],[10,"Send",539],[10,"Sync",539],[1,"usize"],[8,"PlHashMap",45],[8,"PlHashSet",45],[0,"mut"],[5,"Arena",61],[1,"reference"],[5,"Node",61],[1,"unit"],[10,"Clone",541],[6,"Ordering",538],[1,"bool"],[5,"Formatter",540],[8,"Result",540],[1,"array"],[6,"Option",542],[10,"Hasher",543],[10,"Default",544],[17,"Output"],[10,"FnOnce",545],[6,"Result",546],[10,"FnMut",545],[5,"TypeId",547],[1,"u32"],[5,"SyncCounter",121],[1,"slice"],[10,"Ord",538],[5,"FastFixedCache",143],[10,"Hash",543],[10,"Eq",538],[5,"FastCachedFunc",143],[10,"Sized",539],[10,"Borrow",548],[5,"SyncUnsafeCell",179],[1,"never"],[1,"u64"],[5,"LowContentionPool",203],[10,"IsFloat",220],[10,"FloorDivMod",226],[1,"tuple"],[5,"Arc",549],[5,"Vec",550],[10,"AsRef",551],[5,"Range",552],[5,"BytesHash",232],[10,"DirtyHash",232],[1,"u8"],[5,"UnitVec",264],[10,"PartialEq",538],[17,"Item"],[10,"IntoIterator",553],[10,"FallibleIterator",372,554],[5,"Iter",555],[5,"IterMut",555],[8,"IdxSize",308],[8,"PolarsResult",556],[5,"NullableIdxSize",308],[5,"ChunkId",308],[10,"Indexable",308],[10,"IsNull",393],[10,"Bounded",308],[10,"NullCount",308],[10,"ToIdx",308],[5,"File",557],[5,"Path",558],[10,"EnumerateIdxTrait",372,559],[10,"FromFallibleIterator",372,554],[10,"Error",560],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",372],[10,"Iterator",561],[10,"MinMax",386],[17,"Inner"],[5,"PartitionedHashMap",400],[5,"HashMap",562],[5,"RawEntryBuilder",562],[5,"RawEntryBuilderMut",562],[10,"Slice2Uninit",419],[20,"MaybeUninit",563],[10,"GetSaferUnchecked",419],[10,"SliceIndex",564],[10,"SortedSlice",419],[10,"Extrema",419],[10,"SliceAble",419],[10,"TotalOrd",472],[10,"FromPrimitive",565],[5,"ThreadPool",566],[5,"SyncPtr",435],[5,"MemInfo",458],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",472],[10,"TotalEq",472],[10,"TotalHash",472],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",472],[10,"UnwrapUncheckedRelease",522],[17,"ItemIn"],[10,"ConvertVec",524],[10,"ResizeFaster",524],[10,"IntoRawParts",524],[10,"PushUnchecked",524],[10,"CapacityByFactor",524],[10,"InitHashMaps",45],[8,"PlIndexMap",45],[8,"PlIndexSet",45]],"r":[[0,308],[1,308],[372,559],[373,554],[374,554]],"b":[[287,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[289,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM8BNgAAAAgACgBPAFwAAABeAAEAYQACAGYAEwB7AAkAhgAAAIkABACRAA4AogAFAKoACQC1AAEAuAACALwAAADAAAAAxQAMANMAAQDWAAYA3gAKAOoADgD6AAIA/gALAAsBFQAiAQMAJwEGAC8BJABVAQAAVwEAAFkBBABgARcAeQEAAHsBBgCDAQsAkQEFAJgBAgCcAQ0ArAEEALIBAAC1AQUAvAECAMABAgDEAQAAxgEFAM0BBADUAQAA1gEDAN4BAwDkAQsA8QEDAPYBFQANAgQAEwIDABgCAQA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
